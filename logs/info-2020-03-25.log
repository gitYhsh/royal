2020-03-25 15:21:45.187 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f4a0db1c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:21:47.170 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin] & group[plodes-admin]
2020-03-25 15:21:47.206 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin.yaml] & group[plodes-admin]
2020-03-25 15:21:47.239 [main] INFO  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:91) - Loading nacos data, dataId: 'plodes-admin-dev.yaml', group: 'plodes-admin', data: demo:
    loginUrl: /login
    rememberMeTimeout: 1000
    loginProcessingUrl: /login/form
    maxLoginNum: 1
2020-03-25 15:21:47.244 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:101) - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@664839586 {name='plodes-admin-dev.yaml', properties={demo.rememberMeTimeout=1000, demo.loginUrl=/login, demo.loginProcessingUrl=/login/form, demo.maxLoginNum=1}}, NacosPropertySource@1989332276 {name='plodes-admin.yaml', properties={}}, NacosPropertySource@54176060 {name='plodes-admin', properties={}}]}
2020-03-25 15:21:47.280 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:655) - The following profiles are active: dev
2020-03-25 15:21:48.363 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-25 15:21:48.372 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-03-25 15:21:48.424 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 34ms. Found 0 Redis repository interfaces.
2020-03-25 15:21:48.551 [main] WARN  org.mybatis.logging.Logger.warn(Logger.java:44) - No MyBatis mapper was found in '[com.xlcxx]' package. Please check your configuration.
2020-03-25 15:21:48.607 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=e91956a0-53b4-318c-ab4c-994a25a954c1
2020-03-25 15:21:48.710 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [com.xlcxx.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$21b0f1c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:21:48.749 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f4a0db1c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:21:49.119 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92) - Tomcat initialized with port(s): 8088 (http)
2020-03-25 15:21:49.128 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8088"]
2020-03-25 15:21:49.129 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
2020-03-25 15:21:49.129 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-03-25 15:21:49.257 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-03-25 15:21:49.258 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1964 ms
2020-03-25 15:21:49.872 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1220) - Using default implementation for ThreadExecutor
2020-03-25 15:21:49.883 [main] INFO  org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61) - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-25 15:21:49.883 [main] INFO  org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229) - Quartz Scheduler v.2.3.2 created.
2020-03-25 15:21:50.515 [main] INFO  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003) - {dataSource-1} inited
2020-03-25 15:21:50.522 [main] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.initialize(JobStoreSupport.java:672) - Using db table-based data access locking (synchronization).
2020-03-25 15:21:50.528 [main] INFO  org.quartz.impl.jdbcjobstore.JobStoreCMT.initialize(JobStoreCMT.java:145) - JobStoreCMT initialized.
2020-03-25 15:21:50.529 [main] INFO  org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294) - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'xlcxxScheduler' with instanceId 'DESKTOP-9B1Q9MI1585120909873'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-03-25 15:21:50.529 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1374) - Quartz scheduler 'xlcxxScheduler' initialized from an externally provided properties instance.
2020-03-25 15:21:50.530 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1378) - Quartz scheduler version: 2.3.2
2020-03-25 15:21:50.532 [main] INFO  org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2293) - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@25953be6
2020-03-25 15:21:50.771 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2020-03-25 15:21:50.771 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-25 15:21:50.775 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2020-03-25 15:21:50.775 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-25 15:21:50.893 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) - Initializing ExecutorService 'applicationTaskExecutor'
2020-03-25 15:21:52.142 [main] INFO  org.springframework.cloud.commons.util.InetUtils.convertAddress(InetUtils.java:170) - Cannot determine local hostname
2020-03-25 15:21:52.147 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$1.call(InitUtils.java:56) - initializer namespace from System Property :null
2020-03-25 15:21:52.148 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$2.call(InitUtils.java:65) - initializer namespace from System Environment :null
2020-03-25 15:21:52.149 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$3.call(InitUtils.java:75) - initializer namespace from System Property :null
2020-03-25 15:21:52.170 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) - Initializing ExecutorService
2020-03-25 15:21:52.194 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-03-25 15:21:52.195 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-03-25 15:21:52.195 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-03-25 15:21:52.195 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) - Clear EntityHelper entityTableMap cache.
2020-03-25 15:21:52.512 [main] WARN  org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:558) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springSecurityFilterChain' defined in class path resource [org/springframework/security/config/annotation/web/configuration/WebSecurityConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scopedTarget.securityProperties': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'xlcxx.loginUrl' in value "${xlcxx.loginUrl}"
2020-03-25 15:21:52.538 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:218) - Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-25 15:21:52.541 [main] INFO  org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy(SchedulerFactoryBean.java:845) - Shutting down Quartz Scheduler
2020-03-25 15:21:52.541 [main] INFO  org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:666) - Scheduler xlcxxScheduler_$_DESKTOP-9B1Q9MI1585120909873 shutting down.
2020-03-25 15:21:52.541 [main] INFO  org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585) - Scheduler xlcxxScheduler_$_DESKTOP-9B1Q9MI1585120909873 paused.
2020-03-25 15:21:52.542 [main] INFO  org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:740) - Scheduler xlcxxScheduler_$_DESKTOP-9B1Q9MI1585120909873 shutdown complete.
2020-03-25 15:21:52.542 [main] INFO  com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948) - {dataSource-1} closing ...
2020-03-25 15:21:52.549 [main] INFO  com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020) - {dataSource-1} closed
2020-03-25 15:21:52.551 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Stopping service [Tomcat]
2020-03-25 15:21:52.564 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136) - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-25 15:21:52.571 [main] ERROR org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:826) - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springSecurityFilterChain' defined in class path resource [org/springframework/security/config/annotation/web/configuration/WebSecurityConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scopedTarget.securityProperties': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'xlcxx.loginUrl' in value "${xlcxx.loginUrl}"
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:656) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:484) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878) ~[spring-context-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) ~[spring-context-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141) ~[spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at com.xlcxx.Application.main(Application.java:23) [classes/:?]
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scopedTarget.securityProperties': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'xlcxx.loginUrl' in value "${xlcxx.loginUrl}"
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 21 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scopedTarget.securityProperties': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'xlcxx.loginUrl' in value "${xlcxx.loginUrl}"
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:405) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:359) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:389) ~[spring-cloud-context-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:186) ~[spring-cloud-context-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:356) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at com.xlcxx.config.auth.damain.SecurityProperties$$EnhancerBySpringCGLIB$$6bd580f1.getLoginProcessingUrl(<generated>) ~[classes/:?]
	at com.xlcxx.config.auth.imageCode.img.ImageCodeFilter.afterPropertiesSet(ImageCodeFilter.java:40) ~[classes/:?]
	at com.xlcxx.config.auth.secutityConfig.configure(secutityConfig.java:80) ~[classes/:?]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.getHttp(WebSecurityConfigurerAdapter.java:231) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.init(WebSecurityConfigurerAdapter.java:322) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.init(WebSecurityConfigurerAdapter.java:92) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at com.xlcxx.config.auth.secutityConfig$$EnhancerBySpringCGLIB$$206b0920.init(<generated>) ~[classes/:?]
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.init(AbstractConfiguredSecurityBuilder.java:370) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.doBuild(AbstractConfiguredSecurityBuilder.java:324) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.AbstractSecurityBuilder.build(AbstractSecurityBuilder.java:41) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration.springSecurityFilterChain(WebSecurityConfiguration.java:104) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_191]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 21 more
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'xlcxx.loginUrl' in value "${xlcxx.loginUrl}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:178) ~[spring-core-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:124) ~[spring-core-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:236) ~[spring-core-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210) ~[spring-core-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:175) ~[spring-context-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:909) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1228) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:359) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:389) ~[spring-cloud-context-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:186) ~[spring-cloud-context-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:356) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at com.xlcxx.config.auth.damain.SecurityProperties$$EnhancerBySpringCGLIB$$6bd580f1.getLoginProcessingUrl(<generated>) ~[classes/:?]
	at com.xlcxx.config.auth.imageCode.img.ImageCodeFilter.afterPropertiesSet(ImageCodeFilter.java:40) ~[classes/:?]
	at com.xlcxx.config.auth.secutityConfig.configure(secutityConfig.java:80) ~[classes/:?]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.getHttp(WebSecurityConfigurerAdapter.java:231) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.init(WebSecurityConfigurerAdapter.java:322) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.init(WebSecurityConfigurerAdapter.java:92) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at com.xlcxx.config.auth.secutityConfig$$EnhancerBySpringCGLIB$$206b0920.init(<generated>) ~[classes/:?]
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.init(AbstractConfiguredSecurityBuilder.java:370) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.doBuild(AbstractConfiguredSecurityBuilder.java:324) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.AbstractSecurityBuilder.build(AbstractSecurityBuilder.java:41) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration.springSecurityFilterChain(WebSecurityConfiguration.java:104) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_191]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 21 more
2020-03-25 15:22:54.285 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fe516973] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:22:55.577 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin] & group[plodes-admin]
2020-03-25 15:22:55.587 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin.yaml] & group[plodes-admin]
2020-03-25 15:22:55.601 [main] INFO  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:91) - Loading nacos data, dataId: 'plodes-admin-dev.yaml', group: 'plodes-admin', data: xlcxx:
    loginUrl: /login
    rememberMeTimeout: 1000
    loginProcessingUrl: /login/form
    maxLoginNum: 1
2020-03-25 15:22:55.606 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:101) - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@1999135802 {name='plodes-admin-dev.yaml', properties={xlcxx.rememberMeTimeout=1000, xlcxx.loginProcessingUrl=/login/form, xlcxx.maxLoginNum=1, xlcxx.loginUrl=/login}}, NacosPropertySource@52487168 {name='plodes-admin.yaml', properties={}}, NacosPropertySource@85357160 {name='plodes-admin', properties={}}]}
2020-03-25 15:22:55.686 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:655) - The following profiles are active: dev
2020-03-25 15:22:56.378 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-25 15:22:56.380 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-03-25 15:22:56.421 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 28ms. Found 0 Redis repository interfaces.
2020-03-25 15:22:56.572 [main] WARN  org.mybatis.logging.Logger.warn(Logger.java:44) - No MyBatis mapper was found in '[com.xlcxx]' package. Please check your configuration.
2020-03-25 15:22:56.644 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=e91956a0-53b4-318c-ab4c-994a25a954c1
2020-03-25 15:22:56.747 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [com.xlcxx.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$2b61801b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:22:56.790 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fe516973] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:22:56.992 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92) - Tomcat initialized with port(s): 8088 (http)
2020-03-25 15:22:57.001 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8088"]
2020-03-25 15:22:57.002 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
2020-03-25 15:22:57.003 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-03-25 15:22:57.128 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-03-25 15:22:57.128 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1422 ms
2020-03-25 15:22:57.755 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1220) - Using default implementation for ThreadExecutor
2020-03-25 15:22:57.781 [main] INFO  org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61) - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-25 15:22:57.781 [main] INFO  org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229) - Quartz Scheduler v.2.3.2 created.
2020-03-25 15:22:58.425 [main] INFO  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003) - {dataSource-1} inited
2020-03-25 15:22:58.431 [main] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.initialize(JobStoreSupport.java:672) - Using db table-based data access locking (synchronization).
2020-03-25 15:22:58.435 [main] INFO  org.quartz.impl.jdbcjobstore.JobStoreCMT.initialize(JobStoreCMT.java:145) - JobStoreCMT initialized.
2020-03-25 15:22:58.437 [main] INFO  org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294) - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'xlcxxScheduler' with instanceId 'DESKTOP-9B1Q9MI1585120977756'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-03-25 15:22:58.437 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1374) - Quartz scheduler 'xlcxxScheduler' initialized from an externally provided properties instance.
2020-03-25 15:22:58.438 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1378) - Quartz scheduler version: 2.3.2
2020-03-25 15:22:58.440 [main] INFO  org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2293) - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@b6bccb4
2020-03-25 15:22:58.630 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2020-03-25 15:22:58.631 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-25 15:22:58.635 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2020-03-25 15:22:58.636 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-25 15:22:58.787 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) - Initializing ExecutorService 'applicationTaskExecutor'
2020-03-25 15:22:59.992 [main] INFO  org.springframework.cloud.commons.util.InetUtils.convertAddress(InetUtils.java:170) - Cannot determine local hostname
2020-03-25 15:23:00.006 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$1.call(InitUtils.java:56) - initializer namespace from System Property :null
2020-03-25 15:23:00.009 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$2.call(InitUtils.java:65) - initializer namespace from System Environment :null
2020-03-25 15:23:00.011 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$3.call(InitUtils.java:75) - initializer namespace from System Property :null
2020-03-25 15:23:00.053 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) - Initializing ExecutorService
2020-03-25 15:23:00.079 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-03-25 15:23:00.080 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-03-25 15:23:00.080 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-03-25 15:23:00.081 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) - Clear EntityHelper entityTableMap cache.
2020-03-25 15:23:00.445 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7c7ed72a, org.springframework.security.web.context.SecurityContextPersistenceFilter@6121a7dd, org.springframework.security.web.header.HeaderWriterFilter@750cd36d, org.springframework.security.web.authentication.logout.LogoutFilter@4052913c, com.xlcxx.config.auth.imageCode.img.ImageCodeFilter@22b7ef2b, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@9729a97, org.springframework.security.web.session.ConcurrentSessionFilter@19105a87, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@22b82ddf, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@16bbaab3, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@632241f5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6d421fe, org.springframework.security.web.session.SessionManagementFilter@21733cbe, org.springframework.security.web.access.ExceptionTranslationFilter@3302035b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1934339]
2020-03-25 15:23:01.516 [main] INFO  org.springframework.cloud.commons.util.InetUtils.convertAddress(InetUtils.java:170) - Cannot determine local hostname
2020-03-25 15:23:01.764 [main] INFO  org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:732) - Will start Quartz Scheduler [xlcxxScheduler] in 1 seconds
2020-03-25 15:23:01.774 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-8088"]
2020-03-25 15:23:01.811 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) - Tomcat started on port(s): 8088 (http) with context path '/plodes'
2020-03-25 15:23:01.813 [main] INFO  com.alibaba.nacos.client.naming.beat.BeatReactor.addBeatInfo(BeatReactor.java:58) - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.213.1","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":8088,"scheduled":false,"serviceName":"DEFAULT_GROUP@@plodes-admin","stopped":false,"weight":1.0} to beat map.
2020-03-25 15:23:01.975 [main] INFO  com.alibaba.nacos.client.naming.net.NamingProxy.registerService(NamingProxy.java:172) - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@plodes-admin with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.213.1","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8088,"weight":1.0}
2020-03-25 15:23:02.765 [Quartz Scheduler [xlcxxScheduler]] INFO  org.springframework.scheduling.quartz.SchedulerFactoryBean$1.run(SchedulerFactoryBean.java:748) - Starting Quartz Scheduler now, after delay of 1 seconds
2020-03-25 15:23:03.236 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.logWarnIfNonZero(JobStoreSupport.java:3644) - ClusterManager: detected 1 failed or restarted instances.
2020-03-25 15:23:03.236 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.clusterRecover(JobStoreSupport.java:3503) - ClusterManager: Scanning for instance "DESKTOP-9B1Q9MI1585042943420"'s failed in-progress jobs.
2020-03-25 15:23:03.301 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547) - Scheduler xlcxxScheduler_$_DESKTOP-9B1Q9MI1585120977756 started.
2020-03-25 15:23:03.369 [main] INFO  com.alibaba.cloud.nacos.registry.NacosServiceRegistry.register(NacosServiceRegistry.java:62) - nacos registry, plodes-admin 192.168.213.1:8088 register finished
2020-03-25 15:23:03.373 [main] INFO  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61) - Started Application in 10.925 seconds (JVM running for 12.988)
2020-03-25 15:23:03.377 [main] INFO  com.alibaba.nacos.client.config.impl.ClientWorker.addCacheDataIfAbsent(ClientWorker.java:202) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [subscribe] plodes-admin.yaml+plodes-admin+0cc9a9ed-a7fa-4af5-8a88-82c29e891b08
2020-03-25 15:23:03.378 [main] INFO  com.alibaba.nacos.client.config.impl.CacheData.addListener(CacheData.java:79) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [add-listener] ok, tenant=0cc9a9ed-a7fa-4af5-8a88-82c29e891b08, dataId=plodes-admin.yaml, group=plodes-admin, cnt=1
2020-03-25 15:23:03.379 [main] INFO  com.alibaba.nacos.client.config.impl.ClientWorker.addCacheDataIfAbsent(ClientWorker.java:202) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [subscribe] plodes-admin+plodes-admin+0cc9a9ed-a7fa-4af5-8a88-82c29e891b08
2020-03-25 15:23:03.379 [main] INFO  com.alibaba.nacos.client.config.impl.CacheData.addListener(CacheData.java:79) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [add-listener] ok, tenant=0cc9a9ed-a7fa-4af5-8a88-82c29e891b08, dataId=plodes-admin, group=plodes-admin, cnt=1
2020-03-25 15:23:03.385 [main] INFO  com.alibaba.nacos.client.config.impl.ClientWorker.addCacheDataIfAbsent(ClientWorker.java:202) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [subscribe] plodes-admin-dev.yaml+plodes-admin+0cc9a9ed-a7fa-4af5-8a88-82c29e891b08
2020-03-25 15:23:03.385 [main] INFO  com.alibaba.nacos.client.config.impl.CacheData.addListener(CacheData.java:79) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [add-listener] ok, tenant=0cc9a9ed-a7fa-4af5-8a88-82c29e891b08, dataId=plodes-admin-dev.yaml, group=plodes-admin, cnt=1
2020-03-25 15:23:56.277 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$abe25479] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:23:57.602 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin] & group[plodes-admin]
2020-03-25 15:23:57.615 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin.yaml] & group[plodes-admin]
2020-03-25 15:23:57.658 [main] INFO  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:91) - Loading nacos data, dataId: 'plodes-admin-dev.yaml', group: 'plodes-admin', data: xlcxx:
    loginUrl: /login
    rememberMeTimeout: 1000
    loginProcessingUrl: /login/form
    maxLoginNum: 1
2020-03-25 15:23:57.677 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:101) - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@612716569 {name='plodes-admin-dev.yaml', properties={xlcxx.rememberMeTimeout=1000, xlcxx.loginProcessingUrl=/login/form, xlcxx.maxLoginNum=1, xlcxx.loginUrl=/login}}, NacosPropertySource@985487390 {name='plodes-admin.yaml', properties={}}, NacosPropertySource@1296928719 {name='plodes-admin', properties={}}]}
2020-03-25 15:23:57.743 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:655) - The following profiles are active: dev
2020-03-25 15:23:58.560 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-25 15:23:58.562 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-03-25 15:23:58.612 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 34ms. Found 0 Redis repository interfaces.
2020-03-25 15:23:58.775 [main] WARN  org.mybatis.logging.Logger.warn(Logger.java:44) - No MyBatis mapper was found in '[com.xlcxx]' package. Please check your configuration.
2020-03-25 15:23:58.862 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=e91956a0-53b4-318c-ab4c-994a25a954c1
2020-03-25 15:23:58.964 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [com.xlcxx.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$d8f26b21] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:23:59.007 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$abe25479] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:23:59.202 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92) - Tomcat initialized with port(s): 8088 (http)
2020-03-25 15:23:59.213 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8088"]
2020-03-25 15:23:59.215 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
2020-03-25 15:23:59.216 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-03-25 15:23:59.331 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-03-25 15:23:59.331 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1566 ms
2020-03-25 15:23:59.934 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1220) - Using default implementation for ThreadExecutor
2020-03-25 15:23:59.945 [main] INFO  org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61) - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-25 15:23:59.946 [main] INFO  org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229) - Quartz Scheduler v.2.3.2 created.
2020-03-25 15:24:00.569 [main] INFO  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003) - {dataSource-1} inited
2020-03-25 15:24:00.573 [main] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.initialize(JobStoreSupport.java:672) - Using db table-based data access locking (synchronization).
2020-03-25 15:24:00.575 [main] INFO  org.quartz.impl.jdbcjobstore.JobStoreCMT.initialize(JobStoreCMT.java:145) - JobStoreCMT initialized.
2020-03-25 15:24:00.576 [main] INFO  org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294) - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'xlcxxScheduler' with instanceId 'DESKTOP-9B1Q9MI1585121039935'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-03-25 15:24:00.576 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1374) - Quartz scheduler 'xlcxxScheduler' initialized from an externally provided properties instance.
2020-03-25 15:24:00.576 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1378) - Quartz scheduler version: 2.3.2
2020-03-25 15:24:00.577 [main] INFO  org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2293) - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@267f9765
2020-03-25 15:24:00.752 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2020-03-25 15:24:00.752 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-25 15:24:00.756 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2020-03-25 15:24:00.756 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-25 15:24:00.913 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) - Initializing ExecutorService 'applicationTaskExecutor'
2020-03-25 15:24:02.104 [main] INFO  org.springframework.cloud.commons.util.InetUtils.convertAddress(InetUtils.java:170) - Cannot determine local hostname
2020-03-25 15:24:02.111 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$1.call(InitUtils.java:56) - initializer namespace from System Property :null
2020-03-25 15:24:02.112 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$2.call(InitUtils.java:65) - initializer namespace from System Environment :null
2020-03-25 15:24:02.113 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$3.call(InitUtils.java:75) - initializer namespace from System Property :null
2020-03-25 15:24:02.134 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) - Initializing ExecutorService
2020-03-25 15:24:02.156 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-03-25 15:24:02.157 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-03-25 15:24:02.158 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-03-25 15:24:02.158 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) - Clear EntityHelper entityTableMap cache.
2020-03-25 15:24:02.530 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@62058742, org.springframework.security.web.context.SecurityContextPersistenceFilter@5280688, org.springframework.security.web.header.HeaderWriterFilter@568f4faa, org.springframework.security.web.authentication.logout.LogoutFilter@bfb93cf, com.xlcxx.config.auth.imageCode.img.ImageCodeFilter@aca2fc3, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2a0963be, org.springframework.security.web.session.ConcurrentSessionFilter@2774dcf4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@61ab6521, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@54567b05, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@64910b2d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@36df4c26, org.springframework.security.web.session.SessionManagementFilter@589dfa6f, org.springframework.security.web.access.ExceptionTranslationFilter@729cd862, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3ea48c37]
2020-03-25 15:24:03.604 [main] INFO  org.springframework.cloud.commons.util.InetUtils.convertAddress(InetUtils.java:170) - Cannot determine local hostname
2020-03-25 15:24:03.715 [main] INFO  org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:732) - Will start Quartz Scheduler [xlcxxScheduler] in 1 seconds
2020-03-25 15:24:03.723 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-8088"]
2020-03-25 15:24:03.757 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) - Tomcat started on port(s): 8088 (http) with context path '/plodes'
2020-03-25 15:24:03.759 [main] INFO  com.alibaba.nacos.client.naming.beat.BeatReactor.addBeatInfo(BeatReactor.java:58) - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.213.1","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":8088,"scheduled":false,"serviceName":"DEFAULT_GROUP@@plodes-admin","stopped":false,"weight":1.0} to beat map.
2020-03-25 15:24:03.824 [main] INFO  com.alibaba.nacos.client.naming.net.NamingProxy.registerService(NamingProxy.java:172) - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@plodes-admin with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.213.1","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8088,"weight":1.0}
2020-03-25 15:24:03.856 [main] INFO  com.alibaba.cloud.nacos.registry.NacosServiceRegistry.register(NacosServiceRegistry.java:62) - nacos registry, plodes-admin 192.168.213.1:8088 register finished
2020-03-25 15:24:03.859 [main] INFO  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61) - Started Application in 9.316 seconds (JVM running for 11.914)
2020-03-25 15:24:03.862 [main] INFO  com.alibaba.nacos.client.config.impl.ClientWorker.addCacheDataIfAbsent(ClientWorker.java:202) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [subscribe] plodes-admin.yaml+plodes-admin+0cc9a9ed-a7fa-4af5-8a88-82c29e891b08
2020-03-25 15:24:03.863 [main] INFO  com.alibaba.nacos.client.config.impl.CacheData.addListener(CacheData.java:79) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [add-listener] ok, tenant=0cc9a9ed-a7fa-4af5-8a88-82c29e891b08, dataId=plodes-admin.yaml, group=plodes-admin, cnt=1
2020-03-25 15:24:03.863 [main] INFO  com.alibaba.nacos.client.config.impl.ClientWorker.addCacheDataIfAbsent(ClientWorker.java:202) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [subscribe] plodes-admin+plodes-admin+0cc9a9ed-a7fa-4af5-8a88-82c29e891b08
2020-03-25 15:24:03.864 [main] INFO  com.alibaba.nacos.client.config.impl.CacheData.addListener(CacheData.java:79) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [add-listener] ok, tenant=0cc9a9ed-a7fa-4af5-8a88-82c29e891b08, dataId=plodes-admin, group=plodes-admin, cnt=1
2020-03-25 15:24:03.865 [main] INFO  com.alibaba.nacos.client.config.impl.ClientWorker.addCacheDataIfAbsent(ClientWorker.java:202) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [subscribe] plodes-admin-dev.yaml+plodes-admin+0cc9a9ed-a7fa-4af5-8a88-82c29e891b08
2020-03-25 15:24:03.866 [main] INFO  com.alibaba.nacos.client.config.impl.CacheData.addListener(CacheData.java:79) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [add-listener] ok, tenant=0cc9a9ed-a7fa-4af5-8a88-82c29e891b08, dataId=plodes-admin-dev.yaml, group=plodes-admin, cnt=1
2020-03-25 15:24:04.717 [Quartz Scheduler [xlcxxScheduler]] INFO  org.springframework.scheduling.quartz.SchedulerFactoryBean$1.run(SchedulerFactoryBean.java:748) - Starting Quartz Scheduler now, after delay of 1 seconds
2020-03-25 15:24:05.040 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.logWarnIfNonZero(JobStoreSupport.java:3644) - ClusterManager: detected 1 failed or restarted instances.
2020-03-25 15:24:05.040 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.clusterRecover(JobStoreSupport.java:3503) - ClusterManager: Scanning for instance "DESKTOP-9B1Q9MI1585120977756"'s failed in-progress jobs.
2020-03-25 15:24:05.101 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547) - Scheduler xlcxxScheduler_$_DESKTOP-9B1Q9MI1585121039935 started.
2020-03-25 15:24:40.371 [http-nio-8088-exec-1] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-25 15:24:40.371 [http-nio-8088-exec-1] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525) - Initializing Servlet 'dispatcherServlet'
2020-03-25 15:24:40.495 [http-nio-8088-exec-1] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547) - Completed initialization in 124 ms
2020-03-25 15:24:42.324 [http-nio-8088-exec-3] INFO  com.xlcxx.web.controller.system.LoginController.login(LoginController.java:33) - 引发跳转的请求是：http://192.168.8.230:8088/plodes/
2020-03-25 15:25:26.356 [http-nio-8088-exec-5] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.UserMapper.selectOneByExample
2020-03-25 15:25:26.356 [http-nio-8088-exec-5] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 406 ms
2020-03-25 15:25:26.356 [http-nio-8088-exec-5] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> SELECT user_id,username,password,nickname,dept_id,status FROM t_user WHERE ( ( user_id = '0101695108880048494' ) )
2020-03-25 15:25:26.420 [http-nio-8088-exec-5] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.RoleMapper.selectUserRoleByUsername
2020-03-25 15:25:26.420 [http-nio-8088-exec-5] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 59 ms
2020-03-25 15:25:26.420 [http-nio-8088-exec-5] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> select t_role.* from t_role left join t_user_role on t_role.role_id=t_user_role.role_id where t_user_role.user_id='0101695108880048494'
2020-03-25 15:29:05.777 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a16acc24] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:29:07.093 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin] & group[plodes-admin]
2020-03-25 15:29:07.102 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin.yaml] & group[plodes-admin]
2020-03-25 15:29:07.116 [main] INFO  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:91) - Loading nacos data, dataId: 'plodes-admin-dev.yaml', group: 'plodes-admin', data: xlcxx:
    loginUrl: /login
    rememberMeTimeout: 1000
    loginProcessingUrl: /login/form
    maxLoginNum: 1
2020-03-25 15:29:07.121 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:101) - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@1637601612 {name='plodes-admin-dev.yaml', properties={xlcxx.rememberMeTimeout=1000, xlcxx.loginProcessingUrl=/login/form, xlcxx.maxLoginNum=1, xlcxx.loginUrl=/login}}, NacosPropertySource@842957574 {name='plodes-admin.yaml', properties={}}, NacosPropertySource@170106909 {name='plodes-admin', properties={}}]}
2020-03-25 15:29:07.153 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:655) - The following profiles are active: dev
2020-03-25 15:29:07.813 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-25 15:29:07.815 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-03-25 15:29:07.849 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 23ms. Found 0 Redis repository interfaces.
2020-03-25 15:29:07.986 [main] WARN  org.mybatis.logging.Logger.warn(Logger.java:44) - No MyBatis mapper was found in '[com.xlcxx]' package. Please check your configuration.
2020-03-25 15:29:08.045 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=e91956a0-53b4-318c-ab4c-994a25a954c1
2020-03-25 15:29:08.148 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [com.xlcxx.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$ce7ae2cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:29:08.195 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a16acc24] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:29:08.401 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92) - Tomcat initialized with port(s): 8088 (http)
2020-03-25 15:29:08.409 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8088"]
2020-03-25 15:29:08.410 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
2020-03-25 15:29:08.410 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-03-25 15:29:08.525 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-03-25 15:29:08.525 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1356 ms
2020-03-25 15:29:09.225 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1220) - Using default implementation for ThreadExecutor
2020-03-25 15:29:09.237 [main] INFO  org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61) - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-25 15:29:09.238 [main] INFO  org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229) - Quartz Scheduler v.2.3.2 created.
2020-03-25 15:29:09.498 [main] INFO  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003) - {dataSource-1} inited
2020-03-25 15:29:09.501 [main] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.initialize(JobStoreSupport.java:672) - Using db table-based data access locking (synchronization).
2020-03-25 15:29:09.503 [main] INFO  org.quartz.impl.jdbcjobstore.JobStoreCMT.initialize(JobStoreCMT.java:145) - JobStoreCMT initialized.
2020-03-25 15:29:09.504 [main] INFO  org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294) - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'xlcxxScheduler' with instanceId 'DESKTOP-9B1Q9MI1585121349226'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-03-25 15:29:09.505 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1374) - Quartz scheduler 'xlcxxScheduler' initialized from an externally provided properties instance.
2020-03-25 15:29:09.505 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1378) - Quartz scheduler version: 2.3.2
2020-03-25 15:29:09.506 [main] INFO  org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2293) - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@65c17e38
2020-03-25 15:29:09.746 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2020-03-25 15:29:09.746 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-25 15:29:09.754 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2020-03-25 15:29:09.754 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-25 15:29:09.945 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) - Initializing ExecutorService 'applicationTaskExecutor'
2020-03-25 15:29:27.545 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c4614db3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:29:28.885 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin] & group[plodes-admin]
2020-03-25 15:29:28.897 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin.yaml] & group[plodes-admin]
2020-03-25 15:29:28.909 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin-product.yaml] & group[plodes-admin]
2020-03-25 15:29:28.909 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:101) - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@1748097277 {name='plodes-admin-product.yaml', properties={}}, NacosPropertySource@668760567 {name='plodes-admin.yaml', properties={}}, NacosPropertySource@1803890702 {name='plodes-admin', properties={}}]}
2020-03-25 15:29:28.962 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:655) - The following profiles are active: product
2020-03-25 15:29:29.605 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-25 15:29:29.607 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-03-25 15:29:29.646 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 25ms. Found 0 Redis repository interfaces.
2020-03-25 15:29:29.797 [main] WARN  org.mybatis.logging.Logger.warn(Logger.java:44) - No MyBatis mapper was found in '[com.xlcxx]' package. Please check your configuration.
2020-03-25 15:29:29.861 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=e91956a0-53b4-318c-ab4c-994a25a954c1
2020-03-25 15:29:29.975 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [com.xlcxx.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$f171645b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:29:30.025 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c4614db3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:29:30.272 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92) - Tomcat initialized with port(s): 8088 (http)
2020-03-25 15:29:30.280 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8088"]
2020-03-25 15:29:30.280 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
2020-03-25 15:29:30.281 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-03-25 15:29:30.373 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-03-25 15:29:30.374 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1390 ms
2020-03-25 15:29:31.056 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1220) - Using default implementation for ThreadExecutor
2020-03-25 15:29:31.083 [main] INFO  org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61) - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-25 15:29:31.083 [main] INFO  org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229) - Quartz Scheduler v.2.3.2 created.
2020-03-25 15:29:31.338 [main] INFO  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003) - {dataSource-1} inited
2020-03-25 15:29:31.340 [main] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.initialize(JobStoreSupport.java:672) - Using db table-based data access locking (synchronization).
2020-03-25 15:29:31.342 [main] INFO  org.quartz.impl.jdbcjobstore.JobStoreCMT.initialize(JobStoreCMT.java:145) - JobStoreCMT initialized.
2020-03-25 15:29:31.343 [main] INFO  org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294) - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'xlcxxScheduler' with instanceId 'DESKTOP-9B1Q9MI1585121371058'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-03-25 15:29:31.343 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1374) - Quartz scheduler 'xlcxxScheduler' initialized from an externally provided properties instance.
2020-03-25 15:29:31.343 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1378) - Quartz scheduler version: 2.3.2
2020-03-25 15:29:31.344 [main] INFO  org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2293) - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@b950f82
2020-03-25 15:29:31.518 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2020-03-25 15:29:31.518 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-25 15:29:31.522 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2020-03-25 15:29:31.522 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-25 15:29:31.636 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) - Initializing ExecutorService 'applicationTaskExecutor'
2020-03-25 15:29:32.854 [main] INFO  org.springframework.cloud.commons.util.InetUtils.convertAddress(InetUtils.java:170) - Cannot determine local hostname
2020-03-25 15:29:32.864 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$1.call(InitUtils.java:56) - initializer namespace from System Property :null
2020-03-25 15:29:32.865 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$2.call(InitUtils.java:65) - initializer namespace from System Environment :null
2020-03-25 15:29:32.866 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$3.call(InitUtils.java:75) - initializer namespace from System Property :null
2020-03-25 15:29:32.924 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) - Initializing ExecutorService
2020-03-25 15:29:32.949 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-03-25 15:29:32.949 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-03-25 15:29:32.950 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-03-25 15:29:32.950 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) - Clear EntityHelper entityTableMap cache.
2020-03-25 15:29:33.229 [main] WARN  org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:558) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springSecurityFilterChain' defined in class path resource [org/springframework/security/config/annotation/web/configuration/WebSecurityConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scopedTarget.securityProperties': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'xlcxx.loginUrl' in value "${xlcxx.loginUrl}"
2020-03-25 15:29:33.257 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:218) - Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-25 15:29:33.373 [main] INFO  org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy(SchedulerFactoryBean.java:845) - Shutting down Quartz Scheduler
2020-03-25 15:29:33.373 [main] INFO  org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:666) - Scheduler xlcxxScheduler_$_DESKTOP-9B1Q9MI1585121371058 shutting down.
2020-03-25 15:29:33.373 [main] INFO  org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585) - Scheduler xlcxxScheduler_$_DESKTOP-9B1Q9MI1585121371058 paused.
2020-03-25 15:29:33.374 [main] INFO  org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:740) - Scheduler xlcxxScheduler_$_DESKTOP-9B1Q9MI1585121371058 shutdown complete.
2020-03-25 15:29:33.375 [main] INFO  com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948) - {dataSource-1} closing ...
2020-03-25 15:29:33.419 [main] INFO  com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020) - {dataSource-1} closed
2020-03-25 15:29:33.420 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Stopping service [Tomcat]
2020-03-25 15:29:33.436 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136) - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-25 15:29:33.460 [main] ERROR org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:826) - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springSecurityFilterChain' defined in class path resource [org/springframework/security/config/annotation/web/configuration/WebSecurityConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scopedTarget.securityProperties': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'xlcxx.loginUrl' in value "${xlcxx.loginUrl}"
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:656) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:484) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878) ~[spring-context-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) ~[spring-context-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141) ~[spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at com.xlcxx.Application.main(Application.java:23) [classes/:?]
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scopedTarget.securityProperties': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'xlcxx.loginUrl' in value "${xlcxx.loginUrl}"
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 21 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scopedTarget.securityProperties': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'xlcxx.loginUrl' in value "${xlcxx.loginUrl}"
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:405) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:359) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:389) ~[spring-cloud-context-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:186) ~[spring-cloud-context-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:356) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at com.xlcxx.config.auth.damain.SecurityProperties$$EnhancerBySpringCGLIB$$84f06879.getLoginProcessingUrl(<generated>) ~[classes/:?]
	at com.xlcxx.config.auth.imageCode.img.ImageCodeFilter.afterPropertiesSet(ImageCodeFilter.java:40) ~[classes/:?]
	at com.xlcxx.config.auth.secutityConfig.configure(secutityConfig.java:80) ~[classes/:?]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.getHttp(WebSecurityConfigurerAdapter.java:231) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.init(WebSecurityConfigurerAdapter.java:322) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.init(WebSecurityConfigurerAdapter.java:92) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at com.xlcxx.config.auth.secutityConfig$$EnhancerBySpringCGLIB$$f02b7bb7.init(<generated>) ~[classes/:?]
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.init(AbstractConfiguredSecurityBuilder.java:370) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.doBuild(AbstractConfiguredSecurityBuilder.java:324) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.AbstractSecurityBuilder.build(AbstractSecurityBuilder.java:41) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration.springSecurityFilterChain(WebSecurityConfiguration.java:104) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_191]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 21 more
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'xlcxx.loginUrl' in value "${xlcxx.loginUrl}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:178) ~[spring-core-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:124) ~[spring-core-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:236) ~[spring-core-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210) ~[spring-core-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:175) ~[spring-context-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:909) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1228) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:359) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:389) ~[spring-cloud-context-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:186) ~[spring-cloud-context-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:356) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at com.xlcxx.config.auth.damain.SecurityProperties$$EnhancerBySpringCGLIB$$84f06879.getLoginProcessingUrl(<generated>) ~[classes/:?]
	at com.xlcxx.config.auth.imageCode.img.ImageCodeFilter.afterPropertiesSet(ImageCodeFilter.java:40) ~[classes/:?]
	at com.xlcxx.config.auth.secutityConfig.configure(secutityConfig.java:80) ~[classes/:?]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.getHttp(WebSecurityConfigurerAdapter.java:231) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.init(WebSecurityConfigurerAdapter.java:322) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.init(WebSecurityConfigurerAdapter.java:92) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at com.xlcxx.config.auth.secutityConfig$$EnhancerBySpringCGLIB$$f02b7bb7.init(<generated>) ~[classes/:?]
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.init(AbstractConfiguredSecurityBuilder.java:370) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.doBuild(AbstractConfiguredSecurityBuilder.java:324) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.AbstractSecurityBuilder.build(AbstractSecurityBuilder.java:41) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration.springSecurityFilterChain(WebSecurityConfiguration.java:104) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_191]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 21 more
2020-03-25 15:30:04.919 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f98fd221] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:30:06.249 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin] & group[plodes-admin]
2020-03-25 15:30:06.258 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin.yaml] & group[plodes-admin]
2020-03-25 15:30:06.279 [main] INFO  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:91) - Loading nacos data, dataId: 'plodes-admin-dev.yaml', group: 'plodes-admin', data: xlcxx:
    loginUrl: /login
    rememberMeTimeout: 1000
    loginProcessingUrl: /login/form
    maxLoginNum: 1
2020-03-25 15:30:06.285 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:101) - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@1969347346 {name='plodes-admin-dev.yaml', properties={xlcxx.rememberMeTimeout=1000, xlcxx.loginProcessingUrl=/login/form, xlcxx.maxLoginNum=1, xlcxx.loginUrl=/login}}, NacosPropertySource@855724043 {name='plodes-admin.yaml', properties={}}, NacosPropertySource@615853374 {name='plodes-admin', properties={}}]}
2020-03-25 15:30:06.346 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:655) - The following profiles are active: dev
2020-03-25 15:30:07.043 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-25 15:30:07.046 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-03-25 15:30:07.092 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 30ms. Found 0 Redis repository interfaces.
2020-03-25 15:30:07.258 [main] WARN  org.mybatis.logging.Logger.warn(Logger.java:44) - No MyBatis mapper was found in '[com.xlcxx]' package. Please check your configuration.
2020-03-25 15:30:07.314 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=e91956a0-53b4-318c-ab4c-994a25a954c1
2020-03-25 15:30:07.402 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [com.xlcxx.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$269fe8c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:30:07.441 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f98fd221] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:30:07.644 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92) - Tomcat initialized with port(s): 8088 (http)
2020-03-25 15:30:07.652 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8088"]
2020-03-25 15:30:07.653 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
2020-03-25 15:30:07.653 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-03-25 15:30:07.762 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-03-25 15:30:07.762 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1387 ms
2020-03-25 15:30:08.386 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1220) - Using default implementation for ThreadExecutor
2020-03-25 15:30:08.398 [main] INFO  org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61) - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-25 15:30:08.399 [main] INFO  org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229) - Quartz Scheduler v.2.3.2 created.
2020-03-25 15:30:08.640 [main] INFO  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003) - {dataSource-1} inited
2020-03-25 15:30:08.644 [main] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.initialize(JobStoreSupport.java:672) - Using db table-based data access locking (synchronization).
2020-03-25 15:30:08.646 [main] INFO  org.quartz.impl.jdbcjobstore.JobStoreCMT.initialize(JobStoreCMT.java:145) - JobStoreCMT initialized.
2020-03-25 15:30:08.647 [main] INFO  org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294) - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'xlcxxScheduler' with instanceId 'DESKTOP-9B1Q9MI1585121408387'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-03-25 15:30:08.647 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1374) - Quartz scheduler 'xlcxxScheduler' initialized from an externally provided properties instance.
2020-03-25 15:30:08.648 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1378) - Quartz scheduler version: 2.3.2
2020-03-25 15:30:08.651 [main] INFO  org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2293) - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@2a87ba34
2020-03-25 15:30:08.814 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2020-03-25 15:30:08.815 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-25 15:30:08.820 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2020-03-25 15:30:08.820 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-25 15:30:08.968 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) - Initializing ExecutorService 'applicationTaskExecutor'
2020-03-25 15:30:10.202 [main] INFO  org.springframework.cloud.commons.util.InetUtils.convertAddress(InetUtils.java:170) - Cannot determine local hostname
2020-03-25 15:30:10.207 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$1.call(InitUtils.java:56) - initializer namespace from System Property :null
2020-03-25 15:30:10.207 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$2.call(InitUtils.java:65) - initializer namespace from System Environment :null
2020-03-25 15:30:10.208 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$3.call(InitUtils.java:75) - initializer namespace from System Property :null
2020-03-25 15:30:10.229 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) - Initializing ExecutorService
2020-03-25 15:30:10.253 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-03-25 15:30:10.254 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-03-25 15:30:10.255 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-03-25 15:30:10.255 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) - Clear EntityHelper entityTableMap cache.
2020-03-25 15:30:10.594 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2bdb5e0f, org.springframework.security.web.context.SecurityContextPersistenceFilter@50778bde, org.springframework.security.web.header.HeaderWriterFilter@334540a0, org.springframework.security.web.authentication.logout.LogoutFilter@6ce15112, com.xlcxx.config.auth.imageCode.img.ImageCodeFilter@5c9e8a67, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7af0d91b, org.springframework.security.web.session.ConcurrentSessionFilter@7ef8e623, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4af12a63, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7c7ed72a, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@1682e6a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2262f0d8, org.springframework.security.web.session.SessionManagementFilter@b428830, org.springframework.security.web.access.ExceptionTranslationFilter@6fef75c6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@16ac4d3d]
2020-03-25 15:30:11.666 [main] INFO  org.springframework.cloud.commons.util.InetUtils.convertAddress(InetUtils.java:170) - Cannot determine local hostname
2020-03-25 15:30:11.846 [main] INFO  org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:732) - Will start Quartz Scheduler [xlcxxScheduler] in 1 seconds
2020-03-25 15:30:11.858 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-8088"]
2020-03-25 15:30:11.921 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) - Tomcat started on port(s): 8088 (http) with context path '/plodes'
2020-03-25 15:30:11.924 [main] INFO  com.alibaba.nacos.client.naming.beat.BeatReactor.addBeatInfo(BeatReactor.java:58) - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.213.1","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":8088,"scheduled":false,"serviceName":"DEFAULT_GROUP@@plodes-admin","stopped":false,"weight":1.0} to beat map.
2020-03-25 15:30:12.009 [main] INFO  com.alibaba.nacos.client.naming.net.NamingProxy.registerService(NamingProxy.java:172) - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@plodes-admin with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.213.1","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8088,"weight":1.0}
2020-03-25 15:30:12.041 [main] INFO  com.alibaba.cloud.nacos.registry.NacosServiceRegistry.register(NacosServiceRegistry.java:62) - nacos registry, plodes-admin 192.168.213.1:8088 register finished
2020-03-25 15:30:12.044 [main] INFO  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61) - Started Application in 9.083 seconds (JVM running for 11.325)
2020-03-25 15:30:12.048 [main] INFO  com.alibaba.nacos.client.config.impl.ClientWorker.addCacheDataIfAbsent(ClientWorker.java:202) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [subscribe] plodes-admin.yaml+plodes-admin+0cc9a9ed-a7fa-4af5-8a88-82c29e891b08
2020-03-25 15:30:12.049 [main] INFO  com.alibaba.nacos.client.config.impl.CacheData.addListener(CacheData.java:79) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [add-listener] ok, tenant=0cc9a9ed-a7fa-4af5-8a88-82c29e891b08, dataId=plodes-admin.yaml, group=plodes-admin, cnt=1
2020-03-25 15:30:12.050 [main] INFO  com.alibaba.nacos.client.config.impl.ClientWorker.addCacheDataIfAbsent(ClientWorker.java:202) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [subscribe] plodes-admin+plodes-admin+0cc9a9ed-a7fa-4af5-8a88-82c29e891b08
2020-03-25 15:30:12.050 [main] INFO  com.alibaba.nacos.client.config.impl.CacheData.addListener(CacheData.java:79) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [add-listener] ok, tenant=0cc9a9ed-a7fa-4af5-8a88-82c29e891b08, dataId=plodes-admin, group=plodes-admin, cnt=1
2020-03-25 15:30:12.053 [main] INFO  com.alibaba.nacos.client.config.impl.ClientWorker.addCacheDataIfAbsent(ClientWorker.java:202) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [subscribe] plodes-admin-dev.yaml+plodes-admin+0cc9a9ed-a7fa-4af5-8a88-82c29e891b08
2020-03-25 15:30:12.053 [main] INFO  com.alibaba.nacos.client.config.impl.CacheData.addListener(CacheData.java:79) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [add-listener] ok, tenant=0cc9a9ed-a7fa-4af5-8a88-82c29e891b08, dataId=plodes-admin-dev.yaml, group=plodes-admin, cnt=1
2020-03-25 15:30:12.848 [Quartz Scheduler [xlcxxScheduler]] INFO  org.springframework.scheduling.quartz.SchedulerFactoryBean$1.run(SchedulerFactoryBean.java:748) - Starting Quartz Scheduler now, after delay of 1 seconds
2020-03-25 15:30:13.171 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.logWarnIfNonZero(JobStoreSupport.java:3644) - ClusterManager: detected 1 failed or restarted instances.
2020-03-25 15:30:13.171 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.clusterRecover(JobStoreSupport.java:3503) - ClusterManager: Scanning for instance "DESKTOP-9B1Q9MI1585121039935"'s failed in-progress jobs.
2020-03-25 15:30:13.223 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547) - Scheduler xlcxxScheduler_$_DESKTOP-9B1Q9MI1585121408387 started.
2020-03-25 15:32:15.155 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e930ae1d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:32:16.689 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin] & group[plodes-admin]
2020-03-25 15:32:16.701 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin.yaml] & group[plodes-admin]
2020-03-25 15:32:16.716 [main] INFO  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:91) - Loading nacos data, dataId: 'plodes-admin-product.yaml', group: 'plodes-admin', data: xlcxx:
    loginUrl: /login
    rememberMeTimeout: 1000
    loginProcessingUrl: /login/form
    maxLoginNum: 1
    
2020-03-25 15:32:16.722 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:101) - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@405488475 {name='plodes-admin-product.yaml', properties={xlcxx.rememberMeTimeout=1000, xlcxx.loginProcessingUrl=/login/form, xlcxx.maxLoginNum=1, xlcxx.loginUrl=/login}}, NacosPropertySource@80756779 {name='plodes-admin.yaml', properties={}}, NacosPropertySource@49969897 {name='plodes-admin', properties={}}]}
2020-03-25 15:32:16.833 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:655) - The following profiles are active: product
2020-03-25 15:32:17.543 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-25 15:32:17.547 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-03-25 15:32:17.603 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 35ms. Found 0 Redis repository interfaces.
2020-03-25 15:32:17.748 [main] WARN  org.mybatis.logging.Logger.warn(Logger.java:44) - No MyBatis mapper was found in '[com.xlcxx]' package. Please check your configuration.
2020-03-25 15:32:17.806 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=e91956a0-53b4-318c-ab4c-994a25a954c1
2020-03-25 15:32:17.899 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [com.xlcxx.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$1640c4c5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:32:17.938 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e930ae1d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:32:18.158 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92) - Tomcat initialized with port(s): 8088 (http)
2020-03-25 15:32:18.168 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8088"]
2020-03-25 15:32:18.169 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
2020-03-25 15:32:18.170 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-03-25 15:32:18.274 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-03-25 15:32:18.274 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1419 ms
2020-03-25 15:32:18.932 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1220) - Using default implementation for ThreadExecutor
2020-03-25 15:32:18.943 [main] INFO  org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61) - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-25 15:32:18.943 [main] INFO  org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229) - Quartz Scheduler v.2.3.2 created.
2020-03-25 15:32:19.204 [main] INFO  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003) - {dataSource-1} inited
2020-03-25 15:32:19.208 [main] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.initialize(JobStoreSupport.java:672) - Using db table-based data access locking (synchronization).
2020-03-25 15:32:19.210 [main] INFO  org.quartz.impl.jdbcjobstore.JobStoreCMT.initialize(JobStoreCMT.java:145) - JobStoreCMT initialized.
2020-03-25 15:32:19.211 [main] INFO  org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294) - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'xlcxxScheduler' with instanceId 'DESKTOP-9B1Q9MI1585121538933'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-03-25 15:32:19.211 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1374) - Quartz scheduler 'xlcxxScheduler' initialized from an externally provided properties instance.
2020-03-25 15:32:19.211 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1378) - Quartz scheduler version: 2.3.2
2020-03-25 15:32:19.212 [main] INFO  org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2293) - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@5b251fb9
2020-03-25 15:32:19.420 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2020-03-25 15:32:19.420 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-25 15:32:19.428 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2020-03-25 15:32:19.429 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-25 15:32:19.564 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) - Initializing ExecutorService 'applicationTaskExecutor'
2020-03-25 15:32:20.804 [main] INFO  org.springframework.cloud.commons.util.InetUtils.convertAddress(InetUtils.java:170) - Cannot determine local hostname
2020-03-25 15:32:20.809 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$1.call(InitUtils.java:56) - initializer namespace from System Property :null
2020-03-25 15:32:20.810 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$2.call(InitUtils.java:65) - initializer namespace from System Environment :null
2020-03-25 15:32:20.811 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$3.call(InitUtils.java:75) - initializer namespace from System Property :null
2020-03-25 15:32:20.835 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) - Initializing ExecutorService
2020-03-25 15:32:20.859 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-03-25 15:32:20.860 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-03-25 15:32:20.860 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-03-25 15:32:20.861 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) - Clear EntityHelper entityTableMap cache.
2020-03-25 15:32:21.244 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2c8a445b, org.springframework.security.web.context.SecurityContextPersistenceFilter@54f2df29, org.springframework.security.web.header.HeaderWriterFilter@38089dae, org.springframework.security.web.authentication.logout.LogoutFilter@328e4ec2, com.xlcxx.config.auth.imageCode.img.ImageCodeFilter@356b6b5d, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@52c46334, org.springframework.security.web.session.ConcurrentSessionFilter@632241f5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@655203e3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@100d0218, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@54567b05, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@37b1149b, org.springframework.security.web.session.SessionManagementFilter@5dfd31f4, org.springframework.security.web.access.ExceptionTranslationFilter@4052913c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@74f4a2ba]
2020-03-25 15:32:22.317 [main] INFO  org.springframework.cloud.commons.util.InetUtils.convertAddress(InetUtils.java:170) - Cannot determine local hostname
2020-03-25 15:32:22.389 [main] INFO  org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:732) - Will start Quartz Scheduler [xlcxxScheduler] in 1 seconds
2020-03-25 15:32:22.398 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-8088"]
2020-03-25 15:32:22.436 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) - Tomcat started on port(s): 8088 (http) with context path '/plodes'
2020-03-25 15:32:22.439 [main] INFO  com.alibaba.nacos.client.naming.beat.BeatReactor.addBeatInfo(BeatReactor.java:58) - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.213.1","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":8088,"scheduled":false,"serviceName":"DEFAULT_GROUP@@plodes-admin","stopped":false,"weight":1.0} to beat map.
2020-03-25 15:32:22.513 [main] INFO  com.alibaba.nacos.client.naming.net.NamingProxy.registerService(NamingProxy.java:172) - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@plodes-admin with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.213.1","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8088,"weight":1.0}
2020-03-25 15:32:22.543 [main] INFO  com.alibaba.cloud.nacos.registry.NacosServiceRegistry.register(NacosServiceRegistry.java:62) - nacos registry, plodes-admin 192.168.213.1:8088 register finished
2020-03-25 15:32:22.546 [main] INFO  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61) - Started Application in 9.044 seconds (JVM running for 11.581)
2020-03-25 15:32:22.553 [main] INFO  com.alibaba.nacos.client.config.impl.ClientWorker.addCacheDataIfAbsent(ClientWorker.java:202) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [subscribe] plodes-admin.yaml+plodes-admin+0cc9a9ed-a7fa-4af5-8a88-82c29e891b08
2020-03-25 15:32:22.553 [main] INFO  com.alibaba.nacos.client.config.impl.CacheData.addListener(CacheData.java:79) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [add-listener] ok, tenant=0cc9a9ed-a7fa-4af5-8a88-82c29e891b08, dataId=plodes-admin.yaml, group=plodes-admin, cnt=1
2020-03-25 15:32:22.560 [main] INFO  com.alibaba.nacos.client.config.impl.ClientWorker.addCacheDataIfAbsent(ClientWorker.java:202) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [subscribe] plodes-admin-product.yaml+plodes-admin+0cc9a9ed-a7fa-4af5-8a88-82c29e891b08
2020-03-25 15:32:22.560 [main] INFO  com.alibaba.nacos.client.config.impl.CacheData.addListener(CacheData.java:79) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [add-listener] ok, tenant=0cc9a9ed-a7fa-4af5-8a88-82c29e891b08, dataId=plodes-admin-product.yaml, group=plodes-admin, cnt=1
2020-03-25 15:32:22.560 [main] INFO  com.alibaba.nacos.client.config.impl.ClientWorker.addCacheDataIfAbsent(ClientWorker.java:202) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [subscribe] plodes-admin+plodes-admin+0cc9a9ed-a7fa-4af5-8a88-82c29e891b08
2020-03-25 15:32:22.560 [main] INFO  com.alibaba.nacos.client.config.impl.CacheData.addListener(CacheData.java:79) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [add-listener] ok, tenant=0cc9a9ed-a7fa-4af5-8a88-82c29e891b08, dataId=plodes-admin, group=plodes-admin, cnt=1
2020-03-25 15:32:23.390 [Quartz Scheduler [xlcxxScheduler]] INFO  org.springframework.scheduling.quartz.SchedulerFactoryBean$1.run(SchedulerFactoryBean.java:748) - Starting Quartz Scheduler now, after delay of 1 seconds
2020-03-25 15:32:23.699 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.logWarnIfNonZero(JobStoreSupport.java:3644) - ClusterManager: detected 1 failed or restarted instances.
2020-03-25 15:32:23.699 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.clusterRecover(JobStoreSupport.java:3503) - ClusterManager: Scanning for instance "DESKTOP-9B1Q9MI1585121408387"'s failed in-progress jobs.
2020-03-25 15:32:23.739 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547) - Scheduler xlcxxScheduler_$_DESKTOP-9B1Q9MI1585121538933 started.
2020-03-25 15:32:44.375 [http-nio-8088-exec-1] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-25 15:32:44.375 [http-nio-8088-exec-1] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525) - Initializing Servlet 'dispatcherServlet'
2020-03-25 15:32:44.386 [http-nio-8088-exec-1] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547) - Completed initialization in 10 ms
2020-03-25 15:32:44.575 [http-nio-8088-exec-1] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.UserMapper.selectOneByExample
2020-03-25 15:32:44.575 [http-nio-8088-exec-1] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 31 ms
2020-03-25 15:32:44.576 [http-nio-8088-exec-1] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> SELECT user_id,username,password,nickname,dept_id,status FROM t_user WHERE ( ( user_id = '0101695108880048494' ) )
2020-03-25 15:32:44.592 [http-nio-8088-exec-1] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.RoleMapper.selectUserRoleByUsername
2020-03-25 15:32:44.592 [http-nio-8088-exec-1] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 11 ms
2020-03-25 15:32:44.592 [http-nio-8088-exec-1] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> select t_role.* from t_role left join t_user_role on t_role.role_id=t_user_role.role_id where t_user_role.user_id='0101695108880048494'
2020-03-25 15:33:02.211 [http-nio-8088-exec-9] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.UserMapper.selectOneByExample
2020-03-25 15:33:02.211 [http-nio-8088-exec-9] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 4 ms
2020-03-25 15:33:02.211 [http-nio-8088-exec-9] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> SELECT user_id,username,password,nickname,dept_id,status FROM t_user WHERE ( ( user_id = '0101695108880048494' ) )
2020-03-25 15:33:02.217 [http-nio-8088-exec-9] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.RoleMapper.selectUserRoleByUsername
2020-03-25 15:33:02.217 [http-nio-8088-exec-9] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 5 ms
2020-03-25 15:33:02.218 [http-nio-8088-exec-9] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> select t_role.* from t_role left join t_user_role on t_role.role_id=t_user_role.role_id where t_user_role.user_id='0101695108880048494'
2020-03-25 15:34:58.154 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3f6b7452] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:34:59.694 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin] & group[plodes-admin]
2020-03-25 15:34:59.707 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin.yaml] & group[plodes-admin]
2020-03-25 15:34:59.708 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:101) - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@981159997 {name='plodes-admin.yaml', properties={}}, NacosPropertySource@85121323 {name='plodes-admin', properties={}}]}
2020-03-25 15:34:59.780 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651) - No active profile set, falling back to default profiles: default
2020-03-25 15:35:01.006 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-25 15:35:01.009 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-03-25 15:35:01.043 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 20ms. Found 0 Redis repository interfaces.
2020-03-25 15:35:01.188 [main] WARN  org.mybatis.logging.Logger.warn(Logger.java:44) - No MyBatis mapper was found in '[com.xlcxx]' package. Please check your configuration.
2020-03-25 15:35:01.255 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=e91956a0-53b4-318c-ab4c-994a25a954c1
2020-03-25 15:35:01.358 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [com.xlcxx.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$6c7b8afa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:35:01.400 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3f6b7452] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:35:01.639 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92) - Tomcat initialized with port(s): 8088 (http)
2020-03-25 15:35:01.648 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8088"]
2020-03-25 15:35:01.649 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
2020-03-25 15:35:01.649 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-03-25 15:35:01.758 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-03-25 15:35:01.758 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1957 ms
2020-03-25 15:35:02.446 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1220) - Using default implementation for ThreadExecutor
2020-03-25 15:35:02.461 [main] INFO  org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61) - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-25 15:35:02.462 [main] INFO  org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229) - Quartz Scheduler v.2.3.2 created.
2020-03-25 15:35:02.728 [main] INFO  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003) - {dataSource-1} inited
2020-03-25 15:35:02.732 [main] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.initialize(JobStoreSupport.java:672) - Using db table-based data access locking (synchronization).
2020-03-25 15:35:02.734 [main] INFO  org.quartz.impl.jdbcjobstore.JobStoreCMT.initialize(JobStoreCMT.java:145) - JobStoreCMT initialized.
2020-03-25 15:35:02.735 [main] INFO  org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294) - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'xlcxxScheduler' with instanceId 'DESKTOP-9B1Q9MI1585121702448'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-03-25 15:35:02.735 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1374) - Quartz scheduler 'xlcxxScheduler' initialized from an externally provided properties instance.
2020-03-25 15:35:02.735 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1378) - Quartz scheduler version: 2.3.2
2020-03-25 15:35:02.736 [main] INFO  org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2293) - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@5b251fb9
2020-03-25 15:35:02.953 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2020-03-25 15:35:02.953 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-25 15:35:02.957 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2020-03-25 15:35:02.957 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-25 15:35:03.099 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) - Initializing ExecutorService 'applicationTaskExecutor'
2020-03-25 15:35:04.352 [main] INFO  org.springframework.cloud.commons.util.InetUtils.convertAddress(InetUtils.java:170) - Cannot determine local hostname
2020-03-25 15:35:04.357 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$1.call(InitUtils.java:56) - initializer namespace from System Property :null
2020-03-25 15:35:04.358 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$2.call(InitUtils.java:65) - initializer namespace from System Environment :null
2020-03-25 15:35:04.359 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$3.call(InitUtils.java:75) - initializer namespace from System Property :null
2020-03-25 15:35:04.385 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) - Initializing ExecutorService
2020-03-25 15:35:04.414 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-03-25 15:35:04.415 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-03-25 15:35:04.415 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-03-25 15:35:04.415 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) - Clear EntityHelper entityTableMap cache.
2020-03-25 15:35:04.729 [main] WARN  org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:558) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springSecurityFilterChain' defined in class path resource [org/springframework/security/config/annotation/web/configuration/WebSecurityConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scopedTarget.securityProperties': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'xlcxx.loginUrl' in value "${xlcxx.loginUrl}"
2020-03-25 15:35:04.735 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:218) - Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-25 15:35:04.738 [main] INFO  org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy(SchedulerFactoryBean.java:845) - Shutting down Quartz Scheduler
2020-03-25 15:35:04.738 [main] INFO  org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:666) - Scheduler xlcxxScheduler_$_DESKTOP-9B1Q9MI1585121702448 shutting down.
2020-03-25 15:35:04.738 [main] INFO  org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585) - Scheduler xlcxxScheduler_$_DESKTOP-9B1Q9MI1585121702448 paused.
2020-03-25 15:35:04.739 [main] INFO  org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:740) - Scheduler xlcxxScheduler_$_DESKTOP-9B1Q9MI1585121702448 shutdown complete.
2020-03-25 15:35:04.740 [main] INFO  com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948) - {dataSource-1} closing ...
2020-03-25 15:35:04.749 [main] INFO  com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020) - {dataSource-1} closed
2020-03-25 15:35:04.750 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Stopping service [Tomcat]
2020-03-25 15:35:04.762 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136) - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-25 15:35:04.770 [main] ERROR org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:826) - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springSecurityFilterChain' defined in class path resource [org/springframework/security/config/annotation/web/configuration/WebSecurityConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scopedTarget.securityProperties': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'xlcxx.loginUrl' in value "${xlcxx.loginUrl}"
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:656) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:484) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878) ~[spring-context-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) ~[spring-context-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141) ~[spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at com.xlcxx.Application.main(Application.java:23) [classes/:?]
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scopedTarget.securityProperties': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'xlcxx.loginUrl' in value "${xlcxx.loginUrl}"
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 21 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scopedTarget.securityProperties': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'xlcxx.loginUrl' in value "${xlcxx.loginUrl}"
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:405) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:359) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:389) ~[spring-cloud-context-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:186) ~[spring-cloud-context-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:356) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at com.xlcxx.config.auth.damain.SecurityProperties$$EnhancerBySpringCGLIB$$471bef99.getLoginProcessingUrl(<generated>) ~[classes/:?]
	at com.xlcxx.config.auth.imageCode.img.ImageCodeFilter.afterPropertiesSet(ImageCodeFilter.java:40) ~[classes/:?]
	at com.xlcxx.config.auth.secutityConfig.configure(secutityConfig.java:80) ~[classes/:?]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.getHttp(WebSecurityConfigurerAdapter.java:231) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.init(WebSecurityConfigurerAdapter.java:322) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.init(WebSecurityConfigurerAdapter.java:92) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at com.xlcxx.config.auth.secutityConfig$$EnhancerBySpringCGLIB$$6b35a256.init(<generated>) ~[classes/:?]
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.init(AbstractConfiguredSecurityBuilder.java:370) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.doBuild(AbstractConfiguredSecurityBuilder.java:324) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.AbstractSecurityBuilder.build(AbstractSecurityBuilder.java:41) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration.springSecurityFilterChain(WebSecurityConfiguration.java:104) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_191]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 21 more
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'xlcxx.loginUrl' in value "${xlcxx.loginUrl}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:178) ~[spring-core-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:124) ~[spring-core-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:236) ~[spring-core-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210) ~[spring-core-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:175) ~[spring-context-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:909) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1228) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:359) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:389) ~[spring-cloud-context-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:186) ~[spring-cloud-context-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:356) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at com.xlcxx.config.auth.damain.SecurityProperties$$EnhancerBySpringCGLIB$$471bef99.getLoginProcessingUrl(<generated>) ~[classes/:?]
	at com.xlcxx.config.auth.imageCode.img.ImageCodeFilter.afterPropertiesSet(ImageCodeFilter.java:40) ~[classes/:?]
	at com.xlcxx.config.auth.secutityConfig.configure(secutityConfig.java:80) ~[classes/:?]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.getHttp(WebSecurityConfigurerAdapter.java:231) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.init(WebSecurityConfigurerAdapter.java:322) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.init(WebSecurityConfigurerAdapter.java:92) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at com.xlcxx.config.auth.secutityConfig$$EnhancerBySpringCGLIB$$6b35a256.init(<generated>) ~[classes/:?]
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.init(AbstractConfiguredSecurityBuilder.java:370) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.doBuild(AbstractConfiguredSecurityBuilder.java:324) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.AbstractSecurityBuilder.build(AbstractSecurityBuilder.java:41) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration.springSecurityFilterChain(WebSecurityConfiguration.java:104) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_191]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 21 more
2020-03-25 15:35:19.991 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$cb4577d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:35:21.269 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin] & group[plodes-admin]
2020-03-25 15:35:21.286 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin.yaml] & group[plodes-admin]
2020-03-25 15:35:21.300 [main] INFO  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:91) - Loading nacos data, dataId: 'plodes-admin-product.yaml', group: 'plodes-admin', data: xlcxx:
    loginUrl: /login
    rememberMeTimeout: 1000
    loginProcessingUrl: /login/form
    maxLoginNum: 1
    
2020-03-25 15:35:21.305 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:101) - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@1513029997 {name='plodes-admin-product.yaml', properties={xlcxx.rememberMeTimeout=1000, xlcxx.loginProcessingUrl=/login/form, xlcxx.maxLoginNum=1, xlcxx.loginUrl=/login}}, NacosPropertySource@439925336 {name='plodes-admin.yaml', properties={}}, NacosPropertySource@986944742 {name='plodes-admin', properties={}}]}
2020-03-25 15:35:21.340 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:655) - The following profiles are active: product
2020-03-25 15:35:22.076 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-25 15:35:22.078 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-03-25 15:35:22.124 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 31ms. Found 0 Redis repository interfaces.
2020-03-25 15:35:22.260 [main] WARN  org.mybatis.logging.Logger.warn(Logger.java:44) - No MyBatis mapper was found in '[com.xlcxx]' package. Please check your configuration.
2020-03-25 15:35:22.312 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=e91956a0-53b4-318c-ab4c-994a25a954c1
2020-03-25 15:35:22.409 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [com.xlcxx.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$f8558e81] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:35:22.448 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$cb4577d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:35:22.635 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92) - Tomcat initialized with port(s): 8088 (http)
2020-03-25 15:35:22.645 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8088"]
2020-03-25 15:35:22.646 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
2020-03-25 15:35:22.646 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-03-25 15:35:22.779 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-03-25 15:35:22.779 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1420 ms
2020-03-25 15:35:23.481 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1220) - Using default implementation for ThreadExecutor
2020-03-25 15:35:23.496 [main] INFO  org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61) - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-25 15:35:23.497 [main] INFO  org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229) - Quartz Scheduler v.2.3.2 created.
2020-03-25 15:35:23.744 [main] INFO  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003) - {dataSource-1} inited
2020-03-25 15:35:23.749 [main] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.initialize(JobStoreSupport.java:672) - Using db table-based data access locking (synchronization).
2020-03-25 15:35:23.751 [main] INFO  org.quartz.impl.jdbcjobstore.JobStoreCMT.initialize(JobStoreCMT.java:145) - JobStoreCMT initialized.
2020-03-25 15:35:23.752 [main] INFO  org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294) - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'xlcxxScheduler' with instanceId 'DESKTOP-9B1Q9MI1585121723482'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-03-25 15:35:23.753 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1374) - Quartz scheduler 'xlcxxScheduler' initialized from an externally provided properties instance.
2020-03-25 15:35:23.753 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1378) - Quartz scheduler version: 2.3.2
2020-03-25 15:35:23.754 [main] INFO  org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2293) - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@629e8212
2020-03-25 15:35:23.978 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2020-03-25 15:35:23.978 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-25 15:35:23.985 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2020-03-25 15:35:23.985 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-25 15:35:24.114 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) - Initializing ExecutorService 'applicationTaskExecutor'
2020-03-25 15:35:25.309 [main] INFO  org.springframework.cloud.commons.util.InetUtils.convertAddress(InetUtils.java:170) - Cannot determine local hostname
2020-03-25 15:35:25.327 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$1.call(InitUtils.java:56) - initializer namespace from System Property :null
2020-03-25 15:35:25.329 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$2.call(InitUtils.java:65) - initializer namespace from System Environment :null
2020-03-25 15:35:25.331 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$3.call(InitUtils.java:75) - initializer namespace from System Property :null
2020-03-25 15:35:25.382 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) - Initializing ExecutorService
2020-03-25 15:35:25.411 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-03-25 15:35:25.412 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-03-25 15:35:25.412 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-03-25 15:35:25.413 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) - Clear EntityHelper entityTableMap cache.
2020-03-25 15:35:25.795 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6f07d414, org.springframework.security.web.context.SecurityContextPersistenceFilter@bfb93cf, org.springframework.security.web.header.HeaderWriterFilter@510da778, org.springframework.security.web.authentication.logout.LogoutFilter@3d8d970e, com.xlcxx.config.auth.imageCode.img.ImageCodeFilter@8ac12e6, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@50778bde, org.springframework.security.web.session.ConcurrentSessionFilter@4c2c44e8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7bc2ae16, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5f61e002, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@69ffdaa8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@40faff12, org.springframework.security.web.session.SessionManagementFilter@54567b05, org.springframework.security.web.access.ExceptionTranslationFilter@12fccff0, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6a4af081]
2020-03-25 15:35:26.870 [main] INFO  org.springframework.cloud.commons.util.InetUtils.convertAddress(InetUtils.java:170) - Cannot determine local hostname
2020-03-25 15:35:26.987 [main] INFO  org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:732) - Will start Quartz Scheduler [xlcxxScheduler] in 1 seconds
2020-03-25 15:35:26.998 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-8088"]
2020-03-25 15:35:27.036 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) - Tomcat started on port(s): 8088 (http) with context path '/plodes'
2020-03-25 15:35:27.038 [main] INFO  com.alibaba.nacos.client.naming.beat.BeatReactor.addBeatInfo(BeatReactor.java:58) - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.213.1","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":8088,"scheduled":false,"serviceName":"DEFAULT_GROUP@@plodes-admin","stopped":false,"weight":1.0} to beat map.
2020-03-25 15:35:27.115 [main] INFO  com.alibaba.nacos.client.naming.net.NamingProxy.registerService(NamingProxy.java:172) - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@plodes-admin with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.213.1","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8088,"weight":1.0}
2020-03-25 15:35:27.136 [main] INFO  com.alibaba.cloud.nacos.registry.NacosServiceRegistry.register(NacosServiceRegistry.java:62) - nacos registry, plodes-admin 192.168.213.1:8088 register finished
2020-03-25 15:35:27.139 [main] INFO  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61) - Started Application in 8.901 seconds (JVM running for 10.77)
2020-03-25 15:35:27.143 [main] INFO  com.alibaba.nacos.client.config.impl.ClientWorker.addCacheDataIfAbsent(ClientWorker.java:202) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [subscribe] plodes-admin.yaml+plodes-admin+0cc9a9ed-a7fa-4af5-8a88-82c29e891b08
2020-03-25 15:35:27.144 [main] INFO  com.alibaba.nacos.client.config.impl.CacheData.addListener(CacheData.java:79) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [add-listener] ok, tenant=0cc9a9ed-a7fa-4af5-8a88-82c29e891b08, dataId=plodes-admin.yaml, group=plodes-admin, cnt=1
2020-03-25 15:35:27.155 [main] INFO  com.alibaba.nacos.client.config.impl.ClientWorker.addCacheDataIfAbsent(ClientWorker.java:202) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [subscribe] plodes-admin-product.yaml+plodes-admin+0cc9a9ed-a7fa-4af5-8a88-82c29e891b08
2020-03-25 15:35:27.155 [main] INFO  com.alibaba.nacos.client.config.impl.CacheData.addListener(CacheData.java:79) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [add-listener] ok, tenant=0cc9a9ed-a7fa-4af5-8a88-82c29e891b08, dataId=plodes-admin-product.yaml, group=plodes-admin, cnt=1
2020-03-25 15:35:27.155 [main] INFO  com.alibaba.nacos.client.config.impl.ClientWorker.addCacheDataIfAbsent(ClientWorker.java:202) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [subscribe] plodes-admin+plodes-admin+0cc9a9ed-a7fa-4af5-8a88-82c29e891b08
2020-03-25 15:35:27.156 [main] INFO  com.alibaba.nacos.client.config.impl.CacheData.addListener(CacheData.java:79) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [add-listener] ok, tenant=0cc9a9ed-a7fa-4af5-8a88-82c29e891b08, dataId=plodes-admin, group=plodes-admin, cnt=1
2020-03-25 15:35:27.989 [Quartz Scheduler [xlcxxScheduler]] INFO  org.springframework.scheduling.quartz.SchedulerFactoryBean$1.run(SchedulerFactoryBean.java:748) - Starting Quartz Scheduler now, after delay of 1 seconds
2020-03-25 15:35:28.283 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.logWarnIfNonZero(JobStoreSupport.java:3644) - ClusterManager: detected 1 failed or restarted instances.
2020-03-25 15:35:28.284 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.clusterRecover(JobStoreSupport.java:3503) - ClusterManager: Scanning for instance "DESKTOP-9B1Q9MI1585121538933"'s failed in-progress jobs.
2020-03-25 15:35:28.329 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547) - Scheduler xlcxxScheduler_$_DESKTOP-9B1Q9MI1585121723482 started.
2020-03-25 15:35:34.584 [http-nio-8088-exec-1] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-25 15:35:34.584 [http-nio-8088-exec-1] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525) - Initializing Servlet 'dispatcherServlet'
2020-03-25 15:35:34.590 [http-nio-8088-exec-1] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547) - Completed initialization in 6 ms
2020-03-25 15:35:34.747 [http-nio-8088-exec-1] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.UserMapper.selectOneByExample
2020-03-25 15:35:34.748 [http-nio-8088-exec-1] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 26 ms
2020-03-25 15:35:34.748 [http-nio-8088-exec-1] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> SELECT user_id,username,password,nickname,dept_id,status FROM t_user WHERE ( ( user_id = '0101695108880048494' ) )
2020-03-25 15:35:34.758 [http-nio-8088-exec-1] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.RoleMapper.selectUserRoleByUsername
2020-03-25 15:35:34.758 [http-nio-8088-exec-1] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 7 ms
2020-03-25 15:35:34.759 [http-nio-8088-exec-1] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> select t_role.* from t_role left join t_user_role on t_role.role_id=t_user_role.role_id where t_user_role.user_id='0101695108880048494'
2020-03-25 15:36:37.082 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e930ae1d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:36:38.361 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin] & group[plodes-admin]
2020-03-25 15:36:38.372 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin.yaml] & group[plodes-admin]
2020-03-25 15:36:38.387 [main] INFO  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:91) - Loading nacos data, dataId: 'plodes-admin-product.yaml', group: 'plodes-admin', data: xlcxx:
    loginUrl: /login
    rememberMeTimeout: 1000
    loginProcessingUrl: /login/form
    maxLoginNum: 1
    
2020-03-25 15:36:38.392 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:101) - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@405488475 {name='plodes-admin-product.yaml', properties={xlcxx.rememberMeTimeout=1000, xlcxx.loginProcessingUrl=/login/form, xlcxx.maxLoginNum=1, xlcxx.loginUrl=/login}}, NacosPropertySource@80756779 {name='plodes-admin.yaml', properties={}}, NacosPropertySource@49969897 {name='plodes-admin', properties={}}]}
2020-03-25 15:36:38.453 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:655) - The following profiles are active: product
2020-03-25 15:36:39.349 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-25 15:36:39.437 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-03-25 15:36:39.491 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 36ms. Found 0 Redis repository interfaces.
2020-03-25 15:36:39.653 [main] WARN  org.mybatis.logging.Logger.warn(Logger.java:44) - No MyBatis mapper was found in '[com.xlcxx]' package. Please check your configuration.
2020-03-25 15:36:39.714 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=e91956a0-53b4-318c-ab4c-994a25a954c1
2020-03-25 15:36:39.810 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [com.xlcxx.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$1640c4c5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:36:39.861 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e930ae1d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:36:40.077 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92) - Tomcat initialized with port(s): 8088 (http)
2020-03-25 15:36:40.087 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8088"]
2020-03-25 15:36:40.088 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
2020-03-25 15:36:40.089 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-03-25 15:36:40.215 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-03-25 15:36:40.216 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1725 ms
2020-03-25 15:36:41.016 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1220) - Using default implementation for ThreadExecutor
2020-03-25 15:36:41.031 [main] INFO  org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61) - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-25 15:36:41.031 [main] INFO  org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229) - Quartz Scheduler v.2.3.2 created.
2020-03-25 15:36:41.313 [main] INFO  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003) - {dataSource-1} inited
2020-03-25 15:36:41.316 [main] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.initialize(JobStoreSupport.java:672) - Using db table-based data access locking (synchronization).
2020-03-25 15:36:41.318 [main] INFO  org.quartz.impl.jdbcjobstore.JobStoreCMT.initialize(JobStoreCMT.java:145) - JobStoreCMT initialized.
2020-03-25 15:36:41.319 [main] INFO  org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294) - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'xlcxxScheduler' with instanceId 'DESKTOP-9B1Q9MI1585121801018'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-03-25 15:36:41.320 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1374) - Quartz scheduler 'xlcxxScheduler' initialized from an externally provided properties instance.
2020-03-25 15:36:41.320 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1378) - Quartz scheduler version: 2.3.2
2020-03-25 15:36:41.321 [main] INFO  org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2293) - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@5b251fb9
2020-03-25 15:36:41.504 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2020-03-25 15:36:41.504 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-25 15:36:41.510 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2020-03-25 15:36:41.511 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-25 15:36:41.717 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) - Initializing ExecutorService 'applicationTaskExecutor'
2020-03-25 15:36:42.937 [main] INFO  org.springframework.cloud.commons.util.InetUtils.convertAddress(InetUtils.java:170) - Cannot determine local hostname
2020-03-25 15:36:42.943 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$1.call(InitUtils.java:56) - initializer namespace from System Property :null
2020-03-25 15:36:42.943 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$2.call(InitUtils.java:65) - initializer namespace from System Environment :null
2020-03-25 15:36:42.944 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$3.call(InitUtils.java:75) - initializer namespace from System Property :null
2020-03-25 15:36:42.966 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) - Initializing ExecutorService
2020-03-25 15:36:42.990 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-03-25 15:36:42.990 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-03-25 15:36:42.991 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-03-25 15:36:42.991 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) - Clear EntityHelper entityTableMap cache.
2020-03-25 15:36:43.350 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2c8a445b, org.springframework.security.web.context.SecurityContextPersistenceFilter@54f2df29, org.springframework.security.web.header.HeaderWriterFilter@38089dae, org.springframework.security.web.authentication.logout.LogoutFilter@328e4ec2, com.xlcxx.config.auth.imageCode.img.ImageCodeFilter@356b6b5d, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@52c46334, org.springframework.security.web.session.ConcurrentSessionFilter@632241f5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@655203e3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@100d0218, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@54567b05, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@37b1149b, org.springframework.security.web.session.SessionManagementFilter@5dfd31f4, org.springframework.security.web.access.ExceptionTranslationFilter@4052913c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@74f4a2ba]
2020-03-25 15:36:44.438 [main] INFO  org.springframework.cloud.commons.util.InetUtils.convertAddress(InetUtils.java:170) - Cannot determine local hostname
2020-03-25 15:36:44.527 [main] INFO  org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:732) - Will start Quartz Scheduler [xlcxxScheduler] in 1 seconds
2020-03-25 15:36:44.537 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-8088"]
2020-03-25 15:36:44.576 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) - Tomcat started on port(s): 8088 (http) with context path '/plodes'
2020-03-25 15:36:44.579 [main] INFO  com.alibaba.nacos.client.naming.beat.BeatReactor.addBeatInfo(BeatReactor.java:58) - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.213.1","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":8088,"scheduled":false,"serviceName":"DEFAULT_GROUP@@plodes-admin","stopped":false,"weight":1.0} to beat map.
2020-03-25 15:36:44.659 [main] INFO  com.alibaba.nacos.client.naming.net.NamingProxy.registerService(NamingProxy.java:172) - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@plodes-admin with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.213.1","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8088,"weight":1.0}
2020-03-25 15:36:44.696 [main] INFO  com.alibaba.cloud.nacos.registry.NacosServiceRegistry.register(NacosServiceRegistry.java:62) - nacos registry, plodes-admin 192.168.213.1:8088 register finished
2020-03-25 15:36:44.700 [main] INFO  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61) - Started Application in 9.314 seconds (JVM running for 11.929)
2020-03-25 15:36:44.706 [main] INFO  com.alibaba.nacos.client.config.impl.ClientWorker.addCacheDataIfAbsent(ClientWorker.java:202) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [subscribe] plodes-admin.yaml+plodes-admin+0cc9a9ed-a7fa-4af5-8a88-82c29e891b08
2020-03-25 15:36:44.707 [main] INFO  com.alibaba.nacos.client.config.impl.CacheData.addListener(CacheData.java:79) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [add-listener] ok, tenant=0cc9a9ed-a7fa-4af5-8a88-82c29e891b08, dataId=plodes-admin.yaml, group=plodes-admin, cnt=1
2020-03-25 15:36:44.711 [main] INFO  com.alibaba.nacos.client.config.impl.ClientWorker.addCacheDataIfAbsent(ClientWorker.java:202) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [subscribe] plodes-admin-product.yaml+plodes-admin+0cc9a9ed-a7fa-4af5-8a88-82c29e891b08
2020-03-25 15:36:44.711 [main] INFO  com.alibaba.nacos.client.config.impl.CacheData.addListener(CacheData.java:79) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [add-listener] ok, tenant=0cc9a9ed-a7fa-4af5-8a88-82c29e891b08, dataId=plodes-admin-product.yaml, group=plodes-admin, cnt=1
2020-03-25 15:36:44.711 [main] INFO  com.alibaba.nacos.client.config.impl.ClientWorker.addCacheDataIfAbsent(ClientWorker.java:202) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [subscribe] plodes-admin+plodes-admin+0cc9a9ed-a7fa-4af5-8a88-82c29e891b08
2020-03-25 15:36:44.711 [main] INFO  com.alibaba.nacos.client.config.impl.CacheData.addListener(CacheData.java:79) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [add-listener] ok, tenant=0cc9a9ed-a7fa-4af5-8a88-82c29e891b08, dataId=plodes-admin, group=plodes-admin, cnt=1
2020-03-25 15:36:45.529 [Quartz Scheduler [xlcxxScheduler]] INFO  org.springframework.scheduling.quartz.SchedulerFactoryBean$1.run(SchedulerFactoryBean.java:748) - Starting Quartz Scheduler now, after delay of 1 seconds
2020-03-25 15:36:45.826 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.logWarnIfNonZero(JobStoreSupport.java:3644) - ClusterManager: detected 1 failed or restarted instances.
2020-03-25 15:36:45.826 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.clusterRecover(JobStoreSupport.java:3503) - ClusterManager: Scanning for instance "DESKTOP-9B1Q9MI1585121723482"'s failed in-progress jobs.
2020-03-25 15:36:45.870 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547) - Scheduler xlcxxScheduler_$_DESKTOP-9B1Q9MI1585121801018 started.
2020-03-25 15:36:54.742 [http-nio-8088-exec-1] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-25 15:36:54.742 [http-nio-8088-exec-1] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525) - Initializing Servlet 'dispatcherServlet'
2020-03-25 15:36:54.751 [http-nio-8088-exec-1] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547) - Completed initialization in 9 ms
2020-03-25 15:36:54.878 [http-nio-8088-exec-1] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.UserMapper.selectOneByExample
2020-03-25 15:36:54.879 [http-nio-8088-exec-1] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 26 ms
2020-03-25 15:36:54.879 [http-nio-8088-exec-1] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> SELECT user_id,username,password,nickname,dept_id,status FROM t_user WHERE ( ( user_id = '0101695108880048494' ) )
2020-03-25 15:36:54.890 [http-nio-8088-exec-1] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.RoleMapper.selectUserRoleByUsername
2020-03-25 15:36:54.890 [http-nio-8088-exec-1] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 7 ms
2020-03-25 15:36:54.890 [http-nio-8088-exec-1] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> select t_role.* from t_role left join t_user_role on t_role.role_id=t_user_role.role_id where t_user_role.user_id='0101695108880048494'
2020-03-25 15:37:09.525 [http-nio-8088-exec-8] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.UserMapper.selectOneByExample
2020-03-25 15:37:09.525 [http-nio-8088-exec-8] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 4 ms
2020-03-25 15:37:09.525 [http-nio-8088-exec-8] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> SELECT user_id,username,password,nickname,dept_id,status FROM t_user WHERE ( ( user_id = '0101695108880048494' ) )
2020-03-25 15:37:09.531 [http-nio-8088-exec-8] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.RoleMapper.selectUserRoleByUsername
2020-03-25 15:37:09.532 [http-nio-8088-exec-8] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 5 ms
2020-03-25 15:37:09.532 [http-nio-8088-exec-8] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> select t_role.* from t_role left join t_user_role on t_role.role_id=t_user_role.role_id where t_user_role.user_id='0101695108880048494'
2020-03-25 15:37:46.237 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8fafaa9f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:37:47.560 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin] & group[plodes-admin]
2020-03-25 15:37:47.568 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin.yaml] & group[plodes-admin]
2020-03-25 15:37:47.580 [main] INFO  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:91) - Loading nacos data, dataId: 'plodes-admin-product.yaml', group: 'plodes-admin', data: xlcxx:
    loginUrl: /login
    rememberMeTimeout: 1000
    loginProcessingUrl: /login/form
    maxLoginNum: 1
    
2020-03-25 15:37:47.586 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:101) - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@1970779713 {name='plodes-admin-product.yaml', properties={xlcxx.rememberMeTimeout=1000, xlcxx.loginProcessingUrl=/login/form, xlcxx.maxLoginNum=1, xlcxx.loginUrl=/login}}, NacosPropertySource@923013679 {name='plodes-admin.yaml', properties={}}, NacosPropertySource@827579900 {name='plodes-admin', properties={}}]}
2020-03-25 15:37:47.620 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:655) - The following profiles are active: product
2020-03-25 15:37:48.226 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-25 15:37:48.228 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-03-25 15:37:48.265 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 25ms. Found 0 Redis repository interfaces.
2020-03-25 15:37:48.404 [main] WARN  org.mybatis.logging.Logger.warn(Logger.java:44) - No MyBatis mapper was found in '[com.xlcxx]' package. Please check your configuration.
2020-03-25 15:37:48.453 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=4eb433c5-0f39-35ef-80ba-dc76493cc0d8
2020-03-25 15:37:48.546 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [com.xlcxx.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$bcbfc147] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:37:48.587 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8fafaa9f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:37:48.763 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92) - Tomcat initialized with port(s): 8088 (http)
2020-03-25 15:37:48.772 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8088"]
2020-03-25 15:37:48.773 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
2020-03-25 15:37:48.773 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-03-25 15:37:48.879 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-03-25 15:37:48.880 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1239 ms
2020-03-25 15:37:49.465 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1220) - Using default implementation for ThreadExecutor
2020-03-25 15:37:49.476 [main] INFO  org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61) - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-25 15:37:49.476 [main] INFO  org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229) - Quartz Scheduler v.2.3.2 created.
2020-03-25 15:37:49.702 [main] INFO  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003) - {dataSource-1} inited
2020-03-25 15:37:49.705 [main] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.initialize(JobStoreSupport.java:672) - Using db table-based data access locking (synchronization).
2020-03-25 15:37:49.706 [main] INFO  org.quartz.impl.jdbcjobstore.JobStoreCMT.initialize(JobStoreCMT.java:145) - JobStoreCMT initialized.
2020-03-25 15:37:49.707 [main] INFO  org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294) - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'xlcxxScheduler' with instanceId 'DESKTOP-9B1Q9MI1585121869467'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-03-25 15:37:49.708 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1374) - Quartz scheduler 'xlcxxScheduler' initialized from an externally provided properties instance.
2020-03-25 15:37:49.708 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1378) - Quartz scheduler version: 2.3.2
2020-03-25 15:37:49.710 [main] INFO  org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2293) - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@c2df90e
2020-03-25 15:37:49.870 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2020-03-25 15:37:49.871 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-25 15:37:49.875 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2020-03-25 15:37:49.875 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-25 15:37:50.017 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) - Initializing ExecutorService 'applicationTaskExecutor'
2020-03-25 15:37:51.213 [main] INFO  org.springframework.cloud.commons.util.InetUtils.convertAddress(InetUtils.java:170) - Cannot determine local hostname
2020-03-25 15:37:51.231 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$1.call(InitUtils.java:56) - initializer namespace from System Property :null
2020-03-25 15:37:51.234 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$2.call(InitUtils.java:65) - initializer namespace from System Environment :null
2020-03-25 15:37:51.236 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$3.call(InitUtils.java:75) - initializer namespace from System Property :null
2020-03-25 15:37:51.279 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) - Initializing ExecutorService
2020-03-25 15:37:51.304 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-03-25 15:37:51.304 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-03-25 15:37:51.305 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-03-25 15:37:51.306 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) - Clear EntityHelper entityTableMap cache.
2020-03-25 15:37:51.583 [main] WARN  org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:558) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springSecurityFilterChain' defined in class path resource [org/springframework/security/config/annotation/web/configuration/WebSecurityConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is java.lang.IllegalArgumentException: loginFormUrl cannot be null
2020-03-25 15:37:51.589 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:218) - Shutting down ExecutorService 'applicationTaskExecutor'
2020-03-25 15:37:51.590 [main] INFO  org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy(SchedulerFactoryBean.java:845) - Shutting down Quartz Scheduler
2020-03-25 15:37:51.590 [main] INFO  org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:666) - Scheduler xlcxxScheduler_$_DESKTOP-9B1Q9MI1585121869467 shutting down.
2020-03-25 15:37:51.591 [main] INFO  org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585) - Scheduler xlcxxScheduler_$_DESKTOP-9B1Q9MI1585121869467 paused.
2020-03-25 15:37:51.591 [main] INFO  org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:740) - Scheduler xlcxxScheduler_$_DESKTOP-9B1Q9MI1585121869467 shutdown complete.
2020-03-25 15:37:51.592 [main] INFO  com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948) - {dataSource-1} closing ...
2020-03-25 15:37:51.600 [main] INFO  com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020) - {dataSource-1} closed
2020-03-25 15:37:51.601 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Stopping service [Tomcat]
2020-03-25 15:37:51.613 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136) - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-25 15:37:51.619 [main] ERROR org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:826) - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springSecurityFilterChain' defined in class path resource [org/springframework/security/config/annotation/web/configuration/WebSecurityConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is java.lang.IllegalArgumentException: loginFormUrl cannot be null
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:656) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:484) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878) ~[spring-context-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) ~[spring-context-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141) ~[spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at com.xlcxx.Application.main(Application.java:24) [classes/:?]
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is java.lang.IllegalArgumentException: loginFormUrl cannot be null
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 21 more
Caused by: java.lang.IllegalArgumentException: loginFormUrl cannot be null
	at org.springframework.util.Assert.notNull(Assert.java:198) ~[spring-core-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.<init>(LoginUrlAuthenticationEntryPoint.java:95) ~[spring-security-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer.setLoginPage(AbstractAuthenticationFilterConfigurer.java:430) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer.loginPage(AbstractAuthenticationFilterConfigurer.java:326) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer.loginPage(FormLoginConfigurer.java:183) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at com.xlcxx.config.auth.secutityConfig.configure(secutityConfig.java:83) ~[classes/:?]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.getHttp(WebSecurityConfigurerAdapter.java:231) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.init(WebSecurityConfigurerAdapter.java:322) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.init(WebSecurityConfigurerAdapter.java:92) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at com.xlcxx.config.auth.secutityConfig$$EnhancerBySpringCGLIB$$bb79d8a3.init(<generated>) ~[classes/:?]
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.init(AbstractConfiguredSecurityBuilder.java:370) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.doBuild(AbstractConfiguredSecurityBuilder.java:324) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.AbstractSecurityBuilder.build(AbstractSecurityBuilder.java:41) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration.springSecurityFilterChain(WebSecurityConfiguration.java:104) ~[spring-security-config-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_191]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 21 more
2020-03-25 15:38:24.692 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7a6e4fa8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:38:26.024 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin] & group[plodes-admin]
2020-03-25 15:38:26.034 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin.yaml] & group[plodes-admin]
2020-03-25 15:38:26.046 [main] INFO  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:91) - Loading nacos data, dataId: 'plodes-admin-dev.yaml', group: 'plodes-admin', data: xlcxx:
    loginUrl: /login
    rememberMeTimeout: 1000
    loginProcessingUrl: /login/form
    maxLoginNum: 1
2020-03-25 15:38:26.052 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:101) - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@1869247587 {name='plodes-admin-dev.yaml', properties={xlcxx.rememberMeTimeout=1000, xlcxx.loginProcessingUrl=/login/form, xlcxx.maxLoginNum=1, xlcxx.loginUrl=/login}}, NacosPropertySource@467313213 {name='plodes-admin.yaml', properties={}}, NacosPropertySource@2045913001 {name='plodes-admin', properties={}}]}
2020-03-25 15:38:26.098 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:655) - The following profiles are active: dev
2020-03-25 15:38:26.745 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-25 15:38:26.750 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-03-25 15:38:26.808 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 39ms. Found 0 Redis repository interfaces.
2020-03-25 15:38:26.962 [main] WARN  org.mybatis.logging.Logger.warn(Logger.java:44) - No MyBatis mapper was found in '[com.xlcxx]' package. Please check your configuration.
2020-03-25 15:38:27.018 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=4eb433c5-0f39-35ef-80ba-dc76493cc0d8
2020-03-25 15:38:27.112 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [com.xlcxx.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$a77e6650] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:38:27.162 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7a6e4fa8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:38:27.336 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92) - Tomcat initialized with port(s): 8088 (http)
2020-03-25 15:38:27.347 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8088"]
2020-03-25 15:38:27.348 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
2020-03-25 15:38:27.349 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-03-25 15:38:27.470 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-03-25 15:38:27.470 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1348 ms
2020-03-25 15:38:28.031 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1220) - Using default implementation for ThreadExecutor
2020-03-25 15:38:28.053 [main] INFO  org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61) - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-25 15:38:28.053 [main] INFO  org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229) - Quartz Scheduler v.2.3.2 created.
2020-03-25 15:38:28.282 [main] INFO  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003) - {dataSource-1} inited
2020-03-25 15:38:28.285 [main] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.initialize(JobStoreSupport.java:672) - Using db table-based data access locking (synchronization).
2020-03-25 15:38:28.288 [main] INFO  org.quartz.impl.jdbcjobstore.JobStoreCMT.initialize(JobStoreCMT.java:145) - JobStoreCMT initialized.
2020-03-25 15:38:28.288 [main] INFO  org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294) - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'xlcxxScheduler' with instanceId 'DESKTOP-9B1Q9MI1585121908042'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-03-25 15:38:28.289 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1374) - Quartz scheduler 'xlcxxScheduler' initialized from an externally provided properties instance.
2020-03-25 15:38:28.289 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1378) - Quartz scheduler version: 2.3.2
2020-03-25 15:38:28.290 [main] INFO  org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2293) - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@3e1f1046
2020-03-25 15:38:28.454 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2020-03-25 15:38:28.455 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-25 15:38:28.460 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2020-03-25 15:38:28.460 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-25 15:38:28.590 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) - Initializing ExecutorService 'applicationTaskExecutor'
2020-03-25 15:38:29.793 [main] INFO  org.springframework.cloud.commons.util.InetUtils.convertAddress(InetUtils.java:170) - Cannot determine local hostname
2020-03-25 15:38:29.811 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$1.call(InitUtils.java:56) - initializer namespace from System Property :null
2020-03-25 15:38:29.813 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$2.call(InitUtils.java:65) - initializer namespace from System Environment :null
2020-03-25 15:38:29.815 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$3.call(InitUtils.java:75) - initializer namespace from System Property :null
2020-03-25 15:38:29.858 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) - Initializing ExecutorService
2020-03-25 15:38:29.885 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-03-25 15:38:29.886 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-03-25 15:38:29.887 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-03-25 15:38:29.887 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) - Clear EntityHelper entityTableMap cache.
2020-03-25 15:38:30.220 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@ba4f370, org.springframework.security.web.context.SecurityContextPersistenceFilter@2de3b052, org.springframework.security.web.header.HeaderWriterFilter@7afe0e67, org.springframework.security.web.authentication.logout.LogoutFilter@64bba0eb, com.xlcxx.config.auth.imageCode.img.ImageCodeFilter@2ba024cb, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@54f2df29, org.springframework.security.web.session.ConcurrentSessionFilter@61a704d3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@16bbaab3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@99c4993, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@23b71d24, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7af0d91b, org.springframework.security.web.session.SessionManagementFilter@31228d83, org.springframework.security.web.access.ExceptionTranslationFilter@83b0d0f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2353354a]
2020-03-25 15:38:31.299 [main] INFO  org.springframework.cloud.commons.util.InetUtils.convertAddress(InetUtils.java:170) - Cannot determine local hostname
2020-03-25 15:38:31.434 [main] INFO  org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:732) - Will start Quartz Scheduler [xlcxxScheduler] in 1 seconds
2020-03-25 15:38:31.442 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-8088"]
2020-03-25 15:38:31.478 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) - Tomcat started on port(s): 8088 (http) with context path '/plodes'
2020-03-25 15:38:31.481 [main] INFO  com.alibaba.nacos.client.naming.beat.BeatReactor.addBeatInfo(BeatReactor.java:58) - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.213.1","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":8088,"scheduled":false,"serviceName":"DEFAULT_GROUP@@plodes-admin","stopped":false,"weight":1.0} to beat map.
2020-03-25 15:38:31.549 [main] INFO  com.alibaba.nacos.client.naming.net.NamingProxy.registerService(NamingProxy.java:172) - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@plodes-admin with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.213.1","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8088,"weight":1.0}
2020-03-25 15:38:31.573 [main] INFO  com.alibaba.cloud.nacos.registry.NacosServiceRegistry.register(NacosServiceRegistry.java:62) - nacos registry, plodes-admin 192.168.213.1:8088 register finished
2020-03-25 15:38:31.577 [main] INFO  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61) - Started Application in 8.59 seconds (JVM running for 10.436)
2020-03-25 15:38:31.583 [main] INFO  com.alibaba.nacos.client.config.impl.ClientWorker.addCacheDataIfAbsent(ClientWorker.java:202) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [subscribe] plodes-admin.yaml+plodes-admin+0cc9a9ed-a7fa-4af5-8a88-82c29e891b08
2020-03-25 15:38:31.584 [main] INFO  com.alibaba.nacos.client.config.impl.CacheData.addListener(CacheData.java:79) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [add-listener] ok, tenant=0cc9a9ed-a7fa-4af5-8a88-82c29e891b08, dataId=plodes-admin.yaml, group=plodes-admin, cnt=1
2020-03-25 15:38:31.584 [main] INFO  com.alibaba.nacos.client.config.impl.ClientWorker.addCacheDataIfAbsent(ClientWorker.java:202) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [subscribe] plodes-admin+plodes-admin+0cc9a9ed-a7fa-4af5-8a88-82c29e891b08
2020-03-25 15:38:31.584 [main] INFO  com.alibaba.nacos.client.config.impl.CacheData.addListener(CacheData.java:79) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [add-listener] ok, tenant=0cc9a9ed-a7fa-4af5-8a88-82c29e891b08, dataId=plodes-admin, group=plodes-admin, cnt=1
2020-03-25 15:38:31.588 [main] INFO  com.alibaba.nacos.client.config.impl.ClientWorker.addCacheDataIfAbsent(ClientWorker.java:202) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [subscribe] plodes-admin-dev.yaml+plodes-admin+0cc9a9ed-a7fa-4af5-8a88-82c29e891b08
2020-03-25 15:38:31.589 [main] INFO  com.alibaba.nacos.client.config.impl.CacheData.addListener(CacheData.java:79) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [add-listener] ok, tenant=0cc9a9ed-a7fa-4af5-8a88-82c29e891b08, dataId=plodes-admin-dev.yaml, group=plodes-admin, cnt=1
2020-03-25 15:38:32.436 [Quartz Scheduler [xlcxxScheduler]] INFO  org.springframework.scheduling.quartz.SchedulerFactoryBean$1.run(SchedulerFactoryBean.java:748) - Starting Quartz Scheduler now, after delay of 1 seconds
2020-03-25 15:38:32.734 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.logWarnIfNonZero(JobStoreSupport.java:3644) - ClusterManager: detected 1 failed or restarted instances.
2020-03-25 15:38:32.734 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.clusterRecover(JobStoreSupport.java:3503) - ClusterManager: Scanning for instance "DESKTOP-9B1Q9MI1585121801018"'s failed in-progress jobs.
2020-03-25 15:38:32.768 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547) - Scheduler xlcxxScheduler_$_DESKTOP-9B1Q9MI1585121908042 started.
2020-03-25 15:39:36.791 [http-nio-8088-exec-1] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-25 15:39:36.791 [http-nio-8088-exec-1] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525) - Initializing Servlet 'dispatcherServlet'
2020-03-25 15:39:36.800 [http-nio-8088-exec-1] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547) - Completed initialization in 9 ms
2020-03-25 15:39:36.962 [http-nio-8088-exec-2] INFO  com.xlcxx.web.controller.system.LoginController.login(LoginController.java:33) - 引发跳转的请求是：http://192.168.8.230:8088/plodes/user/getZHUuser
2020-03-25 15:39:51.288 [http-nio-8088-exec-6] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.UserMapper.selectOneByExample
2020-03-25 15:39:51.288 [http-nio-8088-exec-6] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 28 ms
2020-03-25 15:39:51.288 [http-nio-8088-exec-6] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> SELECT user_id,username,password,nickname,dept_id,status FROM t_user WHERE ( ( user_id = '0101695108880048494' ) )
2020-03-25 15:39:51.299 [http-nio-8088-exec-6] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.RoleMapper.selectUserRoleByUsername
2020-03-25 15:39:51.299 [http-nio-8088-exec-6] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 7 ms
2020-03-25 15:39:51.299 [http-nio-8088-exec-6] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> select t_role.* from t_role left join t_user_role on t_role.role_id=t_user_role.role_id where t_user_role.user_id='0101695108880048494'
2020-03-25 15:40:30.332 [com.alibaba.nacos.client.Worker.longPolling.fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] ERROR com.alibaba.nacos.client.config.http.ServerHttpAgent.httpPost(ServerHttpAgent.java:151) - [NACOS SocketTimeoutException httpPost] currentServerAddr: http://192.168.8.187:8848， err : Read timed out
2020-03-25 15:40:30.333 [com.alibaba.nacos.client.Worker.longPolling.fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] ERROR com.alibaba.nacos.client.config.http.ServerHttpAgent.httpPost(ServerHttpAgent.java:169) - no available server, currentServerAddr : http://192.168.8.187:8848
2020-03-25 15:40:30.333 [com.alibaba.nacos.client.Worker.longPolling.fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] ERROR com.alibaba.nacos.client.config.impl.ClientWorker.checkUpdateConfigStr(ClientWorker.java:389) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [check-update] get changed dataId exception
java.net.ConnectException: no available server, currentServerAddr : http://192.168.8.187:8848
	at com.alibaba.nacos.client.config.http.ServerHttpAgent.httpPost(ServerHttpAgent.java:170) ~[nacos-client-1.1.1.jar:?]
	at com.alibaba.nacos.client.config.http.MetricsHttpAgent.httpPost(MetricsHttpAgent.java:64) ~[nacos-client-1.1.1.jar:?]
	at com.alibaba.nacos.client.config.impl.ClientWorker.checkUpdateConfigStr(ClientWorker.java:377) [nacos-client-1.1.1.jar:?]
	at com.alibaba.nacos.client.config.impl.ClientWorker.checkUpdateDataIds(ClientWorker.java:352) [nacos-client-1.1.1.jar:?]
	at com.alibaba.nacos.client.config.impl.ClientWorker$LongPollingRunnable.run(ClientWorker.java:512) [nacos-client-1.1.1.jar:?]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_191]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_191]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_191]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_191]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_191]
2020-03-25 15:40:30.345 [com.alibaba.nacos.client.Worker.longPolling.fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] ERROR com.alibaba.nacos.client.config.impl.ClientWorker$LongPollingRunnable.run(ClientWorker.java:550) - longPolling error : 
java.net.ConnectException: no available server, currentServerAddr : http://192.168.8.187:8848
	at com.alibaba.nacos.client.config.http.ServerHttpAgent.httpPost(ServerHttpAgent.java:170) ~[nacos-client-1.1.1.jar:?]
	at com.alibaba.nacos.client.config.http.MetricsHttpAgent.httpPost(MetricsHttpAgent.java:64) ~[nacos-client-1.1.1.jar:?]
	at com.alibaba.nacos.client.config.impl.ClientWorker.checkUpdateConfigStr(ClientWorker.java:377) ~[nacos-client-1.1.1.jar:?]
	at com.alibaba.nacos.client.config.impl.ClientWorker.checkUpdateDataIds(ClientWorker.java:352) ~[nacos-client-1.1.1.jar:?]
	at com.alibaba.nacos.client.config.impl.ClientWorker$LongPollingRunnable.run(ClientWorker.java:512) [nacos-client-1.1.1.jar:?]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_191]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_191]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_191]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_191]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_191]
2020-03-25 15:41:17.251 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ac6e0532] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:41:18.788 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin] & group[plodes-admin]
2020-03-25 15:41:18.818 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin.yaml] & group[plodes-admin]
2020-03-25 15:41:18.848 [main] INFO  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:91) - Loading nacos data, dataId: 'plodes-admin-product.yaml', group: 'plodes-admin', data: xlcxx:
    loginUrl: /login
    rememberMeTimeout: 1000
    loginProcessingUrl: /login/form
    maxLoginNum: 1
    
2020-03-25 15:41:18.855 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:101) - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@724028528 {name='plodes-admin-product.yaml', properties={xlcxx.rememberMeTimeout=1000, xlcxx.loginProcessingUrl=/login/form, xlcxx.maxLoginNum=1, xlcxx.loginUrl=/login}}, NacosPropertySource@1869247587 {name='plodes-admin.yaml', properties={}}, NacosPropertySource@467313213 {name='plodes-admin', properties={}}]}
2020-03-25 15:41:18.925 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:655) - The following profiles are active: product
2020-03-25 15:41:19.765 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-25 15:41:19.768 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-03-25 15:41:19.808 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 26ms. Found 0 Redis repository interfaces.
2020-03-25 15:41:19.961 [main] WARN  org.mybatis.logging.Logger.warn(Logger.java:44) - No MyBatis mapper was found in '[com.xlcxx]' package. Please check your configuration.
2020-03-25 15:41:20.011 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=4eb433c5-0f39-35ef-80ba-dc76493cc0d8
2020-03-25 15:41:20.090 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [com.xlcxx.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$d97e1bda] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:41:20.138 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ac6e0532] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:41:20.313 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92) - Tomcat initialized with port(s): 8088 (http)
2020-03-25 15:41:20.321 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8088"]
2020-03-25 15:41:20.322 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
2020-03-25 15:41:20.323 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-03-25 15:41:20.412 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-03-25 15:41:20.413 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1466 ms
2020-03-25 15:41:21.040 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1220) - Using default implementation for ThreadExecutor
2020-03-25 15:41:21.051 [main] INFO  org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61) - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-25 15:41:21.051 [main] INFO  org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229) - Quartz Scheduler v.2.3.2 created.
2020-03-25 15:41:21.345 [main] INFO  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003) - {dataSource-1} inited
2020-03-25 15:41:21.347 [main] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.initialize(JobStoreSupport.java:672) - Using db table-based data access locking (synchronization).
2020-03-25 15:41:21.349 [main] INFO  org.quartz.impl.jdbcjobstore.JobStoreCMT.initialize(JobStoreCMT.java:145) - JobStoreCMT initialized.
2020-03-25 15:41:21.349 [main] INFO  org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294) - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'xlcxxScheduler' with instanceId 'DESKTOP-9B1Q9MI1585122081042'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-03-25 15:41:21.350 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1374) - Quartz scheduler 'xlcxxScheduler' initialized from an externally provided properties instance.
2020-03-25 15:41:21.350 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1378) - Quartz scheduler version: 2.3.2
2020-03-25 15:41:21.351 [main] INFO  org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2293) - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@71560f51
2020-03-25 15:41:21.534 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2020-03-25 15:41:21.534 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-25 15:41:21.538 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2020-03-25 15:41:21.538 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-25 15:41:21.662 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) - Initializing ExecutorService 'applicationTaskExecutor'
2020-03-25 15:41:22.868 [main] INFO  org.springframework.cloud.commons.util.InetUtils.convertAddress(InetUtils.java:170) - Cannot determine local hostname
2020-03-25 15:41:22.876 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$1.call(InitUtils.java:56) - initializer namespace from System Property :null
2020-03-25 15:41:22.877 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$2.call(InitUtils.java:65) - initializer namespace from System Environment :null
2020-03-25 15:41:22.878 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$3.call(InitUtils.java:75) - initializer namespace from System Property :null
2020-03-25 15:41:22.909 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) - Initializing ExecutorService
2020-03-25 15:41:22.946 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-03-25 15:41:22.947 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-03-25 15:41:22.948 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-03-25 15:41:22.948 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) - Clear EntityHelper entityTableMap cache.
2020-03-25 15:41:23.275 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6ce15112, org.springframework.security.web.context.SecurityContextPersistenceFilter@743bb39a, org.springframework.security.web.header.HeaderWriterFilter@2bb717d7, org.springframework.security.web.authentication.logout.LogoutFilter@632241f5, com.xlcxx.config.auth.imageCode.img.ImageCodeFilter@ba4f370, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@25ae1f80, org.springframework.security.web.session.ConcurrentSessionFilter@44ccd75c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3f3c8b60, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4052913c, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@729cd862, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2ba024cb, org.springframework.security.web.session.SessionManagementFilter@6121a7dd, org.springframework.security.web.access.ExceptionTranslationFilter@19105a87, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7babed9e]
2020-03-25 15:41:24.351 [main] INFO  org.springframework.cloud.commons.util.InetUtils.convertAddress(InetUtils.java:170) - Cannot determine local hostname
2020-03-25 15:41:24.470 [main] INFO  org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:732) - Will start Quartz Scheduler [xlcxxScheduler] in 1 seconds
2020-03-25 15:41:24.478 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-8088"]
2020-03-25 15:41:24.513 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) - Tomcat started on port(s): 8088 (http) with context path '/plodes'
2020-03-25 15:41:24.516 [main] INFO  com.alibaba.nacos.client.naming.beat.BeatReactor.addBeatInfo(BeatReactor.java:58) - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.213.1","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":8088,"scheduled":false,"serviceName":"DEFAULT_GROUP@@plodes-admin","stopped":false,"weight":1.0} to beat map.
2020-03-25 15:41:24.589 [main] INFO  com.alibaba.nacos.client.naming.net.NamingProxy.registerService(NamingProxy.java:172) - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@plodes-admin with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.213.1","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8088,"weight":1.0}
2020-03-25 15:41:24.632 [main] INFO  com.alibaba.cloud.nacos.registry.NacosServiceRegistry.register(NacosServiceRegistry.java:62) - nacos registry, plodes-admin 192.168.213.1:8088 register finished
2020-03-25 15:41:24.635 [main] INFO  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61) - Started Application in 9.158 seconds (JVM running for 11.148)
2020-03-25 15:41:24.639 [main] INFO  com.alibaba.nacos.client.config.impl.ClientWorker.addCacheDataIfAbsent(ClientWorker.java:202) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [subscribe] plodes-admin.yaml+plodes-admin+0cc9a9ed-a7fa-4af5-8a88-82c29e891b08
2020-03-25 15:41:24.640 [main] INFO  com.alibaba.nacos.client.config.impl.CacheData.addListener(CacheData.java:79) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [add-listener] ok, tenant=0cc9a9ed-a7fa-4af5-8a88-82c29e891b08, dataId=plodes-admin.yaml, group=plodes-admin, cnt=1
2020-03-25 15:41:24.644 [main] INFO  com.alibaba.nacos.client.config.impl.ClientWorker.addCacheDataIfAbsent(ClientWorker.java:202) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [subscribe] plodes-admin-product.yaml+plodes-admin+0cc9a9ed-a7fa-4af5-8a88-82c29e891b08
2020-03-25 15:41:24.644 [main] INFO  com.alibaba.nacos.client.config.impl.CacheData.addListener(CacheData.java:79) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [add-listener] ok, tenant=0cc9a9ed-a7fa-4af5-8a88-82c29e891b08, dataId=plodes-admin-product.yaml, group=plodes-admin, cnt=1
2020-03-25 15:41:24.644 [main] INFO  com.alibaba.nacos.client.config.impl.ClientWorker.addCacheDataIfAbsent(ClientWorker.java:202) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [subscribe] plodes-admin+plodes-admin+0cc9a9ed-a7fa-4af5-8a88-82c29e891b08
2020-03-25 15:41:24.644 [main] INFO  com.alibaba.nacos.client.config.impl.CacheData.addListener(CacheData.java:79) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [add-listener] ok, tenant=0cc9a9ed-a7fa-4af5-8a88-82c29e891b08, dataId=plodes-admin, group=plodes-admin, cnt=1
2020-03-25 15:41:25.471 [Quartz Scheduler [xlcxxScheduler]] INFO  org.springframework.scheduling.quartz.SchedulerFactoryBean$1.run(SchedulerFactoryBean.java:748) - Starting Quartz Scheduler now, after delay of 1 seconds
2020-03-25 15:41:25.783 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.logWarnIfNonZero(JobStoreSupport.java:3644) - ClusterManager: detected 1 failed or restarted instances.
2020-03-25 15:41:25.784 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.clusterRecover(JobStoreSupport.java:3503) - ClusterManager: Scanning for instance "DESKTOP-9B1Q9MI1585121908042"'s failed in-progress jobs.
2020-03-25 15:41:25.832 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547) - Scheduler xlcxxScheduler_$_DESKTOP-9B1Q9MI1585122081042 started.
2020-03-25 15:41:35.292 [http-nio-8088-exec-1] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-25 15:41:35.293 [http-nio-8088-exec-1] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525) - Initializing Servlet 'dispatcherServlet'
2020-03-25 15:41:35.303 [http-nio-8088-exec-1] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547) - Completed initialization in 10 ms
2020-03-25 15:41:35.436 [http-nio-8088-exec-1] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.UserMapper.selectOneByExample
2020-03-25 15:41:35.436 [http-nio-8088-exec-1] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 27 ms
2020-03-25 15:41:35.436 [http-nio-8088-exec-1] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> SELECT user_id,username,password,nickname,dept_id,status FROM t_user WHERE ( ( user_id = '0101695108880048494' ) )
2020-03-25 15:41:35.448 [http-nio-8088-exec-1] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.RoleMapper.selectUserRoleByUsername
2020-03-25 15:41:35.449 [http-nio-8088-exec-1] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 8 ms
2020-03-25 15:41:35.449 [http-nio-8088-exec-1] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> select t_role.* from t_role left join t_user_role on t_role.role_id=t_user_role.role_id where t_user_role.user_id='0101695108880048494'
2020-03-25 15:42:32.001 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$379d4ff1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:42:33.317 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin] & group[plodes-admin]
2020-03-25 15:42:33.340 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin.yaml] & group[plodes-admin]
2020-03-25 15:42:33.341 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:101) - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@701681793 {name='plodes-admin.yaml', properties={}}, NacosPropertySource@1088744071 {name='plodes-admin', properties={}}]}
2020-03-25 15:42:33.376 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651) - No active profile set, falling back to default profiles: default
2020-03-25 15:42:34.206 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-25 15:42:34.208 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-03-25 15:42:34.245 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 25ms. Found 0 Redis repository interfaces.
2020-03-25 15:42:34.391 [main] WARN  org.mybatis.logging.Logger.warn(Logger.java:44) - No MyBatis mapper was found in '[com.xlcxx]' package. Please check your configuration.
2020-03-25 15:42:34.450 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=4eb433c5-0f39-35ef-80ba-dc76493cc0d8
2020-03-25 15:42:34.558 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [com.xlcxx.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$64ad6699] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:42:34.604 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$379d4ff1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:42:34.792 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92) - Tomcat initialized with port(s): 8088 (http)
2020-03-25 15:42:34.800 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8088"]
2020-03-25 15:42:34.801 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
2020-03-25 15:42:34.801 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-03-25 15:42:34.892 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-03-25 15:42:34.892 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1500 ms
2020-03-25 15:42:35.465 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1220) - Using default implementation for ThreadExecutor
2020-03-25 15:42:35.477 [main] INFO  org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61) - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-25 15:42:35.477 [main] INFO  org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229) - Quartz Scheduler v.2.3.2 created.
2020-03-25 15:42:36.136 [main] INFO  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003) - {dataSource-1} inited
2020-03-25 15:42:36.142 [main] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.initialize(JobStoreSupport.java:672) - Using db table-based data access locking (synchronization).
2020-03-25 15:42:36.147 [main] INFO  org.quartz.impl.jdbcjobstore.JobStoreCMT.initialize(JobStoreCMT.java:145) - JobStoreCMT initialized.
2020-03-25 15:42:36.149 [main] INFO  org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294) - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'xlcxxScheduler' with instanceId 'DESKTOP-9B1Q9MI1585122155466'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-03-25 15:42:36.150 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1374) - Quartz scheduler 'xlcxxScheduler' initialized from an externally provided properties instance.
2020-03-25 15:42:36.150 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1378) - Quartz scheduler version: 2.3.2
2020-03-25 15:42:36.154 [main] INFO  org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2293) - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@13d019a4
2020-03-25 15:42:36.339 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2020-03-25 15:42:36.339 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-25 15:42:36.343 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2020-03-25 15:42:36.343 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-25 15:42:36.472 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) - Initializing ExecutorService 'applicationTaskExecutor'
2020-03-25 15:42:37.671 [main] INFO  org.springframework.cloud.commons.util.InetUtils.convertAddress(InetUtils.java:170) - Cannot determine local hostname
2020-03-25 15:42:37.689 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$1.call(InitUtils.java:56) - initializer namespace from System Property :null
2020-03-25 15:42:37.691 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$2.call(InitUtils.java:65) - initializer namespace from System Environment :null
2020-03-25 15:42:37.692 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$3.call(InitUtils.java:75) - initializer namespace from System Property :null
2020-03-25 15:42:37.728 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) - Initializing ExecutorService
2020-03-25 15:42:37.755 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-03-25 15:42:37.756 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-03-25 15:42:37.757 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-03-25 15:42:37.757 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) - Clear EntityHelper entityTableMap cache.
2020-03-25 15:42:38.137 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2b458cd6, org.springframework.security.web.context.SecurityContextPersistenceFilter@2296127, org.springframework.security.web.header.HeaderWriterFilter@63db743d, org.springframework.security.web.authentication.logout.LogoutFilter@2ba9f986, com.xlcxx.config.auth.imageCode.img.ImageCodeFilter@4c2c44e8, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@634aa81e, org.springframework.security.web.session.ConcurrentSessionFilter@2b2a4332, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1d283d1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@bf2aa32, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@6c5747db, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7103745, org.springframework.security.web.session.SessionManagementFilter@6b6def36, org.springframework.security.web.access.ExceptionTranslationFilter@1de7f898, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7757025d]
2020-03-25 15:42:39.208 [main] INFO  org.springframework.cloud.commons.util.InetUtils.convertAddress(InetUtils.java:170) - Cannot determine local hostname
2020-03-25 15:42:39.307 [main] INFO  org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:732) - Will start Quartz Scheduler [xlcxxScheduler] in 1 seconds
2020-03-25 15:42:39.317 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-8088"]
2020-03-25 15:42:39.358 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) - Tomcat started on port(s): 8088 (http) with context path '/plodes'
2020-03-25 15:42:39.361 [main] INFO  com.alibaba.nacos.client.naming.beat.BeatReactor.addBeatInfo(BeatReactor.java:58) - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.213.1","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":8088,"scheduled":false,"serviceName":"DEFAULT_GROUP@@plodes-admin","stopped":false,"weight":1.0} to beat map.
2020-03-25 15:42:39.461 [main] INFO  com.alibaba.nacos.client.naming.net.NamingProxy.registerService(NamingProxy.java:172) - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@plodes-admin with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.213.1","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8088,"weight":1.0}
2020-03-25 15:42:39.492 [main] INFO  com.alibaba.cloud.nacos.registry.NacosServiceRegistry.register(NacosServiceRegistry.java:62) - nacos registry, plodes-admin 192.168.213.1:8088 register finished
2020-03-25 15:42:39.494 [main] INFO  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61) - Started Application in 9.15 seconds (JVM running for 11.629)
2020-03-25 15:42:39.500 [main] INFO  com.alibaba.nacos.client.config.impl.ClientWorker.addCacheDataIfAbsent(ClientWorker.java:202) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [subscribe] plodes-admin.yaml+plodes-admin+0cc9a9ed-a7fa-4af5-8a88-82c29e891b08
2020-03-25 15:42:39.501 [main] INFO  com.alibaba.nacos.client.config.impl.CacheData.addListener(CacheData.java:79) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [add-listener] ok, tenant=0cc9a9ed-a7fa-4af5-8a88-82c29e891b08, dataId=plodes-admin.yaml, group=plodes-admin, cnt=1
2020-03-25 15:42:39.501 [main] INFO  com.alibaba.nacos.client.config.impl.ClientWorker.addCacheDataIfAbsent(ClientWorker.java:202) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [subscribe] plodes-admin+plodes-admin+0cc9a9ed-a7fa-4af5-8a88-82c29e891b08
2020-03-25 15:42:39.502 [main] INFO  com.alibaba.nacos.client.config.impl.CacheData.addListener(CacheData.java:79) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [add-listener] ok, tenant=0cc9a9ed-a7fa-4af5-8a88-82c29e891b08, dataId=plodes-admin, group=plodes-admin, cnt=1
2020-03-25 15:42:40.309 [Quartz Scheduler [xlcxxScheduler]] INFO  org.springframework.scheduling.quartz.SchedulerFactoryBean$1.run(SchedulerFactoryBean.java:748) - Starting Quartz Scheduler now, after delay of 1 seconds
2020-03-25 15:42:40.678 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.logWarnIfNonZero(JobStoreSupport.java:3644) - ClusterManager: detected 1 failed or restarted instances.
2020-03-25 15:42:40.678 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.clusterRecover(JobStoreSupport.java:3503) - ClusterManager: Scanning for instance "DESKTOP-9B1Q9MI1585122081042"'s failed in-progress jobs.
2020-03-25 15:42:40.743 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547) - Scheduler xlcxxScheduler_$_DESKTOP-9B1Q9MI1585122155466 started.
2020-03-25 15:43:54.391 [http-nio-8088-exec-3] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-25 15:43:54.391 [http-nio-8088-exec-3] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525) - Initializing Servlet 'dispatcherServlet'
2020-03-25 15:43:54.397 [http-nio-8088-exec-3] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547) - Completed initialization in 6 ms
2020-03-25 15:43:54.526 [http-nio-8088-exec-3] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.UserMapper.selectOneByExample
2020-03-25 15:43:54.527 [http-nio-8088-exec-3] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 27 ms
2020-03-25 15:43:54.527 [http-nio-8088-exec-3] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> SELECT user_id,username,password,nickname,dept_id,status FROM t_user WHERE ( ( user_id = '0101695108880048494' ) )
2020-03-25 15:43:54.537 [http-nio-8088-exec-3] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.RoleMapper.selectUserRoleByUsername
2020-03-25 15:43:54.537 [http-nio-8088-exec-3] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 7 ms
2020-03-25 15:43:54.537 [http-nio-8088-exec-3] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> select t_role.* from t_role left join t_user_role on t_role.role_id=t_user_role.role_id where t_user_role.user_id='0101695108880048494'
2020-03-25 15:44:09.556 [http-nio-8088-exec-5] INFO  com.xlcxx.web.controller.system.LoginController.login(LoginController.java:33) - 引发跳转的请求是：http://192.168.8.230:8088/plodes/user/getZHUuser
2020-03-25 15:44:44.774 [http-nio-8088-exec-9] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.UserMapper.selectOneByExample
2020-03-25 15:44:44.774 [http-nio-8088-exec-9] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 4 ms
2020-03-25 15:44:44.774 [http-nio-8088-exec-9] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> SELECT user_id,username,password,nickname,dept_id,status FROM t_user WHERE ( ( user_id = '0101695108880048494' ) )
2020-03-25 15:44:44.779 [http-nio-8088-exec-9] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.RoleMapper.selectUserRoleByUsername
2020-03-25 15:44:44.779 [http-nio-8088-exec-9] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 5 ms
2020-03-25 15:44:44.779 [http-nio-8088-exec-9] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> select t_role.* from t_role left join t_user_role on t_role.role_id=t_user_role.role_id where t_user_role.user_id='0101695108880048494'
2020-03-25 15:46:28.015 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$39231236] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:46:29.399 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin] & group[DEFAULT_GROUP]
2020-03-25 15:46:29.409 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin.properties] & group[DEFAULT_GROUP]
2020-03-25 15:46:29.409 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:101) - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@456785282 {name='plodes-admin.properties', properties={}}, NacosPropertySource@1043317832 {name='plodes-admin', properties={}}]}
2020-03-25 15:46:29.460 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651) - No active profile set, falling back to default profiles: default
2020-03-25 15:46:30.272 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-25 15:46:30.274 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-03-25 15:46:30.318 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 30ms. Found 0 Redis repository interfaces.
2020-03-25 15:46:30.472 [main] WARN  org.mybatis.logging.Logger.warn(Logger.java:44) - No MyBatis mapper was found in '[com.xlcxx]' package. Please check your configuration.
2020-03-25 15:46:30.546 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=4eb433c5-0f39-35ef-80ba-dc76493cc0d8
2020-03-25 15:46:30.656 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [com.xlcxx.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$663328de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:46:30.707 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$39231236] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:46:30.882 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92) - Tomcat initialized with port(s): 8088 (http)
2020-03-25 15:46:30.891 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8088"]
2020-03-25 15:46:30.891 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
2020-03-25 15:46:30.892 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-03-25 15:46:30.995 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-03-25 15:46:30.996 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1511 ms
2020-03-25 15:46:31.636 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1220) - Using default implementation for ThreadExecutor
2020-03-25 15:46:31.648 [main] INFO  org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61) - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-25 15:46:31.649 [main] INFO  org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229) - Quartz Scheduler v.2.3.2 created.
2020-03-25 15:46:31.974 [main] INFO  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003) - {dataSource-1} inited
2020-03-25 15:46:31.977 [main] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.initialize(JobStoreSupport.java:672) - Using db table-based data access locking (synchronization).
2020-03-25 15:46:31.980 [main] INFO  org.quartz.impl.jdbcjobstore.JobStoreCMT.initialize(JobStoreCMT.java:145) - JobStoreCMT initialized.
2020-03-25 15:46:31.980 [main] INFO  org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294) - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'xlcxxScheduler' with instanceId 'DESKTOP-9B1Q9MI1585122391637'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-03-25 15:46:31.981 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1374) - Quartz scheduler 'xlcxxScheduler' initialized from an externally provided properties instance.
2020-03-25 15:46:31.981 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1378) - Quartz scheduler version: 2.3.2
2020-03-25 15:46:31.982 [main] INFO  org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2293) - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@236fdf
2020-03-25 15:46:32.187 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2020-03-25 15:46:32.188 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-25 15:46:32.191 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2020-03-25 15:46:32.192 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-25 15:46:32.306 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) - Initializing ExecutorService 'applicationTaskExecutor'
2020-03-25 15:46:33.509 [main] INFO  org.springframework.cloud.commons.util.InetUtils.convertAddress(InetUtils.java:170) - Cannot determine local hostname
2020-03-25 15:46:33.524 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$1.call(InitUtils.java:56) - initializer namespace from System Property :null
2020-03-25 15:46:33.525 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$2.call(InitUtils.java:65) - initializer namespace from System Environment :null
2020-03-25 15:46:33.527 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$3.call(InitUtils.java:75) - initializer namespace from System Property :null
2020-03-25 15:46:33.558 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) - Initializing ExecutorService
2020-03-25 15:46:33.582 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-03-25 15:46:33.582 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-03-25 15:46:33.583 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-03-25 15:46:33.583 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) - Clear EntityHelper entityTableMap cache.
2020-03-25 15:46:33.933 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4adf3582, org.springframework.security.web.context.SecurityContextPersistenceFilter@4eeb14e0, org.springframework.security.web.header.HeaderWriterFilter@4fe8f2ae, org.springframework.security.web.authentication.logout.LogoutFilter@658e7ead, com.xlcxx.config.auth.imageCode.img.ImageCodeFilter@57e4b86c, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6d7740f0, org.springframework.security.web.session.ConcurrentSessionFilter@14a1769d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3d4ecc67, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@537ca28e, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@496cedbb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@632241f5, org.springframework.security.web.session.SessionManagementFilter@61808ecd, org.springframework.security.web.access.ExceptionTranslationFilter@d70e9a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1ffd0114]
2020-03-25 15:46:35.012 [main] INFO  org.springframework.cloud.commons.util.InetUtils.convertAddress(InetUtils.java:170) - Cannot determine local hostname
2020-03-25 15:46:35.122 [main] INFO  org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:732) - Will start Quartz Scheduler [xlcxxScheduler] in 1 seconds
2020-03-25 15:46:35.131 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-8088"]
2020-03-25 15:46:35.165 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) - Tomcat started on port(s): 8088 (http) with context path '/plodes'
2020-03-25 15:46:35.168 [main] INFO  com.alibaba.nacos.client.naming.beat.BeatReactor.addBeatInfo(BeatReactor.java:58) - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.213.1","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":8088,"scheduled":false,"serviceName":"DEFAULT_GROUP@@plodes-admin","stopped":false,"weight":1.0} to beat map.
2020-03-25 15:46:35.234 [main] INFO  com.alibaba.nacos.client.naming.net.NamingProxy.registerService(NamingProxy.java:172) - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@plodes-admin with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.213.1","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8088,"weight":1.0}
2020-03-25 15:46:35.275 [main] INFO  com.alibaba.cloud.nacos.registry.NacosServiceRegistry.register(NacosServiceRegistry.java:62) - nacos registry, plodes-admin 192.168.213.1:8088 register finished
2020-03-25 15:46:35.277 [main] INFO  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61) - Started Application in 8.901 seconds (JVM running for 12.008)
2020-03-25 15:46:35.282 [main] INFO  com.alibaba.nacos.client.config.impl.ClientWorker.addCacheDataIfAbsent(ClientWorker.java:202) - [fixed-192.168.8.187_8848] [subscribe] plodes-admin.properties+DEFAULT_GROUP
2020-03-25 15:46:35.283 [main] INFO  com.alibaba.nacos.client.config.impl.CacheData.addListener(CacheData.java:79) - [fixed-192.168.8.187_8848] [add-listener] ok, tenant=, dataId=plodes-admin.properties, group=DEFAULT_GROUP, cnt=1
2020-03-25 15:46:35.283 [main] INFO  com.alibaba.nacos.client.config.impl.ClientWorker.addCacheDataIfAbsent(ClientWorker.java:202) - [fixed-192.168.8.187_8848] [subscribe] plodes-admin+DEFAULT_GROUP
2020-03-25 15:46:35.283 [main] INFO  com.alibaba.nacos.client.config.impl.CacheData.addListener(CacheData.java:79) - [fixed-192.168.8.187_8848] [add-listener] ok, tenant=, dataId=plodes-admin, group=DEFAULT_GROUP, cnt=1
2020-03-25 15:46:36.124 [Quartz Scheduler [xlcxxScheduler]] INFO  org.springframework.scheduling.quartz.SchedulerFactoryBean$1.run(SchedulerFactoryBean.java:748) - Starting Quartz Scheduler now, after delay of 1 seconds
2020-03-25 15:46:36.450 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.logWarnIfNonZero(JobStoreSupport.java:3644) - ClusterManager: detected 1 failed or restarted instances.
2020-03-25 15:46:36.450 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.clusterRecover(JobStoreSupport.java:3503) - ClusterManager: Scanning for instance "DESKTOP-9B1Q9MI1585122155466"'s failed in-progress jobs.
2020-03-25 15:46:36.496 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547) - Scheduler xlcxxScheduler_$_DESKTOP-9B1Q9MI1585122391637 started.
2020-03-25 15:46:42.843 [http-nio-8088-exec-2] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-25 15:46:42.844 [http-nio-8088-exec-2] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525) - Initializing Servlet 'dispatcherServlet'
2020-03-25 15:46:42.852 [http-nio-8088-exec-2] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547) - Completed initialization in 8 ms
2020-03-25 15:46:43.028 [http-nio-8088-exec-2] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.UserMapper.selectOneByExample
2020-03-25 15:46:43.029 [http-nio-8088-exec-2] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 28 ms
2020-03-25 15:46:43.029 [http-nio-8088-exec-2] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> SELECT user_id,username,password,nickname,dept_id,status FROM t_user WHERE ( ( user_id = '0101695108880048494' ) )
2020-03-25 15:46:43.041 [http-nio-8088-exec-2] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.RoleMapper.selectUserRoleByUsername
2020-03-25 15:46:43.041 [http-nio-8088-exec-2] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 8 ms
2020-03-25 15:46:43.041 [http-nio-8088-exec-2] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> select t_role.* from t_role left join t_user_role on t_role.role_id=t_user_role.role_id where t_user_role.user_id='0101695108880048494'
2020-03-25 15:46:51.752 [http-nio-8088-exec-3] INFO  com.xlcxx.web.controller.system.LoginController.login(LoginController.java:33) - 引发跳转的请求是：http://192.168.8.230:8088/plodes/
2020-03-25 15:47:07.879 [http-nio-8088-exec-9] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.UserMapper.selectOneByExample
2020-03-25 15:47:07.879 [http-nio-8088-exec-9] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 6 ms
2020-03-25 15:47:07.879 [http-nio-8088-exec-9] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> SELECT user_id,username,password,nickname,dept_id,status FROM t_user WHERE ( ( user_id = '0101695108880048494' ) )
2020-03-25 15:47:07.886 [http-nio-8088-exec-9] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.RoleMapper.selectUserRoleByUsername
2020-03-25 15:47:07.886 [http-nio-8088-exec-9] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 6 ms
2020-03-25 15:47:07.886 [http-nio-8088-exec-9] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> select t_role.* from t_role left join t_user_role on t_role.role_id=t_user_role.role_id where t_user_role.user_id='0101695108880048494'
2020-03-25 15:48:21.395 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fc622159] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:48:22.700 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[null.properties] & group[DEFAULT_GROUP]
2020-03-25 15:48:22.701 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:101) - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@143486875 {name='null.properties', properties={}}]}
2020-03-25 15:48:22.742 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651) - No active profile set, falling back to default profiles: default
2020-03-25 15:48:23.529 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-25 15:48:23.532 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-03-25 15:48:23.568 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 23ms. Found 0 Redis repository interfaces.
2020-03-25 15:48:23.728 [main] WARN  org.mybatis.logging.Logger.warn(Logger.java:44) - No MyBatis mapper was found in '[com.xlcxx]' package. Please check your configuration.
2020-03-25 15:48:23.784 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=4eb433c5-0f39-35ef-80ba-dc76493cc0d8
2020-03-25 15:48:23.887 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [com.xlcxx.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$29723801] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:48:23.939 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fc622159] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:48:24.133 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92) - Tomcat initialized with port(s): 8088 (http)
2020-03-25 15:48:24.141 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8088"]
2020-03-25 15:48:24.142 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
2020-03-25 15:48:24.143 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-03-25 15:48:24.237 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-03-25 15:48:24.237 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1477 ms
2020-03-25 15:48:24.913 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1220) - Using default implementation for ThreadExecutor
2020-03-25 15:48:24.923 [main] INFO  org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61) - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-25 15:48:24.924 [main] INFO  org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229) - Quartz Scheduler v.2.3.2 created.
2020-03-25 15:48:25.296 [main] INFO  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003) - {dataSource-1} inited
2020-03-25 15:48:25.303 [main] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.initialize(JobStoreSupport.java:672) - Using db table-based data access locking (synchronization).
2020-03-25 15:48:25.308 [main] INFO  org.quartz.impl.jdbcjobstore.JobStoreCMT.initialize(JobStoreCMT.java:145) - JobStoreCMT initialized.
2020-03-25 15:48:25.309 [main] INFO  org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294) - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'xlcxxScheduler' with instanceId 'DESKTOP-9B1Q9MI1585122504914'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-03-25 15:48:25.309 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1374) - Quartz scheduler 'xlcxxScheduler' initialized from an externally provided properties instance.
2020-03-25 15:48:25.310 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1378) - Quartz scheduler version: 2.3.2
2020-03-25 15:48:25.312 [main] INFO  org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2293) - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@c2df90e
2020-03-25 15:48:25.889 [main] WARN  org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration.configureArchaius(ArchaiusAutoConfiguration.java:120) - No spring.application.name found, defaulting to 'application'
2020-03-25 15:48:25.911 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2020-03-25 15:48:25.912 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-25 15:48:25.920 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2020-03-25 15:48:25.920 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-25 15:48:26.053 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) - Initializing ExecutorService 'applicationTaskExecutor'
2020-03-25 15:48:27.229 [main] INFO  org.springframework.cloud.commons.util.InetUtils.convertAddress(InetUtils.java:170) - Cannot determine local hostname
2020-03-25 15:48:27.235 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$1.call(InitUtils.java:56) - initializer namespace from System Property :null
2020-03-25 15:48:27.236 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$2.call(InitUtils.java:65) - initializer namespace from System Environment :null
2020-03-25 15:48:27.236 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$3.call(InitUtils.java:75) - initializer namespace from System Property :null
2020-03-25 15:48:27.257 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) - Initializing ExecutorService
2020-03-25 15:48:27.280 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-03-25 15:48:27.281 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-03-25 15:48:27.282 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-03-25 15:48:27.282 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) - Clear EntityHelper entityTableMap cache.
2020-03-25 15:48:27.610 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7bc2ae16, org.springframework.security.web.context.SecurityContextPersistenceFilter@b5c902, org.springframework.security.web.header.HeaderWriterFilter@2cbe455c, org.springframework.security.web.authentication.logout.LogoutFilter@3302035b, com.xlcxx.config.auth.imageCode.img.ImageCodeFilter@2a0963be, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2c8ff67, org.springframework.security.web.session.ConcurrentSessionFilter@66234b0f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4d0e1a9a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@23f60b7d, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@19105a87, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7d3bf8db, org.springframework.security.web.session.SessionManagementFilter@7be38eba, org.springframework.security.web.access.ExceptionTranslationFilter@2fba0dac, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@54567b05]
2020-03-25 15:48:28.688 [main] INFO  org.springframework.cloud.commons.util.InetUtils.convertAddress(InetUtils.java:170) - Cannot determine local hostname
2020-03-25 15:48:28.778 [main] INFO  org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:732) - Will start Quartz Scheduler [xlcxxScheduler] in 1 seconds
2020-03-25 15:48:28.787 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-8088"]
2020-03-25 15:48:28.821 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) - Tomcat started on port(s): 8088 (http) with context path '/plodes'
2020-03-25 15:48:28.823 [main] WARN  com.alibaba.cloud.nacos.registry.NacosServiceRegistry.register(NacosServiceRegistry.java:52) - No service to register for nacos client...
2020-03-25 15:48:28.824 [main] INFO  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61) - Started Application in 9.393 seconds (JVM running for 11.821)
2020-03-25 15:48:28.827 [main] INFO  com.alibaba.nacos.client.config.impl.ClientWorker.addCacheDataIfAbsent(ClientWorker.java:202) - [fixed-192.168.8.187_8848] [subscribe] null.properties+DEFAULT_GROUP
2020-03-25 15:48:28.828 [main] INFO  com.alibaba.nacos.client.config.impl.CacheData.addListener(CacheData.java:79) - [fixed-192.168.8.187_8848] [add-listener] ok, tenant=, dataId=null.properties, group=DEFAULT_GROUP, cnt=1
2020-03-25 15:48:29.780 [Quartz Scheduler [xlcxxScheduler]] INFO  org.springframework.scheduling.quartz.SchedulerFactoryBean$1.run(SchedulerFactoryBean.java:748) - Starting Quartz Scheduler now, after delay of 1 seconds
2020-03-25 15:48:30.496 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.logWarnIfNonZero(JobStoreSupport.java:3644) - ClusterManager: detected 1 failed or restarted instances.
2020-03-25 15:48:30.496 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.clusterRecover(JobStoreSupport.java:3503) - ClusterManager: Scanning for instance "DESKTOP-9B1Q9MI1585122391637"'s failed in-progress jobs.
2020-03-25 15:48:30.570 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547) - Scheduler xlcxxScheduler_$_DESKTOP-9B1Q9MI1585122504914 started.
2020-03-25 15:48:59.070 [http-nio-8088-exec-1] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-25 15:48:59.071 [http-nio-8088-exec-1] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525) - Initializing Servlet 'dispatcherServlet'
2020-03-25 15:48:59.077 [http-nio-8088-exec-1] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547) - Completed initialization in 6 ms
2020-03-25 15:48:59.136 [http-nio-8088-exec-2] INFO  com.xlcxx.web.controller.system.LoginController.login(LoginController.java:33) - 引发跳转的请求是：http://192.168.8.230:8088/plodes/user/getZHUuser
2020-03-25 15:49:13.889 [http-nio-8088-exec-8] INFO  com.xlcxx.web.controller.system.LoginController.login(LoginController.java:33) - 引发跳转的请求是：http://192.168.8.230:8088/plodes/user/getZHUuser
2020-03-25 15:49:16.175 [http-nio-8088-exec-7] INFO  com.xlcxx.web.controller.system.LoginController.login(LoginController.java:33) - 引发跳转的请求是：http://192.168.8.230:8088/plodes/user/getZHUuser
2020-03-25 15:49:23.555 [http-nio-8088-exec-2] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.UserMapper.selectOneByExample
2020-03-25 15:49:23.555 [http-nio-8088-exec-2] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 35 ms
2020-03-25 15:49:23.555 [http-nio-8088-exec-2] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> SELECT user_id,username,password,nickname,dept_id,status FROM t_user WHERE ( ( user_id = '0101695108880048494' ) )
2020-03-25 15:49:23.569 [http-nio-8088-exec-2] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.RoleMapper.selectUserRoleByUsername
2020-03-25 15:49:23.569 [http-nio-8088-exec-2] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 10 ms
2020-03-25 15:49:23.569 [http-nio-8088-exec-2] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> select t_role.* from t_role left join t_user_role on t_role.role_id=t_user_role.role_id where t_user_role.user_id='0101695108880048494'
2020-03-25 15:49:24.924 [http-nio-8088-exec-3] INFO  com.xlcxx.web.controller.system.LoginController.login(LoginController.java:33) - 引发跳转的请求是：http://192.168.8.230:8088/plodes/user/getZHUuser
2020-03-25 15:49:26.313 [http-nio-8088-exec-6] INFO  com.xlcxx.web.controller.system.LoginController.login(LoginController.java:33) - 引发跳转的请求是：http://192.168.8.230:8088/plodes/user/getZHUuser
2020-03-25 15:49:33.245 [http-nio-8088-exec-10] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.UserMapper.selectOneByExample
2020-03-25 15:49:33.245 [http-nio-8088-exec-10] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 7 ms
2020-03-25 15:49:33.245 [http-nio-8088-exec-10] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> SELECT user_id,username,password,nickname,dept_id,status FROM t_user WHERE ( ( user_id = '0101695108880048494' ) )
2020-03-25 15:49:33.251 [http-nio-8088-exec-10] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.RoleMapper.selectUserRoleByUsername
2020-03-25 15:49:33.251 [http-nio-8088-exec-10] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 6 ms
2020-03-25 15:49:33.251 [http-nio-8088-exec-10] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> select t_role.* from t_role left join t_user_role on t_role.role_id=t_user_role.role_id where t_user_role.user_id='0101695108880048494'
2020-03-25 15:51:17.833 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e4d339f9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:51:19.208 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[null.properties] & group[DEFAULT_GROUP]
2020-03-25 15:51:19.209 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:101) - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@1404834600 {name='null.properties', properties={}}]}
2020-03-25 15:51:19.244 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651) - No active profile set, falling back to default profiles: default
2020-03-25 15:51:20.620 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-25 15:51:20.622 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-03-25 15:51:20.657 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 22ms. Found 0 Redis repository interfaces.
2020-03-25 15:51:20.802 [main] WARN  org.mybatis.logging.Logger.warn(Logger.java:44) - No MyBatis mapper was found in '[com.xlcxx]' package. Please check your configuration.
2020-03-25 15:51:20.854 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=0c62dbe0-3df0-3b98-a4ca-0bb3f4b23933
2020-03-25 15:51:20.973 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:51:20.982 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [com.xlcxx.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$11e350a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:51:21.029 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:51:21.032 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1a0d96a5' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:51:21.034 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:51:21.038 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:51:21.051 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e4d339f9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:51:21.251 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92) - Tomcat initialized with port(s): 8088 (http)
2020-03-25 15:51:21.262 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8088"]
2020-03-25 15:51:21.262 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
2020-03-25 15:51:21.263 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-03-25 15:51:21.367 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-03-25 15:51:21.367 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 2108 ms
2020-03-25 15:51:22.031 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1220) - Using default implementation for ThreadExecutor
2020-03-25 15:51:22.041 [main] INFO  org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61) - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-25 15:51:22.041 [main] INFO  org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229) - Quartz Scheduler v.2.3.2 created.
2020-03-25 15:51:22.703 [main] INFO  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003) - {dataSource-1} inited
2020-03-25 15:51:22.708 [main] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.initialize(JobStoreSupport.java:672) - Using db table-based data access locking (synchronization).
2020-03-25 15:51:22.713 [main] INFO  org.quartz.impl.jdbcjobstore.JobStoreCMT.initialize(JobStoreCMT.java:145) - JobStoreCMT initialized.
2020-03-25 15:51:22.714 [main] INFO  org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294) - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'xlcxxScheduler' with instanceId 'DESKTOP-9B1Q9MI1585122682032'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-03-25 15:51:22.715 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1374) - Quartz scheduler 'xlcxxScheduler' initialized from an externally provided properties instance.
2020-03-25 15:51:22.715 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1378) - Quartz scheduler version: 2.3.2
2020-03-25 15:51:22.718 [main] INFO  org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2293) - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@43d65a81
2020-03-25 15:51:23.049 [main] WARN  org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration.configureArchaius(ArchaiusAutoConfiguration.java:120) - No spring.application.name found, defaulting to 'application'
2020-03-25 15:51:23.053 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2020-03-25 15:51:23.053 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-25 15:51:23.058 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2020-03-25 15:51:23.058 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-25 15:51:23.190 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) - Initializing ExecutorService 'applicationTaskExecutor'
2020-03-25 15:51:24.429 [main] INFO  org.springframework.cloud.commons.util.InetUtils.convertAddress(InetUtils.java:170) - Cannot determine local hostname
2020-03-25 15:51:24.446 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$1.call(InitUtils.java:56) - initializer namespace from System Property :null
2020-03-25 15:51:24.448 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$2.call(InitUtils.java:65) - initializer namespace from System Environment :null
2020-03-25 15:51:24.450 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$3.call(InitUtils.java:75) - initializer namespace from System Property :null
2020-03-25 15:51:24.491 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) - Initializing ExecutorService
2020-03-25 15:51:24.516 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-03-25 15:51:24.517 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-03-25 15:51:24.518 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-03-25 15:51:24.518 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) - Clear EntityHelper entityTableMap cache.
2020-03-25 15:51:24.836 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@456aa471, org.springframework.security.web.context.SecurityContextPersistenceFilter@3ee6dc82, org.springframework.security.web.header.HeaderWriterFilter@a9a8ec3, org.springframework.security.web.authentication.logout.LogoutFilter@7eee6c13, com.xlcxx.config.auth.imageCode.img.ImageCodeFilter@69e2fe3b, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4c6bba7d, org.springframework.security.web.session.ConcurrentSessionFilter@506aa618, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@adafe19, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6dded900, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@3db1ce78, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@27afbf14, org.springframework.security.web.session.SessionManagementFilter@40016ce1, org.springframework.security.web.access.ExceptionTranslationFilter@51af8049, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@76af51d6]
2020-03-25 15:51:25.936 [main] INFO  org.springframework.cloud.commons.util.InetUtils.convertAddress(InetUtils.java:170) - Cannot determine local hostname
2020-03-25 15:51:26.047 [main] INFO  org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:732) - Will start Quartz Scheduler [xlcxxScheduler] in 1 seconds
2020-03-25 15:51:26.055 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-8088"]
2020-03-25 15:51:26.090 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) - Tomcat started on port(s): 8088 (http) with context path '/plodes'
2020-03-25 15:51:26.092 [main] WARN  com.alibaba.cloud.nacos.registry.NacosServiceRegistry.register(NacosServiceRegistry.java:52) - No service to register for nacos client...
2020-03-25 15:51:26.093 [main] INFO  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61) - Started Application in 10.222 seconds (JVM running for 12.247)
2020-03-25 15:51:26.096 [main] INFO  com.alibaba.nacos.client.config.impl.ClientWorker.addCacheDataIfAbsent(ClientWorker.java:202) - [fixed-192.168.8.187_8848] [subscribe] null.properties+DEFAULT_GROUP
2020-03-25 15:51:26.097 [main] INFO  com.alibaba.nacos.client.config.impl.CacheData.addListener(CacheData.java:79) - [fixed-192.168.8.187_8848] [add-listener] ok, tenant=, dataId=null.properties, group=DEFAULT_GROUP, cnt=1
2020-03-25 15:51:27.049 [Quartz Scheduler [xlcxxScheduler]] INFO  org.springframework.scheduling.quartz.SchedulerFactoryBean$1.run(SchedulerFactoryBean.java:748) - Starting Quartz Scheduler now, after delay of 1 seconds
2020-03-25 15:51:27.367 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.logWarnIfNonZero(JobStoreSupport.java:3644) - ClusterManager: detected 1 failed or restarted instances.
2020-03-25 15:51:27.367 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.clusterRecover(JobStoreSupport.java:3503) - ClusterManager: Scanning for instance "DESKTOP-9B1Q9MI1585122504914"'s failed in-progress jobs.
2020-03-25 15:51:27.430 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547) - Scheduler xlcxxScheduler_$_DESKTOP-9B1Q9MI1585122682032 started.
2020-03-25 15:51:34.065 [http-nio-8088-exec-2] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-25 15:51:34.066 [http-nio-8088-exec-2] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525) - Initializing Servlet 'dispatcherServlet'
2020-03-25 15:51:34.072 [http-nio-8088-exec-2] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547) - Completed initialization in 6 ms
2020-03-25 15:51:34.226 [http-nio-8088-exec-2] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.UserMapper.selectOneByExample
2020-03-25 15:51:34.226 [http-nio-8088-exec-2] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 30 ms
2020-03-25 15:51:34.227 [http-nio-8088-exec-2] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> SELECT user_id,username,password,nickname,dept_id,status FROM t_user WHERE ( ( user_id = '0101695108880048494' ) )
2020-03-25 15:51:34.242 [http-nio-8088-exec-2] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.RoleMapper.selectUserRoleByUsername
2020-03-25 15:51:34.242 [http-nio-8088-exec-2] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 12 ms
2020-03-25 15:51:34.242 [http-nio-8088-exec-2] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> select t_role.* from t_role left join t_user_role on t_role.role_id=t_user_role.role_id where t_user_role.user_id='0101695108880048494'
2020-03-25 15:51:34.689 [http-nio-8088-exec-3] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.UserMapper.selectOneByExample
2020-03-25 15:51:34.689 [http-nio-8088-exec-3] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 12 ms
2020-03-25 15:51:34.690 [http-nio-8088-exec-3] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> SELECT user_id,username,password,nickname,dept_id,status FROM t_user WHERE ( ( user_id = '0101695108880048494' ) )
2020-03-25 15:51:34.704 [http-nio-8088-exec-3] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.RoleMapper.selectUserRoleByUsername
2020-03-25 15:51:34.704 [http-nio-8088-exec-3] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 13 ms
2020-03-25 15:51:34.704 [http-nio-8088-exec-3] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> select t_role.* from t_role left join t_user_role on t_role.role_id=t_user_role.role_id where t_user_role.user_id='0101695108880048494'
2020-03-25 15:51:34.707 [http-nio-8088-exec-3] INFO  com.xlcxx.web.controller.system.LoginController.login(LoginController.java:33) - 引发跳转的请求是：http://192.168.8.230:8088/plodes/user/getZHUuser
2020-03-25 15:51:42.370 [http-nio-8088-exec-6] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.UserMapper.selectOneByExample
2020-03-25 15:51:42.370 [http-nio-8088-exec-6] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 10 ms
2020-03-25 15:51:42.371 [http-nio-8088-exec-6] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> SELECT user_id,username,password,nickname,dept_id,status FROM t_user WHERE ( ( user_id = '0101695108880048494' ) )
2020-03-25 15:51:42.381 [http-nio-8088-exec-6] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.RoleMapper.selectUserRoleByUsername
2020-03-25 15:51:42.382 [http-nio-8088-exec-6] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 10 ms
2020-03-25 15:51:42.382 [http-nio-8088-exec-6] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> select t_role.* from t_role left join t_user_role on t_role.role_id=t_user_role.role_id where t_user_role.user_id='0101695108880048494'
2020-03-25 15:57:01.468 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$aeea70f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 15:57:02.727 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin] & group[plodes-admin]
2020-03-25 15:57:02.736 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin.yaml] & group[plodes-admin]
2020-03-25 15:57:02.745 [main] INFO  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:91) - Loading nacos data, dataId: 'plodes-admin-dev.yaml', group: 'plodes-admin', data: spring:
   datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC
    username: root
    password : 123456
    initialSize: 10
    minIdle: 20
    maxActive: 1000
    maxWait : 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis : 30000
    validationQuery : SELECT 1 FROM DUAL
    testWhileIdle : false
    testOnBorrow : false
    testOnReturn : false
    poolPreparedStatements : true
    maxPoolPreparedStatementPerConnectionSize : 20
    filters: stat,wall,log4j2
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
2020-03-25 15:57:02.752 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:101) - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@1495407511 {name='plodes-admin-dev.yaml', properties={spring.datasource.maxPoolPreparedStatementPerConnectionSize=20, spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver, spring.datasource.testWhileIdle=false, spring.datasource.poolPreparedStatements=true, spring.datasource.timeBetweenEvictionRunsMillis=60000, spring.datasource.minIdle=20, spring.datasource.minEvictableIdleTimeMillis=30000, spring.datasource.password=123456, spring.datasource.maxWait=60000, spring.datasource.maxActive=1000, spring.datasource.filters=stat,wall,log4j2, spring.datasource.username=root, spring.datasource.testOnBorrow=false, spring.datasource.initialSize=10, spring.datasource.url=jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC, spring.datasource.testOnReturn=false, spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000, spring.datasource.validationQuery=SELECT 1 FROM DUAL}}, NacosPropertySource@1791267914 {name='plodes-admin.yaml', properties={}}, NacosPropertySource@1517758613 {name='plodes-admin', properties={}}]}
2020-03-25 15:57:02.792 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:655) - The following profiles are active: dev
2020-03-25 15:57:03.408 [main] WARN  org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:558) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Cannot register bean definition [Root bean: class [null]; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] for bean 'dataSource': There is already [Root bean: class [null]; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=true; factoryBeanName=dataBasesConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/plodes/config/database/DataBasesConfig.class]] bound.
2020-03-25 15:57:03.417 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136) - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-25 15:57:03.421 [main] ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:40) - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'dataSource', defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class], could not be registered. A bean with that name has already been defined in class path resource [com/plodes/config/database/DataBasesConfig.class] and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

2020-03-25 16:00:25.323 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2496a0fb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:00:26.794 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin] & group[plodes-admin]
2020-03-25 16:00:26.805 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin.yaml] & group[plodes-admin]
2020-03-25 16:00:26.819 [main] INFO  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:91) - Loading nacos data, dataId: 'plodes-admin-dev.yaml', group: 'plodes-admin', data: spring:
   datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC
    username: root
    password : 123456
    initialSize: 10
    minIdle: 20
    maxActive: 1000
    maxWait : 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis : 30000
    validationQuery : SELECT 1 FROM DUAL
    testWhileIdle : false
    testOnBorrow : false
    testOnReturn : false
    poolPreparedStatements : true
    maxPoolPreparedStatementPerConnectionSize : 20
    filters: stat,wall,log4j2
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
2020-03-25 16:00:26.826 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:101) - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@1121891386 {name='plodes-admin-dev.yaml', properties={spring.datasource.maxPoolPreparedStatementPerConnectionSize=20, spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver, spring.datasource.testWhileIdle=false, spring.datasource.poolPreparedStatements=true, spring.datasource.timeBetweenEvictionRunsMillis=60000, spring.datasource.minIdle=20, spring.datasource.minEvictableIdleTimeMillis=30000, spring.datasource.password=123456, spring.datasource.maxWait=60000, spring.datasource.maxActive=1000, spring.datasource.filters=stat,wall,log4j2, spring.datasource.username=root, spring.datasource.testOnBorrow=false, spring.datasource.initialSize=10, spring.datasource.url=jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC, spring.datasource.testOnReturn=false, spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000, spring.datasource.validationQuery=SELECT 1 FROM DUAL}}, NacosPropertySource@501951555 {name='plodes-admin.yaml', properties={}}, NacosPropertySource@1002041276 {name='plodes-admin', properties={}}]}
2020-03-25 16:00:26.867 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:655) - The following profiles are active: dev
2020-03-25 16:00:27.382 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-25 16:00:27.384 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-03-25 16:00:27.419 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 24ms. Found 0 Redis repository interfaces.
2020-03-25 16:00:27.654 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=70a72f32-d88c-3113-b64d-c6186c67fd77
2020-03-25 16:00:27.735 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:00:27.742 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [com.xlcxx.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$51a6b7a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:00:27.759 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:00:27.761 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@435cc7f9' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:00:27.762 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:00:27.764 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:00:27.771 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2496a0fb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:00:27.971 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92) - Tomcat initialized with port(s): 8088 (http)
2020-03-25 16:00:27.980 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8088"]
2020-03-25 16:00:27.980 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
2020-03-25 16:00:27.981 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-03-25 16:00:28.060 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-03-25 16:00:28.060 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1178 ms
2020-03-25 16:00:28.167 [main] WARN  org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:558) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'secutityConfig': Unsatisfied dependency expressed through field 'authonUserDetails'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userDetailService': Unsatisfied dependency expressed through field 'userDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userServicesImpl': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userMapper' defined in file [E:\git\royal\plodes\target\classes\com\plodes\plodes\mapper\system\UserMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
2020-03-25 16:00:28.169 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Stopping service [Tomcat]
2020-03-25 16:00:28.185 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136) - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-25 16:00:28.193 [main] ERROR org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:826) - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'secutityConfig': Unsatisfied dependency expressed through field 'authonUserDetails'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userDetailService': Unsatisfied dependency expressed through field 'userDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userServicesImpl': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userMapper' defined in file [E:\git\royal\plodes\target\classes\com\plodes\plodes\mapper\system\UserMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878) ~[spring-context-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) ~[spring-context-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141) ~[spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at com.xlcxx.Application.main(Application.java:26) [classes/:?]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userDetailService': Unsatisfied dependency expressed through field 'userDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userServicesImpl': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userMapper' defined in file [E:\git\royal\plodes\target\classes\com\plodes\plodes\mapper\system\UserMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 19 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userServicesImpl': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userMapper' defined in file [E:\git\royal\plodes\target\classes\com\plodes\plodes\mapper\system\UserMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 19 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userMapper' defined in file [E:\git\royal\plodes\target\classes\com\plodes\plodes\mapper\system\UserMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 19 more
Caused by: java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
	at org.springframework.util.Assert.notNull(Assert.java:198) ~[spring-core-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.mybatis.spring.support.SqlSessionDaoSupport.checkDaoConfig(SqlSessionDaoSupport.java:122) ~[mybatis-spring-2.0.2.jar:2.0.2]
	at tk.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:76) ~[mapper-spring-1.1.5.jar:?]
	at org.springframework.dao.support.DaoSupport.afterPropertiesSet(DaoSupport.java:44) ~[spring-tx-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 19 more
2020-03-25 16:01:12.734 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3b8a39cf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:01:14.042 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin] & group[plodes-admin]
2020-03-25 16:01:14.052 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin.yaml] & group[plodes-admin]
2020-03-25 16:01:14.068 [main] INFO  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:91) - Loading nacos data, dataId: 'plodes-admin-dev.yaml', group: 'plodes-admin', data: spring:
   datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC
    username: root
    password : 123456
    initialSize: 10
    minIdle: 20
    maxActive: 1000
    maxWait : 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis : 30000
    validationQuery : SELECT 1 FROM DUAL
    testWhileIdle : false
    testOnBorrow : false
    testOnReturn : false
    poolPreparedStatements : true
    maxPoolPreparedStatementPerConnectionSize : 20
    filters: stat,wall,log4j2
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
2020-03-25 16:01:14.076 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:101) - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@1370495328 {name='plodes-admin-dev.yaml', properties={spring.datasource.maxPoolPreparedStatementPerConnectionSize=20, spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver, spring.datasource.testWhileIdle=false, spring.datasource.poolPreparedStatements=true, spring.datasource.timeBetweenEvictionRunsMillis=60000, spring.datasource.minIdle=20, spring.datasource.minEvictableIdleTimeMillis=30000, spring.datasource.password=123456, spring.datasource.maxWait=60000, spring.datasource.maxActive=1000, spring.datasource.filters=stat,wall,log4j2, spring.datasource.username=root, spring.datasource.testOnBorrow=false, spring.datasource.initialSize=10, spring.datasource.url=jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC, spring.datasource.testOnReturn=false, spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000, spring.datasource.validationQuery=SELECT 1 FROM DUAL}}, NacosPropertySource@1748097277 {name='plodes-admin.yaml', properties={}}, NacosPropertySource@668760567 {name='plodes-admin', properties={}}]}
2020-03-25 16:01:14.131 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:655) - The following profiles are active: dev
2020-03-25 16:01:14.697 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-25 16:01:14.700 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-03-25 16:01:14.747 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 35ms. Found 0 Redis repository interfaces.
2020-03-25 16:01:14.977 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=70a72f32-d88c-3113-b64d-c6186c67fd77
2020-03-25 16:01:15.061 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:01:15.069 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [com.xlcxx.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$689a5077] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:01:15.086 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:01:15.088 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@671c4166' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:01:15.091 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:01:15.094 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:01:15.101 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3b8a39cf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:01:15.295 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92) - Tomcat initialized with port(s): 8088 (http)
2020-03-25 16:01:15.304 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8088"]
2020-03-25 16:01:15.304 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
2020-03-25 16:01:15.305 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-03-25 16:01:15.390 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-03-25 16:01:15.390 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1239 ms
2020-03-25 16:01:15.530 [main] WARN  org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:558) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'secutityConfig': Unsatisfied dependency expressed through field 'authonUserDetails'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userDetailService': Unsatisfied dependency expressed through field 'userDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userServicesImpl': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userMapper' defined in file [E:\git\royal\plodes\target\classes\com\plodes\plodes\mapper\system\UserMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
2020-03-25 16:01:15.533 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Stopping service [Tomcat]
2020-03-25 16:01:15.553 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136) - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-25 16:01:15.561 [main] ERROR org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:826) - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'secutityConfig': Unsatisfied dependency expressed through field 'authonUserDetails'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userDetailService': Unsatisfied dependency expressed through field 'userDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userServicesImpl': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userMapper' defined in file [E:\git\royal\plodes\target\classes\com\plodes\plodes\mapper\system\UserMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878) ~[spring-context-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) ~[spring-context-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141) ~[spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at com.xlcxx.Application.main(Application.java:25) [classes/:?]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userDetailService': Unsatisfied dependency expressed through field 'userDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userServicesImpl': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userMapper' defined in file [E:\git\royal\plodes\target\classes\com\plodes\plodes\mapper\system\UserMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 19 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userServicesImpl': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userMapper' defined in file [E:\git\royal\plodes\target\classes\com\plodes\plodes\mapper\system\UserMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 19 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userMapper' defined in file [E:\git\royal\plodes\target\classes\com\plodes\plodes\mapper\system\UserMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 19 more
Caused by: java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
	at org.springframework.util.Assert.notNull(Assert.java:198) ~[spring-core-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.mybatis.spring.support.SqlSessionDaoSupport.checkDaoConfig(SqlSessionDaoSupport.java:122) ~[mybatis-spring-2.0.2.jar:2.0.2]
	at tk.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:76) ~[mapper-spring-1.1.5.jar:?]
	at org.springframework.dao.support.DaoSupport.afterPropertiesSet(DaoSupport.java:44) ~[spring-tx-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 19 more
2020-03-25 16:05:03.475 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$69882dd2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:05:04.805 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin] & group[plodes-admin]
2020-03-25 16:05:04.813 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin.yaml] & group[plodes-admin]
2020-03-25 16:05:04.825 [main] INFO  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:91) - Loading nacos data, dataId: 'plodes-admin-dev.yaml', group: 'plodes-admin', data: spring:
   datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC
    username: root
    password : 123456
    initialSize: 10
    minIdle: 20
    maxActive: 1000
    maxWait : 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis : 30000
    validationQuery : SELECT 1 FROM DUAL
    testWhileIdle : false
    testOnBorrow : false
    testOnReturn : false
    poolPreparedStatements : true
    maxPoolPreparedStatementPerConnectionSize : 20
    filters: stat,wall,log4j2
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
2020-03-25 16:05:04.831 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:101) - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@612716569 {name='plodes-admin-dev.yaml', properties={spring.datasource.maxPoolPreparedStatementPerConnectionSize=20, spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver, spring.datasource.testWhileIdle=false, spring.datasource.poolPreparedStatements=true, spring.datasource.timeBetweenEvictionRunsMillis=60000, spring.datasource.minIdle=20, spring.datasource.minEvictableIdleTimeMillis=30000, spring.datasource.password=123456, spring.datasource.maxWait=60000, spring.datasource.maxActive=1000, spring.datasource.filters=stat,wall,log4j2, spring.datasource.username=root, spring.datasource.testOnBorrow=false, spring.datasource.initialSize=10, spring.datasource.url=jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC, spring.datasource.testOnReturn=false, spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000, spring.datasource.validationQuery=SELECT 1 FROM DUAL}}, NacosPropertySource@985487390 {name='plodes-admin.yaml', properties={}}, NacosPropertySource@1296928719 {name='plodes-admin', properties={}}]}
2020-03-25 16:05:04.873 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:655) - The following profiles are active: dev
2020-03-25 16:05:05.457 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-25 16:05:05.460 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-03-25 16:05:05.497 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 26ms. Found 0 Redis repository interfaces.
2020-03-25 16:05:05.734 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=70a72f32-d88c-3113-b64d-c6186c67fd77
2020-03-25 16:05:05.815 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:05:05.824 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [com.xlcxx.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$9698447a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:05:05.842 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:05:05.844 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@57562473' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:05:05.844 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:05:05.847 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:05:05.854 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$69882dd2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:05:06.053 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92) - Tomcat initialized with port(s): 8088 (http)
2020-03-25 16:05:06.061 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8088"]
2020-03-25 16:05:06.062 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
2020-03-25 16:05:06.062 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-03-25 16:05:06.143 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-03-25 16:05:06.143 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1254 ms
2020-03-25 16:05:06.264 [main] WARN  org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:558) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'secutityConfig': Unsatisfied dependency expressed through field 'authonUserDetails'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userDetailService': Unsatisfied dependency expressed through field 'userDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userServicesImpl': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userMapper' defined in file [E:\git\royal\plodes\target\classes\com\plodes\plodes\mapper\system\UserMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
2020-03-25 16:05:06.266 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Stopping service [Tomcat]
2020-03-25 16:05:06.284 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136) - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-25 16:05:06.291 [main] ERROR org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:826) - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'secutityConfig': Unsatisfied dependency expressed through field 'authonUserDetails'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userDetailService': Unsatisfied dependency expressed through field 'userDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userServicesImpl': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userMapper' defined in file [E:\git\royal\plodes\target\classes\com\plodes\plodes\mapper\system\UserMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878) ~[spring-context-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) ~[spring-context-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141) ~[spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at com.xlcxx.Application.main(Application.java:25) [classes/:?]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userDetailService': Unsatisfied dependency expressed through field 'userDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userServicesImpl': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userMapper' defined in file [E:\git\royal\plodes\target\classes\com\plodes\plodes\mapper\system\UserMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 19 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userServicesImpl': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userMapper' defined in file [E:\git\royal\plodes\target\classes\com\plodes\plodes\mapper\system\UserMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 19 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userMapper' defined in file [E:\git\royal\plodes\target\classes\com\plodes\plodes\mapper\system\UserMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 19 more
Caused by: java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
	at org.springframework.util.Assert.notNull(Assert.java:198) ~[spring-core-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.mybatis.spring.support.SqlSessionDaoSupport.checkDaoConfig(SqlSessionDaoSupport.java:122) ~[mybatis-spring-2.0.2.jar:2.0.2]
	at tk.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:76) ~[mapper-spring-1.1.5.jar:?]
	at org.springframework.dao.support.DaoSupport.afterPropertiesSet(DaoSupport.java:44) ~[spring-tx-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 19 more
2020-03-25 16:05:43.564 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e6fb1704] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:05:44.863 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin] & group[plodes-admin]
2020-03-25 16:05:44.871 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin.yaml] & group[plodes-admin]
2020-03-25 16:05:44.881 [main] INFO  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:91) - Loading nacos data, dataId: 'plodes-admin-dev.yaml', group: 'plodes-admin', data: spring:
   datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC
    username: root
    password : 123456
    initialSize: 10
    minIdle: 20
    maxActive: 1000
    maxWait : 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis : 30000
    validationQuery : SELECT 1 FROM DUAL
    testWhileIdle : false
    testOnBorrow : false
    testOnReturn : false
    poolPreparedStatements : true
    maxPoolPreparedStatementPerConnectionSize : 20
    filters: stat,wall,log4j2
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
2020-03-25 16:05:44.890 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:101) - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@1869247587 {name='plodes-admin-dev.yaml', properties={spring.datasource.maxPoolPreparedStatementPerConnectionSize=20, spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver, spring.datasource.testWhileIdle=false, spring.datasource.poolPreparedStatements=true, spring.datasource.timeBetweenEvictionRunsMillis=60000, spring.datasource.minIdle=20, spring.datasource.minEvictableIdleTimeMillis=30000, spring.datasource.password=123456, spring.datasource.maxWait=60000, spring.datasource.maxActive=1000, spring.datasource.filters=stat,wall,log4j2, spring.datasource.username=root, spring.datasource.testOnBorrow=false, spring.datasource.initialSize=10, spring.datasource.url=jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC, spring.datasource.testOnReturn=false, spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000, spring.datasource.validationQuery=SELECT 1 FROM DUAL}}, NacosPropertySource@467313213 {name='plodes-admin.yaml', properties={}}, NacosPropertySource@2045913001 {name='plodes-admin', properties={}}]}
2020-03-25 16:05:44.955 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:655) - The following profiles are active: dev
2020-03-25 16:05:45.494 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-25 16:05:45.496 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-03-25 16:05:45.538 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 30ms. Found 0 Redis repository interfaces.
2020-03-25 16:05:45.765 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=ed6bc145-402e-3eb1-a992-3caa729f78aa
2020-03-25 16:05:45.852 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:05:45.859 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [com.xlcxx.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$140b2dac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:05:45.876 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:05:45.878 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3240b2a4' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:05:45.878 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:05:45.882 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:05:45.889 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e6fb1704] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:05:46.086 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92) - Tomcat initialized with port(s): 8088 (http)
2020-03-25 16:05:46.095 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8088"]
2020-03-25 16:05:46.096 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
2020-03-25 16:05:46.096 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-03-25 16:05:46.183 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-03-25 16:05:46.184 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1209 ms
2020-03-25 16:05:46.291 [main] WARN  org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:558) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'secutityConfig': Unsatisfied dependency expressed through field 'authonUserDetails'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userDetailService': Unsatisfied dependency expressed through field 'userDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userServicesImpl': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'tk.mybatis.mapper.common.Mapper<com.xlcxx.plodes.system.domian.User>' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2020-03-25 16:05:46.292 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Stopping service [Tomcat]
2020-03-25 16:05:46.307 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136) - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-25 16:05:46.750 [main] ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:40) - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field mapper in com.xlcxx.plodes.baseServices.impl.BaseServices required a bean of type 'tk.mybatis.mapper.common.Mapper' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'tk.mybatis.mapper.common.Mapper' in your configuration.

2020-03-25 16:07:45.111 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ef2239b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:07:46.441 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin] & group[plodes-admin]
2020-03-25 16:07:46.451 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin.yaml] & group[plodes-admin]
2020-03-25 16:07:46.462 [main] INFO  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:91) - Loading nacos data, dataId: 'plodes-admin-dev.yaml', group: 'plodes-admin', data: spring:
   datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC
    username: root
    password : 123456
    initialSize: 10
    minIdle: 20
    maxActive: 1000
    maxWait : 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis : 30000
    validationQuery : SELECT 1 FROM DUAL
    testWhileIdle : false
    testOnBorrow : false
    testOnReturn : false
    poolPreparedStatements : true
    maxPoolPreparedStatementPerConnectionSize : 20
    filters: stat,wall,log4j2
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
2020-03-25 16:07:46.468 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:101) - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@1290614253 {name='plodes-admin-dev.yaml', properties={spring.datasource.maxPoolPreparedStatementPerConnectionSize=20, spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver, spring.datasource.testWhileIdle=false, spring.datasource.poolPreparedStatements=true, spring.datasource.timeBetweenEvictionRunsMillis=60000, spring.datasource.minIdle=20, spring.datasource.minEvictableIdleTimeMillis=30000, spring.datasource.password=123456, spring.datasource.maxWait=60000, spring.datasource.maxActive=1000, spring.datasource.filters=stat,wall,log4j2, spring.datasource.username=root, spring.datasource.testOnBorrow=false, spring.datasource.initialSize=10, spring.datasource.url=jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC, spring.datasource.testOnReturn=false, spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000, spring.datasource.validationQuery=SELECT 1 FROM DUAL}}, NacosPropertySource@740467528 {name='plodes-admin.yaml', properties={}}, NacosPropertySource@2077662850 {name='plodes-admin', properties={}}]}
2020-03-25 16:07:46.512 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:655) - The following profiles are active: dev
2020-03-25 16:07:47.050 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-25 16:07:47.053 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-03-25 16:07:47.094 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 29ms. Found 0 Redis repository interfaces.
2020-03-25 16:07:47.317 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=ed6bc145-402e-3eb1-a992-3caa729f78aa
2020-03-25 16:07:47.400 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:07:47.407 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [com.xlcxx.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$3c023a43] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:07:47.424 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:07:47.426 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1a22e0ef' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:07:47.428 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:07:47.430 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:07:47.437 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ef2239b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:07:47.627 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92) - Tomcat initialized with port(s): 8088 (http)
2020-03-25 16:07:47.636 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8088"]
2020-03-25 16:07:47.637 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
2020-03-25 16:07:47.637 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-03-25 16:07:47.721 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-03-25 16:07:47.722 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1188 ms
2020-03-25 16:07:47.835 [main] WARN  org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:558) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'secutityConfig': Unsatisfied dependency expressed through field 'authonUserDetails'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userDetailService': Unsatisfied dependency expressed through field 'userDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userServicesImpl': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'tk.mybatis.mapper.common.Mapper<com.xlcxx.plodes.system.domian.User>' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2020-03-25 16:07:47.837 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Stopping service [Tomcat]
2020-03-25 16:07:47.851 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136) - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-25 16:07:47.967 [main] ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:40) - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field mapper in com.xlcxx.plodes.baseServices.impl.BaseServices required a bean of type 'tk.mybatis.mapper.common.Mapper' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'tk.mybatis.mapper.common.Mapper' in your configuration.

2020-03-25 16:08:30.563 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ddd476f9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:08:31.870 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin] & group[plodes-admin]
2020-03-25 16:08:31.900 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin.yaml] & group[plodes-admin]
2020-03-25 16:08:31.911 [main] INFO  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:91) - Loading nacos data, dataId: 'plodes-admin-dev.yaml', group: 'plodes-admin', data: spring:
   datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC
    username: root
    password : 123456
    initialSize: 10
    minIdle: 20
    maxActive: 1000
    maxWait : 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis : 30000
    validationQuery : SELECT 1 FROM DUAL
    testWhileIdle : false
    testOnBorrow : false
    testOnReturn : false
    poolPreparedStatements : true
    maxPoolPreparedStatementPerConnectionSize : 20
    filters: stat,wall,log4j2
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
2020-03-25 16:08:31.917 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:101) - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@1622694817 {name='plodes-admin-dev.yaml', properties={spring.datasource.maxPoolPreparedStatementPerConnectionSize=20, spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver, spring.datasource.testWhileIdle=false, spring.datasource.poolPreparedStatements=true, spring.datasource.timeBetweenEvictionRunsMillis=60000, spring.datasource.minIdle=20, spring.datasource.minEvictableIdleTimeMillis=30000, spring.datasource.password=123456, spring.datasource.maxWait=60000, spring.datasource.maxActive=1000, spring.datasource.filters=stat,wall,log4j2, spring.datasource.username=root, spring.datasource.testOnBorrow=false, spring.datasource.initialSize=10, spring.datasource.url=jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC, spring.datasource.testOnReturn=false, spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000, spring.datasource.validationQuery=SELECT 1 FROM DUAL}}, NacosPropertySource@1227867806 {name='plodes-admin.yaml', properties={}}, NacosPropertySource@292958927 {name='plodes-admin', properties={}}]}
2020-03-25 16:08:31.960 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:655) - The following profiles are active: dev
2020-03-25 16:08:32.544 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-25 16:08:32.546 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-03-25 16:08:32.591 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 31ms. Found 0 Redis repository interfaces.
2020-03-25 16:08:32.819 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=ed6bc145-402e-3eb1-a992-3caa729f78aa
2020-03-25 16:08:32.904 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:08:32.913 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [com.xlcxx.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$ae48da1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:08:32.930 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:08:32.931 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4b74b35' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:08:32.932 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:08:32.935 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:08:32.942 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ddd476f9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:08:33.150 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92) - Tomcat initialized with port(s): 8088 (http)
2020-03-25 16:08:33.158 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8088"]
2020-03-25 16:08:33.158 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
2020-03-25 16:08:33.159 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-03-25 16:08:33.241 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-03-25 16:08:33.242 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1262 ms
2020-03-25 16:08:33.353 [main] WARN  org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:558) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'secutityConfig': Unsatisfied dependency expressed through field 'authonUserDetails'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userDetailService': Unsatisfied dependency expressed through field 'userDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userServicesImpl': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'tk.mybatis.mapper.common.Mapper<com.xlcxx.plodes.system.domian.User>' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2020-03-25 16:08:33.354 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Stopping service [Tomcat]
2020-03-25 16:08:33.371 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136) - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-25 16:08:33.525 [main] ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:40) - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field mapper in com.xlcxx.plodes.baseServices.impl.BaseServices required a bean of type 'tk.mybatis.mapper.common.Mapper' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'tk.mybatis.mapper.common.Mapper' in your configuration.

2020-03-25 16:09:43.347 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f8ca2004] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:09:44.733 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin] & group[plodes-admin]
2020-03-25 16:09:44.742 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin.yaml] & group[plodes-admin]
2020-03-25 16:09:44.754 [main] INFO  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:91) - Loading nacos data, dataId: 'plodes-admin-dev.yaml', group: 'plodes-admin', data: spring:
   datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC
    username: root
    password : 123456
    initialSize: 10
    minIdle: 20
    maxActive: 1000
    maxWait : 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis : 30000
    validationQuery : SELECT 1 FROM DUAL
    testWhileIdle : false
    testOnBorrow : false
    testOnReturn : false
    poolPreparedStatements : true
    maxPoolPreparedStatementPerConnectionSize : 20
    filters: stat,wall,log4j2
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
2020-03-25 16:09:44.761 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:101) - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@653345773 {name='plodes-admin-dev.yaml', properties={spring.datasource.maxPoolPreparedStatementPerConnectionSize=20, spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver, spring.datasource.testWhileIdle=false, spring.datasource.poolPreparedStatements=true, spring.datasource.timeBetweenEvictionRunsMillis=60000, spring.datasource.minIdle=20, spring.datasource.minEvictableIdleTimeMillis=30000, spring.datasource.password=123456, spring.datasource.maxWait=60000, spring.datasource.maxActive=1000, spring.datasource.filters=stat,wall,log4j2, spring.datasource.username=root, spring.datasource.testOnBorrow=false, spring.datasource.initialSize=10, spring.datasource.url=jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC, spring.datasource.testOnReturn=false, spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000, spring.datasource.validationQuery=SELECT 1 FROM DUAL}}, NacosPropertySource@1008612116 {name='plodes-admin.yaml', properties={}}, NacosPropertySource@1266093632 {name='plodes-admin', properties={}}]}
2020-03-25 16:09:44.803 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:655) - The following profiles are active: dev
2020-03-25 16:09:45.317 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-25 16:09:45.320 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-03-25 16:09:45.390 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 55ms. Found 0 Redis repository interfaces.
2020-03-25 16:09:45.732 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=ed6bc145-402e-3eb1-a992-3caa729f78aa
2020-03-25 16:09:45.816 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:09:45.825 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [com.xlcxx.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$25da36ac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:09:45.843 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:09:45.845 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@984169e' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:09:45.845 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:09:45.849 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:09:45.856 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f8ca2004] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:09:46.041 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92) - Tomcat initialized with port(s): 8088 (http)
2020-03-25 16:09:46.048 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8088"]
2020-03-25 16:09:46.049 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
2020-03-25 16:09:46.049 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-03-25 16:09:46.133 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-03-25 16:09:46.134 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1316 ms
2020-03-25 16:09:46.244 [main] WARN  org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:558) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'secutityConfig': Unsatisfied dependency expressed through field 'authonUserDetails'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userDetailService': Unsatisfied dependency expressed through field 'userDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userServicesImpl': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'tk.mybatis.mapper.common.Mapper<com.xlcxx.plodes.system.domian.User>' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2020-03-25 16:09:46.246 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Stopping service [Tomcat]
2020-03-25 16:09:46.261 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136) - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-25 16:09:46.367 [main] ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:40) - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field mapper in com.xlcxx.plodes.baseServices.impl.BaseServices required a bean of type 'tk.mybatis.mapper.common.Mapper' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'tk.mybatis.mapper.common.Mapper' in your configuration.

2020-03-25 16:10:30.289 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e01e7260] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:10:31.582 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin] & group[plodes-admin]
2020-03-25 16:10:31.590 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin.yaml] & group[plodes-admin]
2020-03-25 16:10:31.602 [main] INFO  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:91) - Loading nacos data, dataId: 'plodes-admin-dev.yaml', group: 'plodes-admin', data: spring:
   datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC
    username: root
    password : 123456
    initialSize: 10
    minIdle: 20
    maxActive: 1000
    maxWait : 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis : 30000
    validationQuery : SELECT 1 FROM DUAL
    testWhileIdle : false
    testOnBorrow : false
    testOnReturn : false
    poolPreparedStatements : true
    maxPoolPreparedStatementPerConnectionSize : 20
    filters: stat,wall,log4j2
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
2020-03-25 16:10:31.609 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:101) - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@1090695601 {name='plodes-admin-dev.yaml', properties={spring.datasource.maxPoolPreparedStatementPerConnectionSize=20, spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver, spring.datasource.testWhileIdle=false, spring.datasource.poolPreparedStatements=true, spring.datasource.timeBetweenEvictionRunsMillis=60000, spring.datasource.minIdle=20, spring.datasource.minEvictableIdleTimeMillis=30000, spring.datasource.password=123456, spring.datasource.maxWait=60000, spring.datasource.maxActive=1000, spring.datasource.filters=stat,wall,log4j2, spring.datasource.username=root, spring.datasource.testOnBorrow=false, spring.datasource.initialSize=10, spring.datasource.url=jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC, spring.datasource.testOnReturn=false, spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000, spring.datasource.validationQuery=SELECT 1 FROM DUAL}}, NacosPropertySource@1638249646 {name='plodes-admin.yaml', properties={}}, NacosPropertySource@980533504 {name='plodes-admin', properties={}}]}
2020-03-25 16:10:31.658 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:655) - The following profiles are active: dev
2020-03-25 16:10:32.141 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-25 16:10:32.143 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-03-25 16:10:32.190 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 32ms. Found 0 Redis repository interfaces.
2020-03-25 16:10:32.429 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=ed6bc145-402e-3eb1-a992-3caa729f78aa
2020-03-25 16:10:32.511 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:10:32.520 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [com.xlcxx.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$d2e8908] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:10:32.540 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:10:32.542 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@29a98d9f' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:10:32.543 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:10:32.546 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:10:32.556 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e01e7260] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:10:32.741 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92) - Tomcat initialized with port(s): 8088 (http)
2020-03-25 16:10:32.749 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8088"]
2020-03-25 16:10:32.749 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
2020-03-25 16:10:32.750 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-03-25 16:10:32.838 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-03-25 16:10:32.838 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1163 ms
2020-03-25 16:10:32.973 [main] WARN  org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:558) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'secutityConfig': Unsatisfied dependency expressed through field 'authonUserDetails'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userDetailService': Unsatisfied dependency expressed through field 'userDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userServicesImpl': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'tk.mybatis.mapper.common.Mapper<com.xlcxx.plodes.system.domian.User>' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2020-03-25 16:10:32.974 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Stopping service [Tomcat]
2020-03-25 16:10:32.993 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136) - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-25 16:10:33.088 [main] ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:40) - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field mapper in com.xlcxx.plodes.baseServices.impl.BaseServices required a bean of type 'tk.mybatis.mapper.common.Mapper' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'tk.mybatis.mapper.common.Mapper' in your configuration.

2020-03-25 16:12:17.215 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8fafaa9f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:12:18.697 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin] & group[plodes-admin]
2020-03-25 16:12:18.713 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin.yaml] & group[plodes-admin]
2020-03-25 16:12:18.729 [main] INFO  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:91) - Loading nacos data, dataId: 'plodes-admin-dev.yaml', group: 'plodes-admin', data: spring:
   datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC
    username: root
    password : 123456
    initialSize: 10
    minIdle: 20
    maxActive: 1000
    maxWait : 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis : 30000
    validationQuery : SELECT 1 FROM DUAL
    testWhileIdle : false
    testOnBorrow : false
    testOnReturn : false
    poolPreparedStatements : true
    maxPoolPreparedStatementPerConnectionSize : 20
    filters: stat,wall,log4j2
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
2020-03-25 16:12:18.737 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:101) - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@1556061855 {name='plodes-admin-dev.yaml', properties={spring.datasource.maxPoolPreparedStatementPerConnectionSize=20, spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver, spring.datasource.testWhileIdle=false, spring.datasource.poolPreparedStatements=true, spring.datasource.timeBetweenEvictionRunsMillis=60000, spring.datasource.minIdle=20, spring.datasource.minEvictableIdleTimeMillis=30000, spring.datasource.password=123456, spring.datasource.maxWait=60000, spring.datasource.maxActive=1000, spring.datasource.filters=stat,wall,log4j2, spring.datasource.username=root, spring.datasource.testOnBorrow=false, spring.datasource.initialSize=10, spring.datasource.url=jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC, spring.datasource.testOnReturn=false, spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000, spring.datasource.validationQuery=SELECT 1 FROM DUAL}}, NacosPropertySource@417875774 {name='plodes-admin.yaml', properties={}}, NacosPropertySource@1513029997 {name='plodes-admin', properties={}}]}
2020-03-25 16:12:18.776 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:655) - The following profiles are active: dev
2020-03-25 16:12:19.302 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-25 16:12:19.305 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-03-25 16:12:19.343 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 27ms. Found 0 Redis repository interfaces.
2020-03-25 16:12:19.571 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=ed6bc145-402e-3eb1-a992-3caa729f78aa
2020-03-25 16:12:19.657 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:12:19.669 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [com.xlcxx.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$bcbfc147] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:12:19.687 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:12:19.688 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@79a04e5f' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:12:19.689 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:12:19.692 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:12:19.700 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8fafaa9f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:12:19.905 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92) - Tomcat initialized with port(s): 8088 (http)
2020-03-25 16:12:19.913 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8088"]
2020-03-25 16:12:19.914 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
2020-03-25 16:12:19.915 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-03-25 16:12:19.999 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-03-25 16:12:19.999 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1210 ms
2020-03-25 16:12:20.120 [main] WARN  org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:558) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'secutityConfig': Unsatisfied dependency expressed through field 'authonUserDetails'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userDetailService': Unsatisfied dependency expressed through field 'userDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userServicesImpl': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'tk.mybatis.mapper.common.Mapper<com.xlcxx.plodes.system.domian.User>' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2020-03-25 16:12:20.122 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Stopping service [Tomcat]
2020-03-25 16:12:20.141 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136) - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-25 16:12:20.268 [main] ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:40) - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field mapper in com.xlcxx.plodes.baseServices.impl.BaseServices required a bean of type 'tk.mybatis.mapper.common.Mapper' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'tk.mybatis.mapper.common.Mapper' in your configuration.

2020-03-25 16:14:58.808 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$50f7322c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:15:00.108 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin] & group[plodes-admin]
2020-03-25 16:15:00.116 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin.yaml] & group[plodes-admin]
2020-03-25 16:15:00.128 [main] INFO  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:91) - Loading nacos data, dataId: 'plodes-admin-dev.yaml', group: 'plodes-admin', data: spring:
   datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC
    username: root
    password : 123456
    initialSize: 10
    minIdle: 20
    maxActive: 1000
    maxWait : 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis : 30000
    validationQuery : SELECT 1 FROM DUAL
    testWhileIdle : false
    testOnBorrow : false
    testOnReturn : false
    poolPreparedStatements : true
    maxPoolPreparedStatementPerConnectionSize : 20
    filters: stat,wall,log4j2
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
2020-03-25 16:15:00.134 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:101) - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@1733619456 {name='plodes-admin-dev.yaml', properties={spring.datasource.maxPoolPreparedStatementPerConnectionSize=20, spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver, spring.datasource.testWhileIdle=false, spring.datasource.poolPreparedStatements=true, spring.datasource.timeBetweenEvictionRunsMillis=60000, spring.datasource.minIdle=20, spring.datasource.minEvictableIdleTimeMillis=30000, spring.datasource.password=123456, spring.datasource.maxWait=60000, spring.datasource.maxActive=1000, spring.datasource.filters=stat,wall,log4j2, spring.datasource.username=root, spring.datasource.testOnBorrow=false, spring.datasource.initialSize=10, spring.datasource.url=jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC, spring.datasource.testOnReturn=false, spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000, spring.datasource.validationQuery=SELECT 1 FROM DUAL}}, NacosPropertySource@1637601612 {name='plodes-admin.yaml', properties={}}, NacosPropertySource@842957574 {name='plodes-admin', properties={}}]}
2020-03-25 16:15:00.171 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:655) - The following profiles are active: dev
2020-03-25 16:15:00.686 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-25 16:15:00.688 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-03-25 16:15:00.729 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 28ms. Found 0 Redis repository interfaces.
2020-03-25 16:15:00.955 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=cb431a77-1220-3e4b-beeb-ea3d94d922db
2020-03-25 16:15:01.041 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:15:01.049 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [com.xlcxx.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$7e0748d4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:15:01.066 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:15:01.068 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2d3ef181' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:15:01.069 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:15:01.072 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:15:01.078 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$50f7322c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:15:01.280 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92) - Tomcat initialized with port(s): 8088 (http)
2020-03-25 16:15:01.289 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8088"]
2020-03-25 16:15:01.290 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
2020-03-25 16:15:01.290 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-03-25 16:15:01.396 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-03-25 16:15:01.396 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1210 ms
2020-03-25 16:15:01.521 [main] WARN  org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:558) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'secutityConfig': Unsatisfied dependency expressed through field 'authonUserDetails'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userDetailService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userServicesImpl': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'tk.mybatis.mapper.common.Mapper<com.xlcxx.plodes.system.domian.User>' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2020-03-25 16:15:01.523 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Stopping service [Tomcat]
2020-03-25 16:15:01.540 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136) - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-25 16:15:01.641 [main] ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:40) - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field mapper in com.xlcxx.plodes.baseServices.impl.BaseServices required a bean of type 'tk.mybatis.mapper.common.Mapper' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'tk.mybatis.mapper.common.Mapper' in your configuration.

2020-03-25 16:15:44.631 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$17b7252c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:15:45.973 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin] & group[plodes-admin]
2020-03-25 16:15:45.982 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin.yaml] & group[plodes-admin]
2020-03-25 16:15:46.020 [main] INFO  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:91) - Loading nacos data, dataId: 'plodes-admin-dev.yaml', group: 'plodes-admin', data: spring:
   datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC
    username: root
    password : 123456
    initialSize: 10
    minIdle: 20
    maxActive: 1000
    maxWait : 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis : 30000
    validationQuery : SELECT 1 FROM DUAL
    testWhileIdle : false
    testOnBorrow : false
    testOnReturn : false
    poolPreparedStatements : true
    maxPoolPreparedStatementPerConnectionSize : 20
    filters: stat,wall,log4j2
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
2020-03-25 16:15:46.028 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:101) - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@1689458432 {name='plodes-admin-dev.yaml', properties={spring.datasource.maxPoolPreparedStatementPerConnectionSize=20, spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver, spring.datasource.testWhileIdle=false, spring.datasource.poolPreparedStatements=true, spring.datasource.timeBetweenEvictionRunsMillis=60000, spring.datasource.minIdle=20, spring.datasource.minEvictableIdleTimeMillis=30000, spring.datasource.password=123456, spring.datasource.maxWait=60000, spring.datasource.maxActive=1000, spring.datasource.filters=stat,wall,log4j2, spring.datasource.username=root, spring.datasource.testOnBorrow=false, spring.datasource.initialSize=10, spring.datasource.url=jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC, spring.datasource.testOnReturn=false, spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000, spring.datasource.validationQuery=SELECT 1 FROM DUAL}}, NacosPropertySource@996533593 {name='plodes-admin.yaml', properties={}}, NacosPropertySource@195970976 {name='plodes-admin', properties={}}]}
2020-03-25 16:15:46.086 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:655) - The following profiles are active: dev
2020-03-25 16:15:46.633 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-25 16:15:46.636 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-03-25 16:15:46.677 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 29ms. Found 0 Redis repository interfaces.
2020-03-25 16:15:46.914 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=cb431a77-1220-3e4b-beeb-ea3d94d922db
2020-03-25 16:15:46.994 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:15:47.002 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [com.xlcxx.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$44c73bd4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:15:47.019 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:15:47.021 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@57f9b467' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:15:47.022 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:15:47.025 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:15:47.035 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$17b7252c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:15:47.258 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92) - Tomcat initialized with port(s): 8088 (http)
2020-03-25 16:15:47.266 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8088"]
2020-03-25 16:15:47.267 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
2020-03-25 16:15:47.267 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-03-25 16:15:47.357 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-03-25 16:15:47.358 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1257 ms
2020-03-25 16:15:47.476 [main] WARN  org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:558) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'secutityConfig': Unsatisfied dependency expressed through field 'authonUserDetails'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userServicesImpl': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'tk.mybatis.mapper.common.Mapper<com.xlcxx.plodes.system.domian.User>' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2020-03-25 16:15:47.477 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Stopping service [Tomcat]
2020-03-25 16:15:47.496 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136) - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-25 16:15:47.609 [main] ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:40) - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field mapper in com.xlcxx.plodes.baseServices.impl.BaseServices required a bean of type 'tk.mybatis.mapper.common.Mapper' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'tk.mybatis.mapper.common.Mapper' in your configuration.

2020-03-25 16:17:09.776 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$172d7f21] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:17:11.097 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin] & group[plodes-admin]
2020-03-25 16:17:11.106 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin.yaml] & group[plodes-admin]
2020-03-25 16:17:11.116 [main] INFO  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:91) - Loading nacos data, dataId: 'plodes-admin-dev.yaml', group: 'plodes-admin', data: spring:
   datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC
    username: root
    password : 123456
    initialSize: 10
    minIdle: 20
    maxActive: 1000
    maxWait : 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis : 30000
    validationQuery : SELECT 1 FROM DUAL
    testWhileIdle : false
    testOnBorrow : false
    testOnReturn : false
    poolPreparedStatements : true
    maxPoolPreparedStatementPerConnectionSize : 20
    filters: stat,wall,log4j2
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
2020-03-25 16:17:11.124 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:101) - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@1803890702 {name='plodes-admin-dev.yaml', properties={spring.datasource.maxPoolPreparedStatementPerConnectionSize=20, spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver, spring.datasource.testWhileIdle=false, spring.datasource.poolPreparedStatements=true, spring.datasource.timeBetweenEvictionRunsMillis=60000, spring.datasource.minIdle=20, spring.datasource.minEvictableIdleTimeMillis=30000, spring.datasource.password=123456, spring.datasource.maxWait=60000, spring.datasource.maxActive=1000, spring.datasource.filters=stat,wall,log4j2, spring.datasource.username=root, spring.datasource.testOnBorrow=false, spring.datasource.initialSize=10, spring.datasource.url=jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC, spring.datasource.testOnReturn=false, spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000, spring.datasource.validationQuery=SELECT 1 FROM DUAL}}, NacosPropertySource@984567559 {name='plodes-admin.yaml', properties={}}, NacosPropertySource@1556061855 {name='plodes-admin', properties={}}]}
2020-03-25 16:17:11.167 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:655) - The following profiles are active: dev
2020-03-25 16:17:11.737 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-25 16:17:11.740 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-03-25 16:17:11.784 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 31ms. Found 0 Redis repository interfaces.
2020-03-25 16:17:12.025 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=cb431a77-1220-3e4b-beeb-ea3d94d922db
2020-03-25 16:17:12.112 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:17:12.120 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [com.xlcxx.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$443d95c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:17:12.137 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:17:12.138 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1ab5f08a' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:17:12.139 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:17:12.142 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:17:12.151 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$172d7f21] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:17:12.361 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92) - Tomcat initialized with port(s): 8088 (http)
2020-03-25 16:17:12.369 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8088"]
2020-03-25 16:17:12.369 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
2020-03-25 16:17:12.370 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-03-25 16:17:12.463 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-03-25 16:17:12.463 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1277 ms
2020-03-25 16:17:12.951 [main] WARN  org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:558) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'secutityConfig': Unsatisfied dependency expressed through field 'authonUserDetails'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'userServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userServicesImpl': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'tk.mybatis.mapper.common.Mapper<com.xlcxx.plodes.system.domian.User>' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2020-03-25 16:17:12.951 [main] INFO  com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948) - {dataSource-0} closing ...
2020-03-25 16:17:12.952 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Stopping service [Tomcat]
2020-03-25 16:17:12.966 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136) - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-25 16:17:13.060 [main] ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:40) - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field mapper in com.xlcxx.plodes.baseServices.impl.BaseServices required a bean of type 'tk.mybatis.mapper.common.Mapper' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'tk.mybatis.mapper.common.Mapper' in your configuration.

2020-03-25 16:18:15.864 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$dda776e3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:18:17.180 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin] & group[plodes-admin]
2020-03-25 16:18:17.191 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin.yaml] & group[plodes-admin]
2020-03-25 16:18:17.205 [main] INFO  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:91) - Loading nacos data, dataId: 'plodes-admin-dev.yaml', group: 'plodes-admin', data: spring:
   datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC
    username: root
    password : 123456
    initialSize: 10
    minIdle: 20
    maxActive: 1000
    maxWait : 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis : 30000
    validationQuery : SELECT 1 FROM DUAL
    testWhileIdle : false
    testOnBorrow : false
    testOnReturn : false
    poolPreparedStatements : true
    maxPoolPreparedStatementPerConnectionSize : 20
    filters: stat,wall,log4j2
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
2020-03-25 16:18:17.212 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:101) - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@2077662850 {name='plodes-admin-dev.yaml', properties={spring.datasource.maxPoolPreparedStatementPerConnectionSize=20, spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver, spring.datasource.testWhileIdle=false, spring.datasource.poolPreparedStatements=true, spring.datasource.timeBetweenEvictionRunsMillis=60000, spring.datasource.minIdle=20, spring.datasource.minEvictableIdleTimeMillis=30000, spring.datasource.password=123456, spring.datasource.maxWait=60000, spring.datasource.maxActive=1000, spring.datasource.filters=stat,wall,log4j2, spring.datasource.username=root, spring.datasource.testOnBorrow=false, spring.datasource.initialSize=10, spring.datasource.url=jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC, spring.datasource.testOnReturn=false, spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000, spring.datasource.validationQuery=SELECT 1 FROM DUAL}}, NacosPropertySource@1960253514 {name='plodes-admin.yaml', properties={}}, NacosPropertySource@1370495328 {name='plodes-admin', properties={}}]}
2020-03-25 16:18:17.267 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:655) - The following profiles are active: dev
2020-03-25 16:18:17.914 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-25 16:18:17.917 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-03-25 16:18:17.961 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 33ms. Found 0 Redis repository interfaces.
2020-03-25 16:18:18.207 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=cb431a77-1220-3e4b-beeb-ea3d94d922db
2020-03-25 16:18:18.291 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:18:18.299 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [com.xlcxx.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$ab78d8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:18:18.317 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:18:18.319 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@72fd8a3c' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:18:18.320 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:18:18.322 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:18:18.329 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$dda776e3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:18:18.544 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92) - Tomcat initialized with port(s): 8088 (http)
2020-03-25 16:18:18.556 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8088"]
2020-03-25 16:18:18.557 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
2020-03-25 16:18:18.557 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-03-25 16:18:18.665 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-03-25 16:18:18.665 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1378 ms
2020-03-25 16:18:18.910 [main] WARN  org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:558) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'secutityConfig': Unsatisfied dependency expressed through field 'authonUserDetails'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'roleServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'roleServicesImpl': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'tk.mybatis.mapper.common.Mapper<com.xlcxx.plodes.system.domian.Role>' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2020-03-25 16:18:18.911 [main] INFO  com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948) - {dataSource-0} closing ...
2020-03-25 16:18:18.912 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Stopping service [Tomcat]
2020-03-25 16:18:18.927 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136) - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-25 16:18:19.018 [main] ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:40) - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field mapper in com.xlcxx.plodes.baseServices.impl.BaseServices required a bean of type 'tk.mybatis.mapper.common.Mapper' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'tk.mybatis.mapper.common.Mapper' in your configuration.

2020-03-25 16:19:01.571 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a6e66c2a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:19:02.878 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin] & group[plodes-admin]
2020-03-25 16:19:02.889 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin.yaml] & group[plodes-admin]
2020-03-25 16:19:02.901 [main] INFO  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:91) - Loading nacos data, dataId: 'plodes-admin-dev.yaml', group: 'plodes-admin', data: spring:
   datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC
    username: root
    password : 123456
    initialSize: 10
    minIdle: 20
    maxActive: 1000
    maxWait : 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis : 30000
    validationQuery : SELECT 1 FROM DUAL
    testWhileIdle : false
    testOnBorrow : false
    testOnReturn : false
    poolPreparedStatements : true
    maxPoolPreparedStatementPerConnectionSize : 20
    filters: stat,wall,log4j2
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
2020-03-25 16:19:02.908 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:101) - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@981159997 {name='plodes-admin-dev.yaml', properties={spring.datasource.maxPoolPreparedStatementPerConnectionSize=20, spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver, spring.datasource.testWhileIdle=false, spring.datasource.poolPreparedStatements=true, spring.datasource.timeBetweenEvictionRunsMillis=60000, spring.datasource.minIdle=20, spring.datasource.minEvictableIdleTimeMillis=30000, spring.datasource.password=123456, spring.datasource.maxWait=60000, spring.datasource.maxActive=1000, spring.datasource.filters=stat,wall,log4j2, spring.datasource.username=root, spring.datasource.testOnBorrow=false, spring.datasource.initialSize=10, spring.datasource.url=jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC, spring.datasource.testOnReturn=false, spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000, spring.datasource.validationQuery=SELECT 1 FROM DUAL}}, NacosPropertySource@85121323 {name='plodes-admin.yaml', properties={}}, NacosPropertySource@1657125852 {name='plodes-admin', properties={}}]}
2020-03-25 16:19:02.963 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:655) - The following profiles are active: dev
2020-03-25 16:19:03.612 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-25 16:19:03.615 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-03-25 16:19:03.665 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 38ms. Found 0 Redis repository interfaces.
2020-03-25 16:19:03.925 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=cb431a77-1220-3e4b-beeb-ea3d94d922db
2020-03-25 16:19:04.022 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:19:04.031 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [com.xlcxx.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$d3f682d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:19:04.051 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:19:04.053 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1c26273d' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:19:04.055 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:19:04.059 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:19:04.068 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a6e66c2a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:19:04.308 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92) - Tomcat initialized with port(s): 8088 (http)
2020-03-25 16:19:04.317 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8088"]
2020-03-25 16:19:04.317 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
2020-03-25 16:19:04.318 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-03-25 16:19:04.415 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-03-25 16:19:04.415 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1430 ms
2020-03-25 16:19:04.665 [main] WARN  org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:558) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'secutityConfig': Unsatisfied dependency expressed through field 'authonUserDetails'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'roleServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'roleServicesImpl': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'tk.mybatis.mapper.common.Mapper<com.xlcxx.plodes.system.domian.Role>' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2020-03-25 16:19:04.665 [main] INFO  com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948) - {dataSource-0} closing ...
2020-03-25 16:19:04.667 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Stopping service [Tomcat]
2020-03-25 16:19:04.683 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136) - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-25 16:19:04.794 [main] ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:40) - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field mapper in com.xlcxx.plodes.baseServices.impl.BaseServices required a bean of type 'tk.mybatis.mapper.common.Mapper' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'tk.mybatis.mapper.common.Mapper' in your configuration.

2020-03-25 16:22:03.914 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$66d6de20] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:22:05.244 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin] & group[plodes-admin]
2020-03-25 16:22:05.252 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin.yaml] & group[plodes-admin]
2020-03-25 16:22:05.267 [main] INFO  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:91) - Loading nacos data, dataId: 'plodes-admin-dev.yaml', group: 'plodes-admin', data: spring:
   datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC
    username: root
    password : 123456
    initialSize: 10
    minIdle: 20
    maxActive: 1000
    maxWait : 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis : 30000
    validationQuery : SELECT 1 FROM DUAL
    testWhileIdle : false
    testOnBorrow : false
    testOnReturn : false
    poolPreparedStatements : true
    maxPoolPreparedStatementPerConnectionSize : 20
    filters: stat,wall,log4j2
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
2020-03-25 16:22:05.275 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:101) - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@984567559 {name='plodes-admin-dev.yaml', properties={spring.datasource.maxPoolPreparedStatementPerConnectionSize=20, spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver, spring.datasource.testWhileIdle=false, spring.datasource.poolPreparedStatements=true, spring.datasource.timeBetweenEvictionRunsMillis=60000, spring.datasource.minIdle=20, spring.datasource.minEvictableIdleTimeMillis=30000, spring.datasource.password=123456, spring.datasource.maxWait=60000, spring.datasource.maxActive=1000, spring.datasource.filters=stat,wall,log4j2, spring.datasource.username=root, spring.datasource.testOnBorrow=false, spring.datasource.initialSize=10, spring.datasource.url=jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC, spring.datasource.testOnReturn=false, spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000, spring.datasource.validationQuery=SELECT 1 FROM DUAL}}, NacosPropertySource@1556061855 {name='plodes-admin.yaml', properties={}}, NacosPropertySource@417875774 {name='plodes-admin', properties={}}]}
2020-03-25 16:22:05.328 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:655) - The following profiles are active: dev
2020-03-25 16:22:06.066 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-25 16:22:06.069 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-03-25 16:22:06.113 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 31ms. Found 0 Redis repository interfaces.
2020-03-25 16:22:06.371 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=0a12f03f-8394-3f70-9ab4-9fda0c34b7bb
2020-03-25 16:22:06.473 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:22:06.483 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [com.xlcxx.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$93e6f4c8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:22:06.505 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:22:06.507 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5578be42' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:22:06.508 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:22:06.512 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:22:06.520 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$66d6de20] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:22:06.752 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92) - Tomcat initialized with port(s): 8088 (http)
2020-03-25 16:22:06.762 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8088"]
2020-03-25 16:22:06.762 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
2020-03-25 16:22:06.763 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-03-25 16:22:06.873 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-03-25 16:22:06.873 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1496 ms
2020-03-25 16:22:07.148 [main] WARN  org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:558) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'secutityConfig': Unsatisfied dependency expressed through field 'authonUserDetails'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'roleServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'roleServicesImpl': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'roleMapper' defined in file [E:\git\royal\plodes\target\classes\com\plodes\plodes\mapper\system\RoleMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
2020-03-25 16:22:07.148 [main] INFO  com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948) - {dataSource-0} closing ...
2020-03-25 16:22:07.149 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Stopping service [Tomcat]
2020-03-25 16:22:07.165 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136) - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-25 16:22:07.178 [main] ERROR org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:826) - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'secutityConfig': Unsatisfied dependency expressed through field 'authonUserDetails'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'roleServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'roleServicesImpl': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'roleMapper' defined in file [E:\git\royal\plodes\target\classes\com\plodes\plodes\mapper\system\RoleMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878) ~[spring-context-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) ~[spring-context-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141) ~[spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at com.xlcxx.Application.main(Application.java:25) [classes/:?]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'roleServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'roleServicesImpl': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'roleMapper' defined in file [E:\git\royal\plodes\target\classes\com\plodes\plodes\mapper\system\RoleMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 19 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'roleServicesImpl': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'roleMapper' defined in file [E:\git\royal\plodes\target\classes\com\plodes\plodes\mapper\system\RoleMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 19 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'roleMapper' defined in file [E:\git\royal\plodes\target\classes\com\plodes\plodes\mapper\system\RoleMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 19 more
Caused by: java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
	at org.springframework.util.Assert.notNull(Assert.java:198) ~[spring-core-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.mybatis.spring.support.SqlSessionDaoSupport.checkDaoConfig(SqlSessionDaoSupport.java:122) ~[mybatis-spring-2.0.2.jar:2.0.2]
	at tk.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:76) ~[mapper-spring-1.1.5.jar:?]
	at org.springframework.dao.support.DaoSupport.afterPropertiesSet(DaoSupport.java:44) ~[spring-tx-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 19 more
2020-03-25 16:24:01.403 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$50f7322c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:24:02.733 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin] & group[plodes-admin]
2020-03-25 16:24:02.769 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin.yaml] & group[plodes-admin]
2020-03-25 16:24:02.780 [main] INFO  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:91) - Loading nacos data, dataId: 'plodes-admin-dev.yaml', group: 'plodes-admin', data: spring:
   datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC
    username: root
    password : 123456
    initialSize: 10
    minIdle: 20
    maxActive: 1000
    maxWait : 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis : 30000
    validationQuery : SELECT 1 FROM DUAL
    testWhileIdle : false
    testOnBorrow : false
    testOnReturn : false
    poolPreparedStatements : true
    maxPoolPreparedStatementPerConnectionSize : 20
    filters: stat,wall,log4j2
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
2020-03-25 16:24:02.787 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:101) - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@1733619456 {name='plodes-admin-dev.yaml', properties={spring.datasource.maxPoolPreparedStatementPerConnectionSize=20, spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver, spring.datasource.testWhileIdle=false, spring.datasource.poolPreparedStatements=true, spring.datasource.timeBetweenEvictionRunsMillis=60000, spring.datasource.minIdle=20, spring.datasource.minEvictableIdleTimeMillis=30000, spring.datasource.password=123456, spring.datasource.maxWait=60000, spring.datasource.maxActive=1000, spring.datasource.filters=stat,wall,log4j2, spring.datasource.username=root, spring.datasource.testOnBorrow=false, spring.datasource.initialSize=10, spring.datasource.url=jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC, spring.datasource.testOnReturn=false, spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000, spring.datasource.validationQuery=SELECT 1 FROM DUAL}}, NacosPropertySource@1637601612 {name='plodes-admin.yaml', properties={}}, NacosPropertySource@842957574 {name='plodes-admin', properties={}}]}
2020-03-25 16:24:02.840 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:655) - The following profiles are active: dev
2020-03-25 16:24:03.432 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-25 16:24:03.434 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-03-25 16:24:03.477 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 28ms. Found 0 Redis repository interfaces.
2020-03-25 16:24:03.726 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=0a12f03f-8394-3f70-9ab4-9fda0c34b7bb
2020-03-25 16:24:03.809 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:24:03.817 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [com.xlcxx.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$7e0748d4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:24:03.834 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:24:03.836 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@f88bfbe' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:24:03.838 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:24:03.840 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:24:03.847 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$50f7322c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:24:04.062 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92) - Tomcat initialized with port(s): 8088 (http)
2020-03-25 16:24:04.072 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8088"]
2020-03-25 16:24:04.073 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
2020-03-25 16:24:04.073 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-03-25 16:24:04.165 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-03-25 16:24:04.166 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 1302 ms
2020-03-25 16:24:04.375 [main] WARN  org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:558) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'secutityConfig': Unsatisfied dependency expressed through field 'authonUserDetails'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'roleServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'roleServicesImpl': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'roleMapper' defined in file [E:\git\royal\plodes\target\classes\com\plodes\plodes\mapper\system\RoleMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
2020-03-25 16:24:04.376 [main] INFO  com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948) - {dataSource-0} closing ...
2020-03-25 16:24:04.377 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Stopping service [Tomcat]
2020-03-25 16:24:04.392 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136) - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-25 16:24:04.399 [main] ERROR org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:826) - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'secutityConfig': Unsatisfied dependency expressed through field 'authonUserDetails'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'roleServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'roleServicesImpl': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'roleMapper' defined in file [E:\git\royal\plodes\target\classes\com\plodes\plodes\mapper\system\RoleMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878) ~[spring-context-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) ~[spring-context-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141) ~[spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at com.xlcxx.Application.main(Application.java:25) [classes/:?]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'myUserDetailService': Unsatisfied dependency expressed through field 'roleServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'roleServicesImpl': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'roleMapper' defined in file [E:\git\royal\plodes\target\classes\com\plodes\plodes\mapper\system\RoleMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 19 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'roleServicesImpl': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'roleMapper' defined in file [E:\git\royal\plodes\target\classes\com\plodes\plodes\mapper\system\RoleMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 19 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'roleMapper' defined in file [E:\git\royal\plodes\target\classes\com\plodes\plodes\mapper\system\RoleMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 19 more
Caused by: java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
	at org.springframework.util.Assert.notNull(Assert.java:198) ~[spring-core-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.mybatis.spring.support.SqlSessionDaoSupport.checkDaoConfig(SqlSessionDaoSupport.java:122) ~[mybatis-spring-2.0.2.jar:2.0.2]
	at tk.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:76) ~[mapper-spring-1.1.5.jar:?]
	at org.springframework.dao.support.DaoSupport.afterPropertiesSet(DaoSupport.java:44) ~[spring-tx-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 19 more
2020-03-25 16:24:44.524 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7e6ec60e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:24:45.824 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin] & group[plodes-admin]
2020-03-25 16:24:45.833 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin.yaml] & group[plodes-admin]
2020-03-25 16:24:45.875 [main] INFO  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:91) - Loading nacos data, dataId: 'plodes-admin-dev.yaml', group: 'plodes-admin', data: spring:
   datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC
    username: root
    password : 123456
    initialSize: 10
    minIdle: 20
    maxActive: 1000
    maxWait : 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis : 30000
    validationQuery : SELECT 1 FROM DUAL
    testWhileIdle : false
    testOnBorrow : false
    testOnReturn : false
    poolPreparedStatements : true
    maxPoolPreparedStatementPerConnectionSize : 20
    filters: stat,wall,log4j2
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
2020-03-25 16:24:45.882 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:101) - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@203472514 {name='plodes-admin-dev.yaml', properties={spring.datasource.maxPoolPreparedStatementPerConnectionSize=20, spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver, spring.datasource.testWhileIdle=false, spring.datasource.poolPreparedStatements=true, spring.datasource.timeBetweenEvictionRunsMillis=60000, spring.datasource.minIdle=20, spring.datasource.minEvictableIdleTimeMillis=30000, spring.datasource.password=123456, spring.datasource.maxWait=60000, spring.datasource.maxActive=1000, spring.datasource.filters=stat,wall,log4j2, spring.datasource.username=root, spring.datasource.testOnBorrow=false, spring.datasource.initialSize=10, spring.datasource.url=jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC, spring.datasource.testOnReturn=false, spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000, spring.datasource.validationQuery=SELECT 1 FROM DUAL}}, NacosPropertySource@331748029 {name='plodes-admin.yaml', properties={}}, NacosPropertySource@1056185446 {name='plodes-admin', properties={}}]}
2020-03-25 16:24:45.935 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:655) - The following profiles are active: dev
2020-03-25 16:24:46.725 [main] WARN  org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:558) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Cannot register bean definition [Root bean: class [null]; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] for bean 'dataSource': There is already [Root bean: class [null]; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=true; factoryBeanName=dataBasesConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/plodes/config/database/DataBasesConfig.class]] bound.
2020-03-25 16:24:46.739 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136) - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-25 16:24:46.745 [main] ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:40) - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'dataSource', defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class], could not be registered. A bean with that name has already been defined in class path resource [com/plodes/config/database/DataBasesConfig.class] and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

2020-03-25 16:25:14.770 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b6292ef1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:25:16.060 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin] & group[plodes-admin]
2020-03-25 16:25:16.073 [main] WARN  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:86) - Ignore the empty nacos configuration and get it based on dataId[plodes-admin.yaml] & group[plodes-admin]
2020-03-25 16:25:16.085 [main] INFO  com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:91) - Loading nacos data, dataId: 'plodes-admin-dev.yaml', group: 'plodes-admin', data: spring:
   datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC
    username: root
    password : 123456
    initialSize: 10
    minIdle: 20
    maxActive: 1000
    maxWait : 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis : 30000
    validationQuery : SELECT 1 FROM DUAL
    testWhileIdle : false
    testOnBorrow : false
    testOnReturn : false
    poolPreparedStatements : true
    maxPoolPreparedStatementPerConnectionSize : 20
    filters: stat,wall,log4j2
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
2020-03-25 16:25:16.093 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:101) - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@245530164 {name='plodes-admin-dev.yaml', properties={spring.datasource.maxPoolPreparedStatementPerConnectionSize=20, spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver, spring.datasource.testWhileIdle=false, spring.datasource.poolPreparedStatements=true, spring.datasource.timeBetweenEvictionRunsMillis=60000, spring.datasource.minIdle=20, spring.datasource.minEvictableIdleTimeMillis=30000, spring.datasource.password=123456, spring.datasource.maxWait=60000, spring.datasource.maxActive=1000, spring.datasource.filters=stat,wall,log4j2, spring.datasource.username=root, spring.datasource.testOnBorrow=false, spring.datasource.initialSize=10, spring.datasource.url=jdbc:mysql://192.168.8.204:3308/godly?useUnicode=true&characterEncoding=utf8&useSSL=true&&allowMultiQueries=true&serverTimezone=UTC, spring.datasource.testOnReturn=false, spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000, spring.datasource.validationQuery=SELECT 1 FROM DUAL}}, NacosPropertySource@866273692 {name='plodes-admin.yaml', properties={}}, NacosPropertySource@242408359 {name='plodes-admin', properties={}}]}
2020-03-25 16:25:16.139 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:655) - The following profiles are active: dev
2020-03-25 16:25:16.865 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249) - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-25 16:25:16.867 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-03-25 16:25:16.931 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187) - Finished Spring Data repository scanning in 44ms. Found 0 Redis repository interfaces.
2020-03-25 16:25:17.327 [main] WARN  org.mybatis.logging.Logger.warn(Logger.java:44) - No MyBatis mapper was found in '[com.xlcxx]' package. Please check your configuration.
2020-03-25 16:25:17.386 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=625f3024-0b3e-3ea4-8606-7e6a0e980c4b
2020-03-25 16:25:17.472 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:25:17.480 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [com.xlcxx.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$e3394599] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:25:17.795 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:25:17.799 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@661d88a' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:25:17.802 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:25:17.807 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:25:17.819 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b6292ef1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-25 16:25:18.032 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92) - Tomcat initialized with port(s): 8088 (http)
2020-03-25 16:25:18.060 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8088"]
2020-03-25 16:25:18.061 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
2020-03-25 16:25:18.064 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-03-25 16:25:18.165 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
2020-03-25 16:25:18.165 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 2006 ms
2020-03-25 16:25:22.654 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1220) - Using default implementation for ThreadExecutor
2020-03-25 16:25:22.668 [main] INFO  org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61) - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-03-25 16:25:22.668 [main] INFO  org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229) - Quartz Scheduler v.2.3.2 created.
2020-03-25 16:25:23.136 [main] INFO  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003) - {dataSource-1} inited
2020-03-25 16:25:23.139 [main] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.initialize(JobStoreSupport.java:672) - Using db table-based data access locking (synchronization).
2020-03-25 16:25:23.142 [main] INFO  org.quartz.impl.jdbcjobstore.JobStoreCMT.initialize(JobStoreCMT.java:145) - JobStoreCMT initialized.
2020-03-25 16:25:23.143 [main] INFO  org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294) - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'xlcxxScheduler' with instanceId 'DESKTOP-9B1Q9MI1585124722657'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-03-25 16:25:23.143 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1374) - Quartz scheduler 'xlcxxScheduler' initialized from an externally provided properties instance.
2020-03-25 16:25:23.143 [main] INFO  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1378) - Quartz scheduler version: 2.3.2
2020-03-25 16:25:23.145 [main] INFO  org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2293) - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@1a21f43f
2020-03-25 16:25:24.265 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2020-03-25 16:25:24.265 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-25 16:25:24.286 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2020-03-25 16:25:24.286 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-25 16:25:24.714 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) - Initializing ExecutorService 'applicationTaskExecutor'
2020-03-25 16:25:26.344 [main] INFO  org.springframework.cloud.commons.util.InetUtils.convertAddress(InetUtils.java:170) - Cannot determine local hostname
2020-03-25 16:25:26.402 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$1.call(InitUtils.java:56) - initializer namespace from System Property :null
2020-03-25 16:25:26.447 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$2.call(InitUtils.java:65) - initializer namespace from System Environment :null
2020-03-25 16:25:26.449 [main] INFO  com.alibaba.nacos.client.naming.utils.InitUtils$3.call(InitUtils.java:75) - initializer namespace from System Property :null
2020-03-25 16:25:26.543 [main] INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181) - Initializing ExecutorService
2020-03-25 16:25:26.611 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-03-25 16:25:26.612 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-03-25 16:25:26.613 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-03-25 16:25:26.613 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) - Clear EntityHelper entityTableMap cache.
2020-03-25 16:25:27.750 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6d0114c0, org.springframework.security.web.context.SecurityContextPersistenceFilter@4cd7d5e1, org.springframework.security.web.header.HeaderWriterFilter@32dcfeea, org.springframework.security.web.authentication.logout.LogoutFilter@21a6a494, com.xlcxx.config.auth.imageCode.img.ImageCodeFilter@40016ce1, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@236861da, org.springframework.security.web.session.ConcurrentSessionFilter@7e77678c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@46b6701e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@106cd9c8, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@7534785a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@203765b2, org.springframework.security.web.session.SessionManagementFilter@2565a7d0, org.springframework.security.web.access.ExceptionTranslationFilter@6136e1fc, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@75527e36]
2020-03-25 16:25:28.838 [main] INFO  org.springframework.cloud.commons.util.InetUtils.convertAddress(InetUtils.java:170) - Cannot determine local hostname
2020-03-25 16:25:29.125 [main] INFO  org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:732) - Will start Quartz Scheduler [xlcxxScheduler] in 1 seconds
2020-03-25 16:25:29.141 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-8088"]
2020-03-25 16:25:29.276 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) - Tomcat started on port(s): 8088 (http) with context path '/plodes'
2020-03-25 16:25:29.283 [main] INFO  com.alibaba.nacos.client.naming.beat.BeatReactor.addBeatInfo(BeatReactor.java:58) - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.213.1","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":8088,"scheduled":false,"serviceName":"DEFAULT_GROUP@@plodes-admin","stopped":false,"weight":1.0} to beat map.
2020-03-25 16:25:29.571 [main] INFO  com.alibaba.nacos.client.naming.net.NamingProxy.registerService(NamingProxy.java:172) - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@plodes-admin with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.213.1","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":8088,"weight":1.0}
2020-03-25 16:25:29.614 [main] INFO  com.alibaba.cloud.nacos.registry.NacosServiceRegistry.register(NacosServiceRegistry.java:62) - nacos registry, plodes-admin 192.168.213.1:8088 register finished
2020-03-25 16:25:29.616 [main] INFO  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61) - Started Application in 16.782 seconds (JVM running for 18.946)
2020-03-25 16:25:29.620 [main] INFO  com.alibaba.nacos.client.config.impl.ClientWorker.addCacheDataIfAbsent(ClientWorker.java:202) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [subscribe] plodes-admin.yaml+plodes-admin+0cc9a9ed-a7fa-4af5-8a88-82c29e891b08
2020-03-25 16:25:29.621 [main] INFO  com.alibaba.nacos.client.config.impl.CacheData.addListener(CacheData.java:79) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [add-listener] ok, tenant=0cc9a9ed-a7fa-4af5-8a88-82c29e891b08, dataId=plodes-admin.yaml, group=plodes-admin, cnt=1
2020-03-25 16:25:29.621 [main] INFO  com.alibaba.nacos.client.config.impl.ClientWorker.addCacheDataIfAbsent(ClientWorker.java:202) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [subscribe] plodes-admin+plodes-admin+0cc9a9ed-a7fa-4af5-8a88-82c29e891b08
2020-03-25 16:25:29.621 [main] INFO  com.alibaba.nacos.client.config.impl.CacheData.addListener(CacheData.java:79) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [add-listener] ok, tenant=0cc9a9ed-a7fa-4af5-8a88-82c29e891b08, dataId=plodes-admin, group=plodes-admin, cnt=1
2020-03-25 16:25:29.626 [main] INFO  com.alibaba.nacos.client.config.impl.ClientWorker.addCacheDataIfAbsent(ClientWorker.java:202) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [subscribe] plodes-admin-dev.yaml+plodes-admin+0cc9a9ed-a7fa-4af5-8a88-82c29e891b08
2020-03-25 16:25:29.626 [main] INFO  com.alibaba.nacos.client.config.impl.CacheData.addListener(CacheData.java:79) - [fixed-192.168.8.187_8848-0cc9a9ed-a7fa-4af5-8a88-82c29e891b08] [add-listener] ok, tenant=0cc9a9ed-a7fa-4af5-8a88-82c29e891b08, dataId=plodes-admin-dev.yaml, group=plodes-admin, cnt=1
2020-03-25 16:25:30.190 [Quartz Scheduler [xlcxxScheduler]] INFO  org.springframework.scheduling.quartz.SchedulerFactoryBean$1.run(SchedulerFactoryBean.java:748) - Starting Quartz Scheduler now, after delay of 1 seconds
2020-03-25 16:25:30.808 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.logWarnIfNonZero(JobStoreSupport.java:3644) - ClusterManager: detected 1 failed or restarted instances.
2020-03-25 16:25:30.809 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.impl.jdbcjobstore.JobStoreSupport.clusterRecover(JobStoreSupport.java:3503) - ClusterManager: Scanning for instance "DESKTOP-9B1Q9MI1585122682032"'s failed in-progress jobs.
2020-03-25 16:25:30.853 [Quartz Scheduler [xlcxxScheduler]] INFO  org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547) - Scheduler xlcxxScheduler_$_DESKTOP-9B1Q9MI1585124722657 started.
2020-03-25 16:25:40.653 [http-nio-8088-exec-1] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-25 16:25:40.653 [http-nio-8088-exec-1] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525) - Initializing Servlet 'dispatcherServlet'
2020-03-25 16:25:40.703 [http-nio-8088-exec-1] INFO  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547) - Completed initialization in 48 ms
2020-03-25 16:25:41.026 [http-nio-8088-exec-1] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.UserMapper.selectOneByExample
2020-03-25 16:25:41.027 [http-nio-8088-exec-1] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 36 ms
2020-03-25 16:25:41.027 [http-nio-8088-exec-1] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> SELECT user_id,username,password,nickname,dept_id,status FROM t_user WHERE ( ( user_id = '0101695108880048494' ) )
2020-03-25 16:25:41.058 [http-nio-8088-exec-1] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.RoleMapper.selectUserRoleByUsername
2020-03-25 16:25:41.058 [http-nio-8088-exec-1] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 28 ms
2020-03-25 16:25:41.059 [http-nio-8088-exec-1] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> select t_role.* from t_role left join t_user_role on t_role.role_id=t_user_role.role_id where t_user_role.user_id='0101695108880048494'
2020-03-25 16:25:41.257 [http-nio-8088-exec-2] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.UserMapper.selectOneByExample
2020-03-25 16:25:41.257 [http-nio-8088-exec-2] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 5 ms
2020-03-25 16:25:41.257 [http-nio-8088-exec-2] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> SELECT user_id,username,password,nickname,dept_id,status FROM t_user WHERE ( ( user_id = '0101695108880048494' ) )
2020-03-25 16:25:41.263 [http-nio-8088-exec-2] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.RoleMapper.selectUserRoleByUsername
2020-03-25 16:25:41.263 [http-nio-8088-exec-2] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 5 ms
2020-03-25 16:25:41.263 [http-nio-8088-exec-2] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> select t_role.* from t_role left join t_user_role on t_role.role_id=t_user_role.role_id where t_user_role.user_id='0101695108880048494'
2020-03-25 16:25:41.265 [http-nio-8088-exec-2] INFO  com.xlcxx.web.controller.system.LoginController.login(LoginController.java:33) - 引发跳转的请求是：http://192.168.8.230:8088/plodes/user/getZHUuser
2020-03-25 16:25:54.293 [http-nio-8088-exec-6] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.UserMapper.selectOneByExample
2020-03-25 16:25:54.293 [http-nio-8088-exec-6] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 5 ms
2020-03-25 16:25:54.293 [http-nio-8088-exec-6] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> SELECT user_id,username,password,nickname,dept_id,status FROM t_user WHERE ( ( user_id = '0101695108880048494' ) )
2020-03-25 16:25:54.301 [http-nio-8088-exec-6] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:68) - 【SQL语句Id】>>>> com.xlcxx.plodes.mapper.system.RoleMapper.selectUserRoleByUsername
2020-03-25 16:25:54.301 [http-nio-8088-exec-6] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:69) - 【SQL语句耗时】>>>> 6 ms
2020-03-25 16:25:54.301 [http-nio-8088-exec-6] INFO  com.xlcxx.config.database.SqlStatementInterceptor.printSql(SqlStatementInterceptor.java:70) - 【SQL语句】>>>> select t_role.* from t_role left join t_user_role on t_role.role_id=t_user_role.role_id where t_user_role.user_id='0101695108880048494'
